// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/queries.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/queries.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* GetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRequest_reflection_ = NULL;
struct GetRequestOneofInstance {
  const ::DataTypes::GetPersonRequest* person_request_;
  const ::DataTypes::GetCardRequest* card_request_;
  const ::DataTypes::GetLocationRequest* location_request_;
  const ::DataTypes::GetVisitRecordRequest* visit_record_request_;
}* GetRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* GetPersonRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPersonRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLocationRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLocationRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetVisitRecordRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetVisitRecordRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Page_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Page_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetCardRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetCardRequest_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2fqueries_2eproto() {
  protobuf_AddDesc_datatypes_2fqueries_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/queries.proto");
  GOOGLE_CHECK(file != NULL);
  GetResponse_descriptor_ = file->message_type(0);
  static const int GetResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, count_),
  };
  GetResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetResponse_descriptor_,
      GetResponse::default_instance_,
      GetResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _is_default_instance_));
  GetRequest_descriptor_ = file->message_type(1);
  static const int GetRequest_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GetRequest_default_oneof_instance_, person_request_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GetRequest_default_oneof_instance_, card_request_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GetRequest_default_oneof_instance_, location_request_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(GetRequest_default_oneof_instance_, visit_record_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, request_type_),
  };
  GetRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRequest_descriptor_,
      GetRequest::default_instance_,
      GetRequest_offsets_,
      -1,
      -1,
      -1,
      GetRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _oneof_case_[0]),
      sizeof(GetRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _is_default_instance_));
  GetPersonRequest_descriptor_ = file->message_type(2);
  static const int GetPersonRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, first_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, last_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, id_),
  };
  GetPersonRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPersonRequest_descriptor_,
      GetPersonRequest::default_instance_,
      GetPersonRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPersonRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPersonRequest, _is_default_instance_));
  GetLocationRequest_descriptor_ = file->message_type(3);
  static const int GetLocationRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, mac_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, device_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, id_),
  };
  GetLocationRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetLocationRequest_descriptor_,
      GetLocationRequest::default_instance_,
      GetLocationRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetLocationRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLocationRequest, _is_default_instance_));
  GetVisitRecordRequest_descriptor_ = file->message_type(4);
  static const int GetVisitRecordRequest_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, locations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, persons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, datetime_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, datetime_to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, id_),
  };
  GetVisitRecordRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetVisitRecordRequest_descriptor_,
      GetVisitRecordRequest::default_instance_,
      GetVisitRecordRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetVisitRecordRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetVisitRecordRequest, _is_default_instance_));
  Page_descriptor_ = file->message_type(5);
  static const int Page_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, size_),
  };
  Page_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Page_descriptor_,
      Page::default_instance_,
      Page_offsets_,
      -1,
      -1,
      -1,
      sizeof(Page),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Page, _is_default_instance_));
  GetCardRequest_descriptor_ = file->message_type(6);
  static const int GetCardRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, search_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, unique_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, owners_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, page_),
  };
  GetCardRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetCardRequest_descriptor_,
      GetCardRequest::default_instance_,
      GetCardRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetCardRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetCardRequest, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2fqueries_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetResponse_descriptor_, &GetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRequest_descriptor_, &GetRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPersonRequest_descriptor_, &GetPersonRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetLocationRequest_descriptor_, &GetLocationRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetVisitRecordRequest_descriptor_, &GetVisitRecordRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Page_descriptor_, &Page::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetCardRequest_descriptor_, &GetCardRequest::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2fqueries_2eproto() {
  delete GetResponse::default_instance_;
  delete GetResponse_reflection_;
  delete GetRequest::default_instance_;
  delete GetRequest_default_oneof_instance_;
  delete GetRequest_reflection_;
  delete GetPersonRequest::default_instance_;
  delete GetPersonRequest_reflection_;
  delete GetLocationRequest::default_instance_;
  delete GetLocationRequest_reflection_;
  delete GetVisitRecordRequest::default_instance_;
  delete GetVisitRecordRequest_reflection_;
  delete Page::default_instance_;
  delete Page_reflection_;
  delete GetCardRequest::default_instance_;
  delete GetCardRequest_reflection_;
}

void protobuf_AddDesc_datatypes_2fqueries_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fvisit_5frecord_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fkey_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fentity_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fdatetime_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027datatypes/queries.proto\022\tDataTypes\032\034da"
    "tatypes/visit_record.proto\032\023datatypes/ke"
    "y.proto\032\026datatypes/entity.proto\032\030datatyp"
    "es/datetime.proto\"@\n\013GetResponse\022\"\n\005item"
    "s\030\001 \001(\0132\023.DataTypes.Entities\022\r\n\005count\030\002 "
    "\001(\003\"\203\002\n\nGetRequest\0225\n\016person_request\030\001 \001"
    "(\0132\033.DataTypes.GetPersonRequestH\000\0221\n\014car"
    "d_request\030\002 \001(\0132\031.DataTypes.GetCardReque"
    "stH\000\0229\n\020location_request\030\003 \001(\0132\035.DataTyp"
    "es.GetLocationRequestH\000\022@\n\024visit_record_"
    "request\030\004 \001(\0132 .DataTypes.GetVisitRecord"
    "RequestH\000B\016\n\014request_type\"\272\001\n\020GetPersonR"
    "equest\022\023\n\013search_text\030\001 \001(\t\022\022\n\nfirst_nam"
    "e\030\002 \001(\t\022\021\n\tlast_name\030\003 \001(\t\022\014\n\004card\030\004 \001(\t"
    "\022!\n\tlocations\030\005 \003(\0132\016.DataTypes.Key\022\035\n\004p"
    "age\030\006 \001(\0132\017.DataTypes.Page\022\032\n\002id\030\007 \001(\0132\016"
    ".DataTypes.Key\"\234\001\n\022GetLocationRequest\022\023\n"
    "\013search_text\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013mac_"
    "address\030\003 \001(\t\022\023\n\013device_name\030\004 \001(\t\022\035\n\004pa"
    "ge\030\005 \001(\0132\017.DataTypes.Page\022\032\n\002id\030\006 \001(\0132\016."
    "DataTypes.Key\"\266\002\n\025GetVisitRecordRequest\022"
    "\023\n\013search_text\030\001 \001(\t\022%\n\005state\030\002 \001(\0162\026.Da"
    "taTypes.AccessState\022!\n\tlocations\030\003 \003(\0132\016"
    ".DataTypes.Key\022\037\n\007persons\030\004 \003(\0132\016.DataTy"
    "pes.Key\022*\n\rdatetime_from\030\005 \001(\0132\023.DataTyp"
    "es.DateTime\022(\n\013datetime_to\030\006 \001(\0132\023.DataT"
    "ypes.DateTime\022\014\n\004card\030\007 \001(\t\022\035\n\004page\030\010 \001("
    "\0132\017.DataTypes.Page\022\032\n\002id\030\t \001(\0132\016.DataTyp"
    "es.Key\"#\n\004Page\022\r\n\005index\030\001 \001(\005\022\014\n\004size\030\002 "
    "\001(\005\"\177\n\016GetCardRequest\022\023\n\013search_text\030\001 \001"
    "(\t\022\031\n\021unique_identifier\030\002 \001(\t\022\036\n\006owners\030"
    "\003 \003(\0132\016.DataTypes.Key\022\035\n\004page\030\004 \001(\0132\017.Da"
    "taTypes.PageBL\n\007ex.grpcZ;github.com/Eneb"
    "ra/ServiceCoordinator/grpc/datatypes/que"
    "ries\242\002\003RTGb\006proto3", 1378);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/queries.proto", &protobuf_RegisterTypes);
  GetResponse::default_instance_ = new GetResponse();
  GetRequest::default_instance_ = new GetRequest();
  GetRequest_default_oneof_instance_ = new GetRequestOneofInstance();
  GetPersonRequest::default_instance_ = new GetPersonRequest();
  GetLocationRequest::default_instance_ = new GetLocationRequest();
  GetVisitRecordRequest::default_instance_ = new GetVisitRecordRequest();
  Page::default_instance_ = new Page();
  GetCardRequest::default_instance_ = new GetCardRequest();
  GetResponse::default_instance_->InitAsDefaultInstance();
  GetRequest::default_instance_->InitAsDefaultInstance();
  GetPersonRequest::default_instance_->InitAsDefaultInstance();
  GetLocationRequest::default_instance_->InitAsDefaultInstance();
  GetVisitRecordRequest::default_instance_->InitAsDefaultInstance();
  Page::default_instance_->InitAsDefaultInstance();
  GetCardRequest::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2fqueries_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2fqueries_2eproto {
  StaticDescriptorInitializer_datatypes_2fqueries_2eproto() {
    protobuf_AddDesc_datatypes_2fqueries_2eproto();
  }
} static_descriptor_initializer_datatypes_2fqueries_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kItemsFieldNumber;
const int GetResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.GetResponse)
}

void GetResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  items_ = const_cast< ::DataTypes::Entities*>(&::DataTypes::Entities::default_instance());
}

GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.GetResponse)
}

void GetResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  items_ = NULL;
  count_ = GOOGLE_LONGLONG(0);
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:DataTypes.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  if (this != default_instance_) {
    delete items_;
  }
}

void GetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetResponse_descriptor_;
}

const GetResponse& GetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

GetResponse* GetResponse::default_instance_ = NULL;

GetResponse* GetResponse::New(::google::protobuf::Arena* arena) const {
  GetResponse* n = new GetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.GetResponse)
  if (GetArenaNoVirtual() == NULL && items_ != NULL) delete items_;
  items_ = NULL;
  count_ = GOOGLE_LONGLONG(0);
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.GetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Entities items = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int64 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.GetResponse)
  // optional .DataTypes.Entities items = 1;
  if (this->has_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->items_, output);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.GetResponse)
}

::google::protobuf::uint8* GetResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.GetResponse)
  // optional .DataTypes.Entities items = 1;
  if (this->has_items()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->items_, target);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.GetResponse)
  return target;
}

int GetResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.GetResponse)
  int total_size = 0;

  // optional .DataTypes.Entities items = 1;
  if (this->has_items()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->items_);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.GetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.GetResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_items()) {
    mutable_items()->::DataTypes::Entities::MergeFrom(from.items());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {

  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  std::swap(items_, other->items_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetResponse_descriptor_;
  metadata.reflection = GetResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResponse

// optional .DataTypes.Entities items = 1;
bool GetResponse::has_items() const {
  return !_is_default_instance_ && items_ != NULL;
}
void GetResponse::clear_items() {
  if (GetArenaNoVirtual() == NULL && items_ != NULL) delete items_;
  items_ = NULL;
}
const ::DataTypes::Entities& GetResponse::items() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetResponse.items)
  return items_ != NULL ? *items_ : *default_instance_->items_;
}
::DataTypes::Entities* GetResponse::mutable_items() {
  
  if (items_ == NULL) {
    items_ = new ::DataTypes::Entities;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetResponse.items)
  return items_;
}
::DataTypes::Entities* GetResponse::release_items() {
  // @@protoc_insertion_point(field_release:DataTypes.GetResponse.items)
  
  ::DataTypes::Entities* temp = items_;
  items_ = NULL;
  return temp;
}
void GetResponse::set_allocated_items(::DataTypes::Entities* items) {
  delete items_;
  items_ = items;
  if (items) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetResponse.items)
}

// optional int64 count = 2;
void GetResponse::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetResponse::count() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetResponse.count)
  return count_;
}
 void GetResponse::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.GetResponse.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kPersonRequestFieldNumber;
const int GetRequest::kCardRequestFieldNumber;
const int GetRequest::kLocationRequestFieldNumber;
const int GetRequest::kVisitRecordRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.GetRequest)
}

void GetRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  GetRequest_default_oneof_instance_->person_request_ = const_cast< ::DataTypes::GetPersonRequest*>(&::DataTypes::GetPersonRequest::default_instance());
  GetRequest_default_oneof_instance_->card_request_ = const_cast< ::DataTypes::GetCardRequest*>(&::DataTypes::GetCardRequest::default_instance());
  GetRequest_default_oneof_instance_->location_request_ = const_cast< ::DataTypes::GetLocationRequest*>(&::DataTypes::GetLocationRequest::default_instance());
  GetRequest_default_oneof_instance_->visit_record_request_ = const_cast< ::DataTypes::GetVisitRecordRequest*>(&::DataTypes::GetVisitRecordRequest::default_instance());
}

GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.GetRequest)
}

void GetRequest::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_request_type();
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:DataTypes.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  if (has_request_type()) {
    clear_request_type();
  }
  if (this != default_instance_) {
  }
}

void GetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRequest_descriptor_;
}

const GetRequest& GetRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

GetRequest* GetRequest::default_instance_ = NULL;

GetRequest* GetRequest::New(::google::protobuf::Arena* arena) const {
  GetRequest* n = new GetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:DataTypes.GetRequest)
  switch(request_type_case()) {
    case kPersonRequest: {
      delete request_type_.person_request_;
      break;
    }
    case kCardRequest: {
      delete request_type_.card_request_;
      break;
    }
    case kLocationRequest: {
      delete request_type_.location_request_;
      break;
    }
    case kVisitRecordRequest: {
      delete request_type_.visit_record_request_;
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.GetRequest)
  clear_request_type();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.GetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.GetPersonRequest person_request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_person_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_card_request;
        break;
      }

      // optional .DataTypes.GetCardRequest card_request = 2;
      case 2: {
        if (tag == 18) {
         parse_card_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_card_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_location_request;
        break;
      }

      // optional .DataTypes.GetLocationRequest location_request = 3;
      case 3: {
        if (tag == 26) {
         parse_location_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_visit_record_request;
        break;
      }

      // optional .DataTypes.GetVisitRecordRequest visit_record_request = 4;
      case 4: {
        if (tag == 34) {
         parse_visit_record_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_visit_record_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.GetRequest)
  // optional .DataTypes.GetPersonRequest person_request = 1;
  if (has_person_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *request_type_.person_request_, output);
  }

  // optional .DataTypes.GetCardRequest card_request = 2;
  if (has_card_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *request_type_.card_request_, output);
  }

  // optional .DataTypes.GetLocationRequest location_request = 3;
  if (has_location_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *request_type_.location_request_, output);
  }

  // optional .DataTypes.GetVisitRecordRequest visit_record_request = 4;
  if (has_visit_record_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *request_type_.visit_record_request_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.GetRequest)
}

::google::protobuf::uint8* GetRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.GetRequest)
  // optional .DataTypes.GetPersonRequest person_request = 1;
  if (has_person_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *request_type_.person_request_, target);
  }

  // optional .DataTypes.GetCardRequest card_request = 2;
  if (has_card_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *request_type_.card_request_, target);
  }

  // optional .DataTypes.GetLocationRequest location_request = 3;
  if (has_location_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *request_type_.location_request_, target);
  }

  // optional .DataTypes.GetVisitRecordRequest visit_record_request = 4;
  if (has_visit_record_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *request_type_.visit_record_request_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.GetRequest)
  return target;
}

int GetRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.GetRequest)
  int total_size = 0;

  switch (request_type_case()) {
    // optional .DataTypes.GetPersonRequest person_request = 1;
    case kPersonRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_type_.person_request_);
      break;
    }
    // optional .DataTypes.GetCardRequest card_request = 2;
    case kCardRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_type_.card_request_);
      break;
    }
    // optional .DataTypes.GetLocationRequest location_request = 3;
    case kLocationRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_type_.location_request_);
      break;
    }
    // optional .DataTypes.GetVisitRecordRequest visit_record_request = 4;
    case kVisitRecordRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_type_.visit_record_request_);
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.GetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.GetRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.request_type_case()) {
    case kPersonRequest: {
      mutable_person_request()->::DataTypes::GetPersonRequest::MergeFrom(from.person_request());
      break;
    }
    case kCardRequest: {
      mutable_card_request()->::DataTypes::GetCardRequest::MergeFrom(from.card_request());
      break;
    }
    case kLocationRequest: {
      mutable_location_request()->::DataTypes::GetLocationRequest::MergeFrom(from.location_request());
      break;
    }
    case kVisitRecordRequest: {
      mutable_visit_record_request()->::DataTypes::GetVisitRecordRequest::MergeFrom(from.visit_record_request());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {

  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  std::swap(request_type_, other->request_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRequest_descriptor_;
  metadata.reflection = GetRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// optional .DataTypes.GetPersonRequest person_request = 1;
bool GetRequest::has_person_request() const {
  return request_type_case() == kPersonRequest;
}
void GetRequest::set_has_person_request() {
  _oneof_case_[0] = kPersonRequest;
}
void GetRequest::clear_person_request() {
  if (has_person_request()) {
    delete request_type_.person_request_;
    clear_has_request_type();
  }
}
 const ::DataTypes::GetPersonRequest& GetRequest::person_request() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetRequest.person_request)
  return has_person_request()
      ? *request_type_.person_request_
      : ::DataTypes::GetPersonRequest::default_instance();
}
::DataTypes::GetPersonRequest* GetRequest::mutable_person_request() {
  if (!has_person_request()) {
    clear_request_type();
    set_has_person_request();
    request_type_.person_request_ = new ::DataTypes::GetPersonRequest;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetRequest.person_request)
  return request_type_.person_request_;
}
::DataTypes::GetPersonRequest* GetRequest::release_person_request() {
  // @@protoc_insertion_point(field_release:DataTypes.GetRequest.person_request)
  if (has_person_request()) {
    clear_has_request_type();
    ::DataTypes::GetPersonRequest* temp = request_type_.person_request_;
    request_type_.person_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetRequest::set_allocated_person_request(::DataTypes::GetPersonRequest* person_request) {
  clear_request_type();
  if (person_request) {
    set_has_person_request();
    request_type_.person_request_ = person_request;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetRequest.person_request)
}

// optional .DataTypes.GetCardRequest card_request = 2;
bool GetRequest::has_card_request() const {
  return request_type_case() == kCardRequest;
}
void GetRequest::set_has_card_request() {
  _oneof_case_[0] = kCardRequest;
}
void GetRequest::clear_card_request() {
  if (has_card_request()) {
    delete request_type_.card_request_;
    clear_has_request_type();
  }
}
 const ::DataTypes::GetCardRequest& GetRequest::card_request() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetRequest.card_request)
  return has_card_request()
      ? *request_type_.card_request_
      : ::DataTypes::GetCardRequest::default_instance();
}
::DataTypes::GetCardRequest* GetRequest::mutable_card_request() {
  if (!has_card_request()) {
    clear_request_type();
    set_has_card_request();
    request_type_.card_request_ = new ::DataTypes::GetCardRequest;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetRequest.card_request)
  return request_type_.card_request_;
}
::DataTypes::GetCardRequest* GetRequest::release_card_request() {
  // @@protoc_insertion_point(field_release:DataTypes.GetRequest.card_request)
  if (has_card_request()) {
    clear_has_request_type();
    ::DataTypes::GetCardRequest* temp = request_type_.card_request_;
    request_type_.card_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetRequest::set_allocated_card_request(::DataTypes::GetCardRequest* card_request) {
  clear_request_type();
  if (card_request) {
    set_has_card_request();
    request_type_.card_request_ = card_request;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetRequest.card_request)
}

// optional .DataTypes.GetLocationRequest location_request = 3;
bool GetRequest::has_location_request() const {
  return request_type_case() == kLocationRequest;
}
void GetRequest::set_has_location_request() {
  _oneof_case_[0] = kLocationRequest;
}
void GetRequest::clear_location_request() {
  if (has_location_request()) {
    delete request_type_.location_request_;
    clear_has_request_type();
  }
}
 const ::DataTypes::GetLocationRequest& GetRequest::location_request() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetRequest.location_request)
  return has_location_request()
      ? *request_type_.location_request_
      : ::DataTypes::GetLocationRequest::default_instance();
}
::DataTypes::GetLocationRequest* GetRequest::mutable_location_request() {
  if (!has_location_request()) {
    clear_request_type();
    set_has_location_request();
    request_type_.location_request_ = new ::DataTypes::GetLocationRequest;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetRequest.location_request)
  return request_type_.location_request_;
}
::DataTypes::GetLocationRequest* GetRequest::release_location_request() {
  // @@protoc_insertion_point(field_release:DataTypes.GetRequest.location_request)
  if (has_location_request()) {
    clear_has_request_type();
    ::DataTypes::GetLocationRequest* temp = request_type_.location_request_;
    request_type_.location_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetRequest::set_allocated_location_request(::DataTypes::GetLocationRequest* location_request) {
  clear_request_type();
  if (location_request) {
    set_has_location_request();
    request_type_.location_request_ = location_request;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetRequest.location_request)
}

// optional .DataTypes.GetVisitRecordRequest visit_record_request = 4;
bool GetRequest::has_visit_record_request() const {
  return request_type_case() == kVisitRecordRequest;
}
void GetRequest::set_has_visit_record_request() {
  _oneof_case_[0] = kVisitRecordRequest;
}
void GetRequest::clear_visit_record_request() {
  if (has_visit_record_request()) {
    delete request_type_.visit_record_request_;
    clear_has_request_type();
  }
}
 const ::DataTypes::GetVisitRecordRequest& GetRequest::visit_record_request() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetRequest.visit_record_request)
  return has_visit_record_request()
      ? *request_type_.visit_record_request_
      : ::DataTypes::GetVisitRecordRequest::default_instance();
}
::DataTypes::GetVisitRecordRequest* GetRequest::mutable_visit_record_request() {
  if (!has_visit_record_request()) {
    clear_request_type();
    set_has_visit_record_request();
    request_type_.visit_record_request_ = new ::DataTypes::GetVisitRecordRequest;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetRequest.visit_record_request)
  return request_type_.visit_record_request_;
}
::DataTypes::GetVisitRecordRequest* GetRequest::release_visit_record_request() {
  // @@protoc_insertion_point(field_release:DataTypes.GetRequest.visit_record_request)
  if (has_visit_record_request()) {
    clear_has_request_type();
    ::DataTypes::GetVisitRecordRequest* temp = request_type_.visit_record_request_;
    request_type_.visit_record_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GetRequest::set_allocated_visit_record_request(::DataTypes::GetVisitRecordRequest* visit_record_request) {
  clear_request_type();
  if (visit_record_request) {
    set_has_visit_record_request();
    request_type_.visit_record_request_ = visit_record_request;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetRequest.visit_record_request)
}

bool GetRequest::has_request_type() const {
  return request_type_case() != REQUEST_TYPE_NOT_SET;
}
void GetRequest::clear_has_request_type() {
  _oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}
GetRequest::RequestTypeCase GetRequest::request_type_case() const {
  return GetRequest::RequestTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPersonRequest::kSearchTextFieldNumber;
const int GetPersonRequest::kFirstNameFieldNumber;
const int GetPersonRequest::kLastNameFieldNumber;
const int GetPersonRequest::kCardFieldNumber;
const int GetPersonRequest::kLocationsFieldNumber;
const int GetPersonRequest::kPageFieldNumber;
const int GetPersonRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPersonRequest::GetPersonRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.GetPersonRequest)
}

void GetPersonRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::DataTypes::Page*>(&::DataTypes::Page::default_instance());
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

GetPersonRequest::GetPersonRequest(const GetPersonRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.GetPersonRequest)
}

void GetPersonRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
  id_ = NULL;
}

GetPersonRequest::~GetPersonRequest() {
  // @@protoc_insertion_point(destructor:DataTypes.GetPersonRequest)
  SharedDtor();
}

void GetPersonRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
    delete id_;
  }
}

void GetPersonRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPersonRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPersonRequest_descriptor_;
}

const GetPersonRequest& GetPersonRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

GetPersonRequest* GetPersonRequest::default_instance_ = NULL;

GetPersonRequest* GetPersonRequest::New(::google::protobuf::Arena* arena) const {
  GetPersonRequest* n = new GetPersonRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPersonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.GetPersonRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  locations_.Clear();
}

bool GetPersonRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.GetPersonRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetPersonRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_first_name;
        break;
      }

      // optional string first_name = 2;
      case 2: {
        if (tag == 18) {
         parse_first_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_name().data(), this->first_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetPersonRequest.first_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_last_name;
        break;
      }

      // optional string last_name = 3;
      case 3: {
        if (tag == 26) {
         parse_last_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_name().data(), this->last_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetPersonRequest.last_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_card;
        break;
      }

      // optional string card = 4;
      case 4: {
        if (tag == 34) {
         parse_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card().data(), this->card().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetPersonRequest.card"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_locations;
        break;
      }

      // repeated .DataTypes.Key locations = 5;
      case 5: {
        if (tag == 42) {
         parse_locations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_locations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_page;
        break;
      }

      // optional .DataTypes.Page page = 6;
      case 6: {
        if (tag == 50) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_id;
        break;
      }

      // optional .DataTypes.Key id = 7;
      case 7: {
        if (tag == 58) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.GetPersonRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.GetPersonRequest)
  return false;
#undef DO_
}

void GetPersonRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.GetPersonRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->first_name(), output);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->last_name(), output);
  }

  // optional string card = 4;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.card");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->card(), output);
  }

  // repeated .DataTypes.Key locations = 5;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->locations(i), output);
  }

  // optional .DataTypes.Page page = 6;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->page_, output);
  }

  // optional .DataTypes.Key id = 7;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->id_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.GetPersonRequest)
}

::google::protobuf::uint8* GetPersonRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.GetPersonRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->first_name(), target);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->last_name(), target);
  }

  // optional string card = 4;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetPersonRequest.card");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->card(), target);
  }

  // repeated .DataTypes.Key locations = 5;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->locations(i), target);
  }

  // optional .DataTypes.Page page = 6;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->page_, target);
  }

  // optional .DataTypes.Key id = 7;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->id_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.GetPersonRequest)
  return target;
}

int GetPersonRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.GetPersonRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_name());
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_name());
  }

  // optional string card = 4;
  if (this->card().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card());
  }

  // optional .DataTypes.Page page = 6;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // optional .DataTypes.Key id = 7;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // repeated .DataTypes.Key locations = 5;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locations(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPersonRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.GetPersonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPersonRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPersonRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.GetPersonRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.GetPersonRequest)
    MergeFrom(*source);
  }
}

void GetPersonRequest::MergeFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.GetPersonRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  locations_.MergeFrom(from.locations_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.first_name().size() > 0) {

    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  if (from.last_name().size() > 0) {

    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  if (from.card().size() > 0) {

    card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_);
  }
  if (from.has_page()) {
    mutable_page()->::DataTypes::Page::MergeFrom(from.page());
  }
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
}

void GetPersonRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPersonRequest::CopyFrom(const GetPersonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.GetPersonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPersonRequest::IsInitialized() const {

  return true;
}

void GetPersonRequest::Swap(GetPersonRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPersonRequest::InternalSwap(GetPersonRequest* other) {
  search_text_.Swap(&other->search_text_);
  first_name_.Swap(&other->first_name_);
  last_name_.Swap(&other->last_name_);
  card_.Swap(&other->card_);
  locations_.UnsafeArenaSwap(&other->locations_);
  std::swap(page_, other->page_);
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPersonRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPersonRequest_descriptor_;
  metadata.reflection = GetPersonRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPersonRequest

// optional string search_text = 1;
void GetPersonRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::search_text() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetPersonRequest.search_text)
}
 void GetPersonRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetPersonRequest.search_text)
}
 void GetPersonRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetPersonRequest.search_text)
}
 ::std::string* GetPersonRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:DataTypes.GetPersonRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetPersonRequest.search_text)
}

// optional string first_name = 2;
void GetPersonRequest::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::first_name() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.first_name)
  return first_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetPersonRequest.first_name)
}
 void GetPersonRequest::set_first_name(const char* value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetPersonRequest.first_name)
}
 void GetPersonRequest::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetPersonRequest.first_name)
}
 ::std::string* GetPersonRequest::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_first_name() {
  // @@protoc_insertion_point(field_release:DataTypes.GetPersonRequest.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetPersonRequest.first_name)
}

// optional string last_name = 3;
void GetPersonRequest::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::last_name() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.last_name)
  return last_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetPersonRequest.last_name)
}
 void GetPersonRequest::set_last_name(const char* value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetPersonRequest.last_name)
}
 void GetPersonRequest::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetPersonRequest.last_name)
}
 ::std::string* GetPersonRequest::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_last_name() {
  // @@protoc_insertion_point(field_release:DataTypes.GetPersonRequest.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetPersonRequest.last_name)
}

// optional string card = 4;
void GetPersonRequest::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetPersonRequest::card() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_card(const ::std::string& value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetPersonRequest.card)
}
 void GetPersonRequest::set_card(const char* value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetPersonRequest.card)
}
 void GetPersonRequest::set_card(const char* value, size_t size) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetPersonRequest.card)
}
 ::std::string* GetPersonRequest::mutable_card() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetPersonRequest::release_card() {
  // @@protoc_insertion_point(field_release:DataTypes.GetPersonRequest.card)
  
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetPersonRequest::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    
  } else {
    
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetPersonRequest.card)
}

// repeated .DataTypes.Key locations = 5;
int GetPersonRequest::locations_size() const {
  return locations_.size();
}
void GetPersonRequest::clear_locations() {
  locations_.Clear();
}
const ::DataTypes::Key& GetPersonRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.locations)
  return locations_.Get(index);
}
::DataTypes::Key* GetPersonRequest::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.locations)
  return locations_.Mutable(index);
}
::DataTypes::Key* GetPersonRequest::add_locations() {
  // @@protoc_insertion_point(field_add:DataTypes.GetPersonRequest.locations)
  return locations_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
GetPersonRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.GetPersonRequest.locations)
  return &locations_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
GetPersonRequest::locations() const {
  // @@protoc_insertion_point(field_list:DataTypes.GetPersonRequest.locations)
  return locations_;
}

// optional .DataTypes.Page page = 6;
bool GetPersonRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetPersonRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::DataTypes::Page& GetPersonRequest::page() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::DataTypes::Page* GetPersonRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::DataTypes::Page;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.page)
  return page_;
}
::DataTypes::Page* GetPersonRequest::release_page() {
  // @@protoc_insertion_point(field_release:DataTypes.GetPersonRequest.page)
  
  ::DataTypes::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetPersonRequest::set_allocated_page(::DataTypes::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetPersonRequest.page)
}

// optional .DataTypes.Key id = 7;
bool GetPersonRequest::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void GetPersonRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& GetPersonRequest::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetPersonRequest.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* GetPersonRequest::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetPersonRequest.id)
  return id_;
}
::DataTypes::Key* GetPersonRequest::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.GetPersonRequest.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void GetPersonRequest::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetPersonRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLocationRequest::kSearchTextFieldNumber;
const int GetLocationRequest::kNameFieldNumber;
const int GetLocationRequest::kMacAddressFieldNumber;
const int GetLocationRequest::kDeviceNameFieldNumber;
const int GetLocationRequest::kPageFieldNumber;
const int GetLocationRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLocationRequest::GetLocationRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.GetLocationRequest)
}

void GetLocationRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::DataTypes::Page*>(&::DataTypes::Page::default_instance());
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

GetLocationRequest::GetLocationRequest(const GetLocationRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.GetLocationRequest)
}

void GetLocationRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
  id_ = NULL;
}

GetLocationRequest::~GetLocationRequest() {
  // @@protoc_insertion_point(destructor:DataTypes.GetLocationRequest)
  SharedDtor();
}

void GetLocationRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
    delete id_;
  }
}

void GetLocationRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLocationRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLocationRequest_descriptor_;
}

const GetLocationRequest& GetLocationRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

GetLocationRequest* GetLocationRequest::default_instance_ = NULL;

GetLocationRequest* GetLocationRequest::New(::google::protobuf::Arena* arena) const {
  GetLocationRequest* n = new GetLocationRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLocationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.GetLocationRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}

bool GetLocationRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.GetLocationRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetLocationRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetLocationRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_mac_address;
        break;
      }

      // optional string mac_address = 3;
      case 3: {
        if (tag == 26) {
         parse_mac_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_address().data(), this->mac_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetLocationRequest.mac_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device_name;
        break;
      }

      // optional string device_name = 4;
      case 4: {
        if (tag == 34) {
         parse_device_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_name().data(), this->device_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetLocationRequest.device_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_page;
        break;
      }

      // optional .DataTypes.Page page = 5;
      case 5: {
        if (tag == 42) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_id;
        break;
      }

      // optional .DataTypes.Key id = 6;
      case 6: {
        if (tag == 50) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.GetLocationRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.GetLocationRequest)
  return false;
#undef DO_
}

void GetLocationRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.GetLocationRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mac_address(), output);
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_name(), output);
  }

  // optional .DataTypes.Page page = 5;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->page_, output);
  }

  // optional .DataTypes.Key id = 6;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->id_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.GetLocationRequest)
}

::google::protobuf::uint8* GetLocationRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.GetLocationRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mac_address(), target);
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetLocationRequest.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_name(), target);
  }

  // optional .DataTypes.Page page = 5;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->page_, target);
  }

  // optional .DataTypes.Key id = 6;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->id_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.GetLocationRequest)
  return target;
}

int GetLocationRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.GetLocationRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string mac_address = 3;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_address());
  }

  // optional string device_name = 4;
  if (this->device_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_name());
  }

  // optional .DataTypes.Page page = 5;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // optional .DataTypes.Key id = 6;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLocationRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.GetLocationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetLocationRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLocationRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.GetLocationRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.GetLocationRequest)
    MergeFrom(*source);
  }
}

void GetLocationRequest::MergeFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.GetLocationRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.device_name().size() > 0) {

    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  if (from.has_page()) {
    mutable_page()->::DataTypes::Page::MergeFrom(from.page());
  }
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
}

void GetLocationRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLocationRequest::CopyFrom(const GetLocationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.GetLocationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLocationRequest::IsInitialized() const {

  return true;
}

void GetLocationRequest::Swap(GetLocationRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLocationRequest::InternalSwap(GetLocationRequest* other) {
  search_text_.Swap(&other->search_text_);
  name_.Swap(&other->name_);
  mac_address_.Swap(&other->mac_address_);
  device_name_.Swap(&other->device_name_);
  std::swap(page_, other->page_);
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLocationRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLocationRequest_descriptor_;
  metadata.reflection = GetLocationRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLocationRequest

// optional string search_text = 1;
void GetLocationRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::search_text() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetLocationRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetLocationRequest.search_text)
}
 void GetLocationRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetLocationRequest.search_text)
}
 void GetLocationRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetLocationRequest.search_text)
}
 ::std::string* GetLocationRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetLocationRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:DataTypes.GetLocationRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetLocationRequest.search_text)
}

// optional string name = 2;
void GetLocationRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::name() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetLocationRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetLocationRequest.name)
}
 void GetLocationRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetLocationRequest.name)
}
 void GetLocationRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetLocationRequest.name)
}
 ::std::string* GetLocationRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetLocationRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_name() {
  // @@protoc_insertion_point(field_release:DataTypes.GetLocationRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetLocationRequest.name)
}

// optional string mac_address = 3;
void GetLocationRequest::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::mac_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetLocationRequest.mac_address)
  return mac_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetLocationRequest.mac_address)
}
 void GetLocationRequest::set_mac_address(const char* value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetLocationRequest.mac_address)
}
 void GetLocationRequest::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetLocationRequest.mac_address)
}
 ::std::string* GetLocationRequest::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetLocationRequest.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_mac_address() {
  // @@protoc_insertion_point(field_release:DataTypes.GetLocationRequest.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetLocationRequest.mac_address)
}

// optional string device_name = 4;
void GetLocationRequest::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetLocationRequest::device_name() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetLocationRequest.device_name)
  return device_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetLocationRequest.device_name)
}
 void GetLocationRequest::set_device_name(const char* value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetLocationRequest.device_name)
}
 void GetLocationRequest::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetLocationRequest.device_name)
}
 ::std::string* GetLocationRequest::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetLocationRequest.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetLocationRequest::release_device_name() {
  // @@protoc_insertion_point(field_release:DataTypes.GetLocationRequest.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetLocationRequest::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetLocationRequest.device_name)
}

// optional .DataTypes.Page page = 5;
bool GetLocationRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetLocationRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::DataTypes::Page& GetLocationRequest::page() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetLocationRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::DataTypes::Page* GetLocationRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::DataTypes::Page;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetLocationRequest.page)
  return page_;
}
::DataTypes::Page* GetLocationRequest::release_page() {
  // @@protoc_insertion_point(field_release:DataTypes.GetLocationRequest.page)
  
  ::DataTypes::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetLocationRequest::set_allocated_page(::DataTypes::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetLocationRequest.page)
}

// optional .DataTypes.Key id = 6;
bool GetLocationRequest::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void GetLocationRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& GetLocationRequest::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetLocationRequest.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* GetLocationRequest::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetLocationRequest.id)
  return id_;
}
::DataTypes::Key* GetLocationRequest::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.GetLocationRequest.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void GetLocationRequest::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetLocationRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVisitRecordRequest::kSearchTextFieldNumber;
const int GetVisitRecordRequest::kStateFieldNumber;
const int GetVisitRecordRequest::kLocationsFieldNumber;
const int GetVisitRecordRequest::kPersonsFieldNumber;
const int GetVisitRecordRequest::kDatetimeFromFieldNumber;
const int GetVisitRecordRequest::kDatetimeToFieldNumber;
const int GetVisitRecordRequest::kCardFieldNumber;
const int GetVisitRecordRequest::kPageFieldNumber;
const int GetVisitRecordRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVisitRecordRequest::GetVisitRecordRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.GetVisitRecordRequest)
}

void GetVisitRecordRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  datetime_from_ = const_cast< ::DataTypes::DateTime*>(&::DataTypes::DateTime::default_instance());
  datetime_to_ = const_cast< ::DataTypes::DateTime*>(&::DataTypes::DateTime::default_instance());
  page_ = const_cast< ::DataTypes::Page*>(&::DataTypes::Page::default_instance());
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

GetVisitRecordRequest::GetVisitRecordRequest(const GetVisitRecordRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.GetVisitRecordRequest)
}

void GetVisitRecordRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  datetime_from_ = NULL;
  datetime_to_ = NULL;
  card_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
  id_ = NULL;
}

GetVisitRecordRequest::~GetVisitRecordRequest() {
  // @@protoc_insertion_point(destructor:DataTypes.GetVisitRecordRequest)
  SharedDtor();
}

void GetVisitRecordRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete datetime_from_;
    delete datetime_to_;
    delete page_;
    delete id_;
  }
}

void GetVisitRecordRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetVisitRecordRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetVisitRecordRequest_descriptor_;
}

const GetVisitRecordRequest& GetVisitRecordRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

GetVisitRecordRequest* GetVisitRecordRequest::default_instance_ = NULL;

GetVisitRecordRequest* GetVisitRecordRequest::New(::google::protobuf::Arena* arena) const {
  GetVisitRecordRequest* n = new GetVisitRecordRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetVisitRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.GetVisitRecordRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
  if (GetArenaNoVirtual() == NULL && datetime_from_ != NULL) delete datetime_from_;
  datetime_from_ = NULL;
  if (GetArenaNoVirtual() == NULL && datetime_to_ != NULL) delete datetime_to_;
  datetime_to_ = NULL;
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  locations_.Clear();
  persons_.Clear();
}

bool GetVisitRecordRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.GetVisitRecordRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetVisitRecordRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .DataTypes.AccessState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::AccessState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locations;
        break;
      }

      // repeated .DataTypes.Key locations = 3;
      case 3: {
        if (tag == 26) {
         parse_locations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_locations;
        if (input->ExpectTag(34)) goto parse_loop_persons;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .DataTypes.Key persons = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_persons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_persons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_persons;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_datetime_from;
        break;
      }

      // optional .DataTypes.DateTime datetime_from = 5;
      case 5: {
        if (tag == 42) {
         parse_datetime_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datetime_from()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_datetime_to;
        break;
      }

      // optional .DataTypes.DateTime datetime_to = 6;
      case 6: {
        if (tag == 50) {
         parse_datetime_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_datetime_to()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_card;
        break;
      }

      // optional string card = 7;
      case 7: {
        if (tag == 58) {
         parse_card:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card().data(), this->card().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetVisitRecordRequest.card"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_page;
        break;
      }

      // optional .DataTypes.Page page = 8;
      case 8: {
        if (tag == 66) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_id;
        break;
      }

      // optional .DataTypes.Key id = 9;
      case 9: {
        if (tag == 74) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.GetVisitRecordRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.GetVisitRecordRequest)
  return false;
#undef DO_
}

void GetVisitRecordRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.GetVisitRecordRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetVisitRecordRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // repeated .DataTypes.Key locations = 3;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->locations(i), output);
  }

  // repeated .DataTypes.Key persons = 4;
  for (unsigned int i = 0, n = this->persons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->persons(i), output);
  }

  // optional .DataTypes.DateTime datetime_from = 5;
  if (this->has_datetime_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->datetime_from_, output);
  }

  // optional .DataTypes.DateTime datetime_to = 6;
  if (this->has_datetime_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->datetime_to_, output);
  }

  // optional string card = 7;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetVisitRecordRequest.card");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->card(), output);
  }

  // optional .DataTypes.Page page = 8;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->page_, output);
  }

  // optional .DataTypes.Key id = 9;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->id_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.GetVisitRecordRequest)
}

::google::protobuf::uint8* GetVisitRecordRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.GetVisitRecordRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetVisitRecordRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // repeated .DataTypes.Key locations = 3;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->locations(i), target);
  }

  // repeated .DataTypes.Key persons = 4;
  for (unsigned int i = 0, n = this->persons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->persons(i), target);
  }

  // optional .DataTypes.DateTime datetime_from = 5;
  if (this->has_datetime_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->datetime_from_, target);
  }

  // optional .DataTypes.DateTime datetime_to = 6;
  if (this->has_datetime_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->datetime_to_, target);
  }

  // optional string card = 7;
  if (this->card().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card().data(), this->card().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetVisitRecordRequest.card");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->card(), target);
  }

  // optional .DataTypes.Page page = 8;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->page_, target);
  }

  // optional .DataTypes.Key id = 9;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, *this->id_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.GetVisitRecordRequest)
  return target;
}

int GetVisitRecordRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.GetVisitRecordRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional .DataTypes.AccessState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // optional .DataTypes.DateTime datetime_from = 5;
  if (this->has_datetime_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->datetime_from_);
  }

  // optional .DataTypes.DateTime datetime_to = 6;
  if (this->has_datetime_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->datetime_to_);
  }

  // optional string card = 7;
  if (this->card().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card());
  }

  // optional .DataTypes.Page page = 8;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // optional .DataTypes.Key id = 9;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // repeated .DataTypes.Key locations = 3;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locations(i));
  }

  // repeated .DataTypes.Key persons = 4;
  total_size += 1 * this->persons_size();
  for (int i = 0; i < this->persons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->persons(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetVisitRecordRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.GetVisitRecordRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetVisitRecordRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetVisitRecordRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.GetVisitRecordRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.GetVisitRecordRequest)
    MergeFrom(*source);
  }
}

void GetVisitRecordRequest::MergeFrom(const GetVisitRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.GetVisitRecordRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  locations_.MergeFrom(from.locations_);
  persons_.MergeFrom(from.persons_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.has_datetime_from()) {
    mutable_datetime_from()->::DataTypes::DateTime::MergeFrom(from.datetime_from());
  }
  if (from.has_datetime_to()) {
    mutable_datetime_to()->::DataTypes::DateTime::MergeFrom(from.datetime_to());
  }
  if (from.card().size() > 0) {

    card_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_);
  }
  if (from.has_page()) {
    mutable_page()->::DataTypes::Page::MergeFrom(from.page());
  }
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
}

void GetVisitRecordRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.GetVisitRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVisitRecordRequest::CopyFrom(const GetVisitRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.GetVisitRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVisitRecordRequest::IsInitialized() const {

  return true;
}

void GetVisitRecordRequest::Swap(GetVisitRecordRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVisitRecordRequest::InternalSwap(GetVisitRecordRequest* other) {
  search_text_.Swap(&other->search_text_);
  std::swap(state_, other->state_);
  locations_.UnsafeArenaSwap(&other->locations_);
  persons_.UnsafeArenaSwap(&other->persons_);
  std::swap(datetime_from_, other->datetime_from_);
  std::swap(datetime_to_, other->datetime_to_);
  card_.Swap(&other->card_);
  std::swap(page_, other->page_);
  std::swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetVisitRecordRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetVisitRecordRequest_descriptor_;
  metadata.reflection = GetVisitRecordRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetVisitRecordRequest

// optional string search_text = 1;
void GetVisitRecordRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetVisitRecordRequest::search_text() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetVisitRecordRequest.search_text)
}
 void GetVisitRecordRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetVisitRecordRequest.search_text)
}
 void GetVisitRecordRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetVisitRecordRequest.search_text)
}
 ::std::string* GetVisitRecordRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetVisitRecordRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:DataTypes.GetVisitRecordRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetVisitRecordRequest.search_text)
}

// optional .DataTypes.AccessState state = 2;
void GetVisitRecordRequest::clear_state() {
  state_ = 0;
}
 ::DataTypes::AccessState GetVisitRecordRequest::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.state)
  return static_cast< ::DataTypes::AccessState >(state_);
}
 void GetVisitRecordRequest::set_state(::DataTypes::AccessState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.GetVisitRecordRequest.state)
}

// repeated .DataTypes.Key locations = 3;
int GetVisitRecordRequest::locations_size() const {
  return locations_.size();
}
void GetVisitRecordRequest::clear_locations() {
  locations_.Clear();
}
const ::DataTypes::Key& GetVisitRecordRequest::locations(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.locations)
  return locations_.Get(index);
}
::DataTypes::Key* GetVisitRecordRequest::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.locations)
  return locations_.Mutable(index);
}
::DataTypes::Key* GetVisitRecordRequest::add_locations() {
  // @@protoc_insertion_point(field_add:DataTypes.GetVisitRecordRequest.locations)
  return locations_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
GetVisitRecordRequest::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.GetVisitRecordRequest.locations)
  return &locations_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
GetVisitRecordRequest::locations() const {
  // @@protoc_insertion_point(field_list:DataTypes.GetVisitRecordRequest.locations)
  return locations_;
}

// repeated .DataTypes.Key persons = 4;
int GetVisitRecordRequest::persons_size() const {
  return persons_.size();
}
void GetVisitRecordRequest::clear_persons() {
  persons_.Clear();
}
const ::DataTypes::Key& GetVisitRecordRequest::persons(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.persons)
  return persons_.Get(index);
}
::DataTypes::Key* GetVisitRecordRequest::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.persons)
  return persons_.Mutable(index);
}
::DataTypes::Key* GetVisitRecordRequest::add_persons() {
  // @@protoc_insertion_point(field_add:DataTypes.GetVisitRecordRequest.persons)
  return persons_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
GetVisitRecordRequest::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.GetVisitRecordRequest.persons)
  return &persons_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
GetVisitRecordRequest::persons() const {
  // @@protoc_insertion_point(field_list:DataTypes.GetVisitRecordRequest.persons)
  return persons_;
}

// optional .DataTypes.DateTime datetime_from = 5;
bool GetVisitRecordRequest::has_datetime_from() const {
  return !_is_default_instance_ && datetime_from_ != NULL;
}
void GetVisitRecordRequest::clear_datetime_from() {
  if (GetArenaNoVirtual() == NULL && datetime_from_ != NULL) delete datetime_from_;
  datetime_from_ = NULL;
}
const ::DataTypes::DateTime& GetVisitRecordRequest::datetime_from() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.datetime_from)
  return datetime_from_ != NULL ? *datetime_from_ : *default_instance_->datetime_from_;
}
::DataTypes::DateTime* GetVisitRecordRequest::mutable_datetime_from() {
  
  if (datetime_from_ == NULL) {
    datetime_from_ = new ::DataTypes::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.datetime_from)
  return datetime_from_;
}
::DataTypes::DateTime* GetVisitRecordRequest::release_datetime_from() {
  // @@protoc_insertion_point(field_release:DataTypes.GetVisitRecordRequest.datetime_from)
  
  ::DataTypes::DateTime* temp = datetime_from_;
  datetime_from_ = NULL;
  return temp;
}
void GetVisitRecordRequest::set_allocated_datetime_from(::DataTypes::DateTime* datetime_from) {
  delete datetime_from_;
  datetime_from_ = datetime_from;
  if (datetime_from) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetVisitRecordRequest.datetime_from)
}

// optional .DataTypes.DateTime datetime_to = 6;
bool GetVisitRecordRequest::has_datetime_to() const {
  return !_is_default_instance_ && datetime_to_ != NULL;
}
void GetVisitRecordRequest::clear_datetime_to() {
  if (GetArenaNoVirtual() == NULL && datetime_to_ != NULL) delete datetime_to_;
  datetime_to_ = NULL;
}
const ::DataTypes::DateTime& GetVisitRecordRequest::datetime_to() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.datetime_to)
  return datetime_to_ != NULL ? *datetime_to_ : *default_instance_->datetime_to_;
}
::DataTypes::DateTime* GetVisitRecordRequest::mutable_datetime_to() {
  
  if (datetime_to_ == NULL) {
    datetime_to_ = new ::DataTypes::DateTime;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.datetime_to)
  return datetime_to_;
}
::DataTypes::DateTime* GetVisitRecordRequest::release_datetime_to() {
  // @@protoc_insertion_point(field_release:DataTypes.GetVisitRecordRequest.datetime_to)
  
  ::DataTypes::DateTime* temp = datetime_to_;
  datetime_to_ = NULL;
  return temp;
}
void GetVisitRecordRequest::set_allocated_datetime_to(::DataTypes::DateTime* datetime_to) {
  delete datetime_to_;
  datetime_to_ = datetime_to;
  if (datetime_to) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetVisitRecordRequest.datetime_to)
}

// optional string card = 7;
void GetVisitRecordRequest::clear_card() {
  card_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetVisitRecordRequest::card() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.card)
  return card_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_card(const ::std::string& value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetVisitRecordRequest.card)
}
 void GetVisitRecordRequest::set_card(const char* value) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetVisitRecordRequest.card)
}
 void GetVisitRecordRequest::set_card(const char* value, size_t size) {
  
  card_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetVisitRecordRequest.card)
}
 ::std::string* GetVisitRecordRequest::mutable_card() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.card)
  return card_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetVisitRecordRequest::release_card() {
  // @@protoc_insertion_point(field_release:DataTypes.GetVisitRecordRequest.card)
  
  return card_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetVisitRecordRequest::set_allocated_card(::std::string* card) {
  if (card != NULL) {
    
  } else {
    
  }
  card_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetVisitRecordRequest.card)
}

// optional .DataTypes.Page page = 8;
bool GetVisitRecordRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetVisitRecordRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::DataTypes::Page& GetVisitRecordRequest::page() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::DataTypes::Page* GetVisitRecordRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::DataTypes::Page;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.page)
  return page_;
}
::DataTypes::Page* GetVisitRecordRequest::release_page() {
  // @@protoc_insertion_point(field_release:DataTypes.GetVisitRecordRequest.page)
  
  ::DataTypes::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetVisitRecordRequest::set_allocated_page(::DataTypes::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetVisitRecordRequest.page)
}

// optional .DataTypes.Key id = 9;
bool GetVisitRecordRequest::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void GetVisitRecordRequest::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& GetVisitRecordRequest::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetVisitRecordRequest.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* GetVisitRecordRequest::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetVisitRecordRequest.id)
  return id_;
}
::DataTypes::Key* GetVisitRecordRequest::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.GetVisitRecordRequest.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void GetVisitRecordRequest::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetVisitRecordRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Page::kIndexFieldNumber;
const int Page::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Page::Page()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Page)
}

void Page::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Page::Page(const Page& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Page)
}

void Page::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  index_ = 0;
  size_ = 0;
}

Page::~Page() {
  // @@protoc_insertion_point(destructor:DataTypes.Page)
  SharedDtor();
}

void Page::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Page::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Page::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Page_descriptor_;
}

const Page& Page::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

Page* Page::default_instance_ = NULL;

Page* Page::New(::google::protobuf::Arena* arena) const {
  Page* n = new Page;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Page::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Page)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Page, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Page*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(index_, size_);

#undef ZR_HELPER_
#undef ZR_

}

bool Page::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Page)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional int32 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Page)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Page)
  return false;
#undef DO_
}

void Page::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Page)
  // optional int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Page)
}

::google::protobuf::uint8* Page::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Page)
  // optional int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Page)
  return target;
}

int Page::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Page)
  int total_size = 0;

  // optional int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // optional int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Page::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Page* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Page>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Page)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Page)
    MergeFrom(*source);
  }
}

void Page::MergeFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Page)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Page::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Page::CopyFrom(const Page& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Page)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Page::IsInitialized() const {

  return true;
}

void Page::Swap(Page* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Page::InternalSwap(Page* other) {
  std::swap(index_, other->index_);
  std::swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Page::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Page_descriptor_;
  metadata.reflection = Page_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Page

// optional int32 index = 1;
void Page::clear_index() {
  index_ = 0;
}
 ::google::protobuf::int32 Page::index() const {
  // @@protoc_insertion_point(field_get:DataTypes.Page.index)
  return index_;
}
 void Page::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Page.index)
}

// optional int32 size = 2;
void Page::clear_size() {
  size_ = 0;
}
 ::google::protobuf::int32 Page::size() const {
  // @@protoc_insertion_point(field_get:DataTypes.Page.size)
  return size_;
}
 void Page::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Page.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCardRequest::kSearchTextFieldNumber;
const int GetCardRequest::kUniqueIdentifierFieldNumber;
const int GetCardRequest::kOwnersFieldNumber;
const int GetCardRequest::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCardRequest::GetCardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.GetCardRequest)
}

void GetCardRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  page_ = const_cast< ::DataTypes::Page*>(&::DataTypes::Page::default_instance());
}

GetCardRequest::GetCardRequest(const GetCardRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.GetCardRequest)
}

void GetCardRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  search_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_ = NULL;
}

GetCardRequest::~GetCardRequest() {
  // @@protoc_insertion_point(destructor:DataTypes.GetCardRequest)
  SharedDtor();
}

void GetCardRequest::SharedDtor() {
  search_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete page_;
  }
}

void GetCardRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCardRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetCardRequest_descriptor_;
}

const GetCardRequest& GetCardRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fqueries_2eproto();
  return *default_instance_;
}

GetCardRequest* GetCardRequest::default_instance_ = NULL;

GetCardRequest* GetCardRequest::New(::google::protobuf::Arena* arena) const {
  GetCardRequest* n = new GetCardRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.GetCardRequest)
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unique_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
  owners_.Clear();
}

bool GetCardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.GetCardRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string search_text = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_search_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_text().data(), this->search_text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetCardRequest.search_text"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_unique_identifier;
        break;
      }

      // optional string unique_identifier = 2;
      case 2: {
        if (tag == 18) {
         parse_unique_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unique_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unique_identifier().data(), this->unique_identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.GetCardRequest.unique_identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_owners;
        break;
      }

      // repeated .DataTypes.Key owners = 3;
      case 3: {
        if (tag == 26) {
         parse_owners:
          DO_(input->IncrementRecursionDepth());
         parse_loop_owners:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_owners()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_owners;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_page;
        break;
      }

      // optional .DataTypes.Page page = 4;
      case 4: {
        if (tag == 34) {
         parse_page:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_page()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.GetCardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.GetCardRequest)
  return false;
#undef DO_
}

void GetCardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.GetCardRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetCardRequest.search_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->search_text(), output);
  }

  // optional string unique_identifier = 2;
  if (this->unique_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unique_identifier().data(), this->unique_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetCardRequest.unique_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unique_identifier(), output);
  }

  // repeated .DataTypes.Key owners = 3;
  for (unsigned int i = 0, n = this->owners_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->owners(i), output);
  }

  // optional .DataTypes.Page page = 4;
  if (this->has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->page_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.GetCardRequest)
}

::google::protobuf::uint8* GetCardRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.GetCardRequest)
  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_text().data(), this->search_text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetCardRequest.search_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->search_text(), target);
  }

  // optional string unique_identifier = 2;
  if (this->unique_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unique_identifier().data(), this->unique_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.GetCardRequest.unique_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unique_identifier(), target);
  }

  // repeated .DataTypes.Key owners = 3;
  for (unsigned int i = 0, n = this->owners_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->owners(i), target);
  }

  // optional .DataTypes.Page page = 4;
  if (this->has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->page_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.GetCardRequest)
  return target;
}

int GetCardRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.GetCardRequest)
  int total_size = 0;

  // optional string search_text = 1;
  if (this->search_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->search_text());
  }

  // optional string unique_identifier = 2;
  if (this->unique_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unique_identifier());
  }

  // optional .DataTypes.Page page = 4;
  if (this->has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->page_);
  }

  // repeated .DataTypes.Key owners = 3;
  total_size += 1 * this->owners_size();
  for (int i = 0; i < this->owners_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->owners(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.GetCardRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetCardRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.GetCardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.GetCardRequest)
    MergeFrom(*source);
  }
}

void GetCardRequest::MergeFrom(const GetCardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.GetCardRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  owners_.MergeFrom(from.owners_);
  if (from.search_text().size() > 0) {

    search_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.search_text_);
  }
  if (from.unique_identifier().size() > 0) {

    unique_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unique_identifier_);
  }
  if (from.has_page()) {
    mutable_page()->::DataTypes::Page::MergeFrom(from.page());
  }
}

void GetCardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.GetCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCardRequest::CopyFrom(const GetCardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.GetCardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCardRequest::IsInitialized() const {

  return true;
}

void GetCardRequest::Swap(GetCardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCardRequest::InternalSwap(GetCardRequest* other) {
  search_text_.Swap(&other->search_text_);
  unique_identifier_.Swap(&other->unique_identifier_);
  owners_.UnsafeArenaSwap(&other->owners_);
  std::swap(page_, other->page_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCardRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetCardRequest_descriptor_;
  metadata.reflection = GetCardRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetCardRequest

// optional string search_text = 1;
void GetCardRequest::clear_search_text() {
  search_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCardRequest::search_text() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetCardRequest.search_text)
  return search_text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_search_text(const ::std::string& value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetCardRequest.search_text)
}
 void GetCardRequest::set_search_text(const char* value) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetCardRequest.search_text)
}
 void GetCardRequest::set_search_text(const char* value, size_t size) {
  
  search_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetCardRequest.search_text)
}
 ::std::string* GetCardRequest::mutable_search_text() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetCardRequest.search_text)
  return search_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCardRequest::release_search_text() {
  // @@protoc_insertion_point(field_release:DataTypes.GetCardRequest.search_text)
  
  return search_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_allocated_search_text(::std::string* search_text) {
  if (search_text != NULL) {
    
  } else {
    
  }
  search_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), search_text);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetCardRequest.search_text)
}

// optional string unique_identifier = 2;
void GetCardRequest::clear_unique_identifier() {
  unique_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetCardRequest::unique_identifier() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetCardRequest.unique_identifier)
  return unique_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_unique_identifier(const ::std::string& value) {
  
  unique_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.GetCardRequest.unique_identifier)
}
 void GetCardRequest::set_unique_identifier(const char* value) {
  
  unique_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.GetCardRequest.unique_identifier)
}
 void GetCardRequest::set_unique_identifier(const char* value, size_t size) {
  
  unique_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.GetCardRequest.unique_identifier)
}
 ::std::string* GetCardRequest::mutable_unique_identifier() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.GetCardRequest.unique_identifier)
  return unique_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetCardRequest::release_unique_identifier() {
  // @@protoc_insertion_point(field_release:DataTypes.GetCardRequest.unique_identifier)
  
  return unique_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetCardRequest::set_allocated_unique_identifier(::std::string* unique_identifier) {
  if (unique_identifier != NULL) {
    
  } else {
    
  }
  unique_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unique_identifier);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetCardRequest.unique_identifier)
}

// repeated .DataTypes.Key owners = 3;
int GetCardRequest::owners_size() const {
  return owners_.size();
}
void GetCardRequest::clear_owners() {
  owners_.Clear();
}
const ::DataTypes::Key& GetCardRequest::owners(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.GetCardRequest.owners)
  return owners_.Get(index);
}
::DataTypes::Key* GetCardRequest::mutable_owners(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.GetCardRequest.owners)
  return owners_.Mutable(index);
}
::DataTypes::Key* GetCardRequest::add_owners() {
  // @@protoc_insertion_point(field_add:DataTypes.GetCardRequest.owners)
  return owners_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
GetCardRequest::mutable_owners() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.GetCardRequest.owners)
  return &owners_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
GetCardRequest::owners() const {
  // @@protoc_insertion_point(field_list:DataTypes.GetCardRequest.owners)
  return owners_;
}

// optional .DataTypes.Page page = 4;
bool GetCardRequest::has_page() const {
  return !_is_default_instance_ && page_ != NULL;
}
void GetCardRequest::clear_page() {
  if (GetArenaNoVirtual() == NULL && page_ != NULL) delete page_;
  page_ = NULL;
}
const ::DataTypes::Page& GetCardRequest::page() const {
  // @@protoc_insertion_point(field_get:DataTypes.GetCardRequest.page)
  return page_ != NULL ? *page_ : *default_instance_->page_;
}
::DataTypes::Page* GetCardRequest::mutable_page() {
  
  if (page_ == NULL) {
    page_ = new ::DataTypes::Page;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.GetCardRequest.page)
  return page_;
}
::DataTypes::Page* GetCardRequest::release_page() {
  // @@protoc_insertion_point(field_release:DataTypes.GetCardRequest.page)
  
  ::DataTypes::Page* temp = page_;
  page_ = NULL;
  return temp;
}
void GetCardRequest::set_allocated_page(::DataTypes::Page* page) {
  delete page_;
  page_ = page;
  if (page) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.GetCardRequest.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
