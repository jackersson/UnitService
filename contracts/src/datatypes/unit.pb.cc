// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/unit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/unit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* Unit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Unit_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConnectMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscriptionMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscriptionMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* Units_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Units_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnitUpdate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitUpdate_reflection_ = NULL;
struct UnitUpdateOneofInstance {
  const ::DataTypes::Unit* inserted_;
  const ::DataTypes::Unit* deleted_;
  const ::DataTypes::Unit* updated_;
}* UnitUpdate_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* UnitUpdates_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitUpdates_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UnitState_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ServiceType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2funit_2eproto() {
  protobuf_AddDesc_datatypes_2funit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/unit.proto");
  GOOGLE_CHECK(file != NULL);
  Unit_descriptor_ = file->message_type(0);
  static const int Unit_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, ip_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, locations_),
  };
  Unit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Unit_descriptor_,
      Unit::default_instance_,
      Unit_offsets_,
      -1,
      -1,
      -1,
      sizeof(Unit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, _is_default_instance_));
  ConnectMsg_descriptor_ = file->message_type(1);
  static const int ConnectMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectMsg, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectMsg, ip_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectMsg, service_type_),
  };
  ConnectMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectMsg_descriptor_,
      ConnectMsg::default_instance_,
      ConnectMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectMsg, _is_default_instance_));
  HeartbeatMessage_descriptor_ = file->message_type(2);
  static const int HeartbeatMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, service_type_),
  };
  HeartbeatMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatMessage_descriptor_,
      HeartbeatMessage::default_instance_,
      HeartbeatMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(HeartbeatMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatMessage, _is_default_instance_));
  SubscriptionMsg_descriptor_ = file->message_type(3);
  static const int SubscriptionMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, publisher_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, subscriber_id_),
  };
  SubscriptionMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscriptionMsg_descriptor_,
      SubscriptionMsg::default_instance_,
      SubscriptionMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscriptionMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, _is_default_instance_));
  Units_descriptor_ = file->message_type(4);
  static const int Units_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, items_),
  };
  Units_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Units_descriptor_,
      Units::default_instance_,
      Units_offsets_,
      -1,
      -1,
      -1,
      sizeof(Units),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, _is_default_instance_));
  UnitUpdate_descriptor_ = file->message_type(5);
  static const int UnitUpdate_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UnitUpdate_default_oneof_instance_, inserted_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UnitUpdate_default_oneof_instance_, deleted_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UnitUpdate_default_oneof_instance_, updated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdate, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdate, unit_type_),
  };
  UnitUpdate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnitUpdate_descriptor_,
      UnitUpdate::default_instance_,
      UnitUpdate_offsets_,
      -1,
      -1,
      -1,
      UnitUpdate_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdate, _oneof_case_[0]),
      sizeof(UnitUpdate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdate, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdate, _is_default_instance_));
  UnitUpdates_descriptor_ = file->message_type(6);
  static const int UnitUpdates_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdates, items_),
  };
  UnitUpdates_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnitUpdates_descriptor_,
      UnitUpdates::default_instance_,
      UnitUpdates_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnitUpdates),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdates, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitUpdates, _is_default_instance_));
  UnitState_descriptor_ = file->enum_type(0);
  ServiceType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2funit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Unit_descriptor_, &Unit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectMsg_descriptor_, &ConnectMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatMessage_descriptor_, &HeartbeatMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscriptionMsg_descriptor_, &SubscriptionMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Units_descriptor_, &Units::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnitUpdate_descriptor_, &UnitUpdate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnitUpdates_descriptor_, &UnitUpdates::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2funit_2eproto() {
  delete Unit::default_instance_;
  delete Unit_reflection_;
  delete ConnectMsg::default_instance_;
  delete ConnectMsg_reflection_;
  delete HeartbeatMessage::default_instance_;
  delete HeartbeatMessage_reflection_;
  delete SubscriptionMsg::default_instance_;
  delete SubscriptionMsg_reflection_;
  delete Units::default_instance_;
  delete Units_reflection_;
  delete UnitUpdate::default_instance_;
  delete UnitUpdate_default_oneof_instance_;
  delete UnitUpdate_reflection_;
  delete UnitUpdates::default_instance_;
  delete UnitUpdates_reflection_;
}

void protobuf_AddDesc_datatypes_2funit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2flocation_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fkey_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024datatypes/unit.proto\022\tDataTypes\032\030datat"
    "ypes/location.proto\032\023datatypes/key.proto"
    "\"^\n\004Unit\022\032\n\002id\030\001 \001(\0132\016.DataTypes.Key\022\022\n\n"
    "ip_address\030\002 \001(\t\022&\n\tlocations\030\003 \003(\0132\023.Da"
    "taTypes.Location\"j\n\nConnectMsg\022\032\n\002id\030\001 \001"
    "(\0132\016.DataTypes.Key\022\022\n\nip_address\030\002 \001(\t\022,"
    "\n\014service_type\030\003 \001(\0162\026.DataTypes.Service"
    "Type\"\\\n\020HeartbeatMessage\022\032\n\002id\030\001 \001(\0132\016.D"
    "ataTypes.Key\022,\n\014service_type\030\002 \001(\0162\026.Dat"
    "aTypes.ServiceType\"^\n\017SubscriptionMsg\022$\n"
    "\014publisher_id\030\001 \001(\0132\016.DataTypes.Key\022%\n\rs"
    "ubscriber_id\030\002 \001(\0132\016.DataTypes.Key\"\'\n\005Un"
    "its\022\036\n\005items\030\001 \003(\0132\017.DataTypes.Unit\"\253\001\n\n"
    "UnitUpdate\022#\n\010inserted\030\001 \001(\0132\017.DataTypes"
    ".UnitH\000\022\"\n\007deleted\030\002 \001(\0132\017.DataTypes.Uni"
    "tH\000\022\"\n\007updated\030\003 \001(\0132\017.DataTypes.UnitH\000\022"
    "#\n\005state\030\004 \001(\0162\024.DataTypes.UnitStateB\013\n\t"
    "unit_type\"3\n\013UnitUpdates\022$\n\005items\030\001 \003(\0132"
    "\025.DataTypes.UnitUpdate*7\n\tUnitState\022\t\n\005N"
    "one_\020\000\022\r\n\tConnected\020\001\022\020\n\014Disconnected\020\002*"
    "Y\n\013ServiceType\022\020\n\014None_Service\020\000\022\022\n\016Faci"
    "al_Service\020\001\022\022\n\016Client_Service\020\002\022\020\n\014Unit"
    "_Service\020\003BI\n\007ex.grpcZ8github.com/Enebra"
    "/ServiceCoordinator/grpc/datatypes/unit\242"
    "\002\003RTGb\006proto3", 973);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/unit.proto", &protobuf_RegisterTypes);
  Unit::default_instance_ = new Unit();
  ConnectMsg::default_instance_ = new ConnectMsg();
  HeartbeatMessage::default_instance_ = new HeartbeatMessage();
  SubscriptionMsg::default_instance_ = new SubscriptionMsg();
  Units::default_instance_ = new Units();
  UnitUpdate::default_instance_ = new UnitUpdate();
  UnitUpdate_default_oneof_instance_ = new UnitUpdateOneofInstance();
  UnitUpdates::default_instance_ = new UnitUpdates();
  Unit::default_instance_->InitAsDefaultInstance();
  ConnectMsg::default_instance_->InitAsDefaultInstance();
  HeartbeatMessage::default_instance_->InitAsDefaultInstance();
  SubscriptionMsg::default_instance_->InitAsDefaultInstance();
  Units::default_instance_->InitAsDefaultInstance();
  UnitUpdate::default_instance_->InitAsDefaultInstance();
  UnitUpdates::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2funit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2funit_2eproto {
  StaticDescriptorInitializer_datatypes_2funit_2eproto() {
    protobuf_AddDesc_datatypes_2funit_2eproto();
  }
} static_descriptor_initializer_datatypes_2funit_2eproto_;
const ::google::protobuf::EnumDescriptor* UnitState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitState_descriptor_;
}
bool UnitState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServiceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ServiceType_descriptor_;
}
bool ServiceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unit::kIdFieldNumber;
const int Unit::kIpAddressFieldNumber;
const int Unit::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unit::Unit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Unit)
}

void Unit::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

Unit::Unit(const Unit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Unit)
}

void Unit::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = NULL;
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Unit::~Unit() {
  // @@protoc_insertion_point(destructor:DataTypes.Unit)
  SharedDtor();
}

void Unit::SharedDtor() {
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete id_;
  }
}

void Unit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Unit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Unit_descriptor_;
}

const Unit& Unit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

Unit* Unit::default_instance_ = NULL;

Unit* Unit::New(::google::protobuf::Arena* arena) const {
  Unit* n = new Unit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Unit::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Unit)
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locations_.Clear();
}

bool Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Unit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Key id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ip_address;
        break;
      }

      // optional string ip_address = 2;
      case 2: {
        if (tag == 18) {
         parse_ip_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), this->ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.Unit.ip_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locations;
        break;
      }

      // repeated .DataTypes.Location locations = 3;
      case 3: {
        if (tag == 26) {
         parse_locations:
          DO_(input->IncrementRecursionDepth());
         parse_loop_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_locations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Unit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Unit)
  return false;
#undef DO_
}

void Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Unit)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // optional string ip_address = 2;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Unit.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip_address(), output);
  }

  // repeated .DataTypes.Location locations = 3;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->locations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Unit)
}

::google::protobuf::uint8* Unit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Unit)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->id_, target);
  }

  // optional string ip_address = 2;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Unit.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip_address(), target);
  }

  // repeated .DataTypes.Location locations = 3;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->locations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Unit)
  return target;
}

int Unit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Unit)
  int total_size = 0;

  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // optional string ip_address = 2;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // repeated .DataTypes.Location locations = 3;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locations(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Unit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Unit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Unit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Unit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Unit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Unit)
    MergeFrom(*source);
  }
}

void Unit::MergeFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Unit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  locations_.MergeFrom(from.locations_);
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
}

void Unit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unit::CopyFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unit::IsInitialized() const {

  return true;
}

void Unit::Swap(Unit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unit::InternalSwap(Unit* other) {
  std::swap(id_, other->id_);
  ip_address_.Swap(&other->ip_address_);
  locations_.UnsafeArenaSwap(&other->locations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Unit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Unit_descriptor_;
  metadata.reflection = Unit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Unit

// optional .DataTypes.Key id = 1;
bool Unit::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void Unit::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& Unit::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* Unit::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.id)
  return id_;
}
::DataTypes::Key* Unit::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.Unit.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void Unit::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Unit.id)
}

// optional string ip_address = 2;
void Unit::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Unit::ip_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Unit::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.Unit.ip_address)
}
 void Unit::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.Unit.ip_address)
}
 void Unit::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.Unit.ip_address)
}
 ::std::string* Unit::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Unit::release_ip_address() {
  // @@protoc_insertion_point(field_release:DataTypes.Unit.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Unit::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Unit.ip_address)
}

// repeated .DataTypes.Location locations = 3;
int Unit::locations_size() const {
  return locations_.size();
}
void Unit::clear_locations() {
  locations_.Clear();
}
const ::DataTypes::Location& Unit::locations(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.locations)
  return locations_.Get(index);
}
::DataTypes::Location* Unit::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.locations)
  return locations_.Mutable(index);
}
::DataTypes::Location* Unit::add_locations() {
  // @@protoc_insertion_point(field_add:DataTypes.Unit.locations)
  return locations_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Location >*
Unit::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Unit.locations)
  return &locations_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Location >&
Unit::locations() const {
  // @@protoc_insertion_point(field_list:DataTypes.Unit.locations)
  return locations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectMsg::kIdFieldNumber;
const int ConnectMsg::kIpAddressFieldNumber;
const int ConnectMsg::kServiceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectMsg::ConnectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.ConnectMsg)
}

void ConnectMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

ConnectMsg::ConnectMsg(const ConnectMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.ConnectMsg)
}

void ConnectMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = NULL;
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_type_ = 0;
}

ConnectMsg::~ConnectMsg() {
  // @@protoc_insertion_point(destructor:DataTypes.ConnectMsg)
  SharedDtor();
}

void ConnectMsg::SharedDtor() {
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete id_;
  }
}

void ConnectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectMsg_descriptor_;
}

const ConnectMsg& ConnectMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

ConnectMsg* ConnectMsg::default_instance_ = NULL;

ConnectMsg* ConnectMsg::New(::google::protobuf::Arena* arena) const {
  ConnectMsg* n = new ConnectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.ConnectMsg)
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_type_ = 0;
}

bool ConnectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.ConnectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Key id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ip_address;
        break;
      }

      // optional string ip_address = 2;
      case 2: {
        if (tag == 18) {
         parse_ip_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), this->ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.ConnectMsg.ip_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_service_type;
        break;
      }

      // optional .DataTypes.ServiceType service_type = 3;
      case 3: {
        if (tag == 24) {
         parse_service_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_service_type(static_cast< ::DataTypes::ServiceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.ConnectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.ConnectMsg)
  return false;
#undef DO_
}

void ConnectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.ConnectMsg)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // optional string ip_address = 2;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.ConnectMsg.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip_address(), output);
  }

  // optional .DataTypes.ServiceType service_type = 3;
  if (this->service_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->service_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.ConnectMsg)
}

::google::protobuf::uint8* ConnectMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.ConnectMsg)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->id_, target);
  }

  // optional string ip_address = 2;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.ConnectMsg.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip_address(), target);
  }

  // optional .DataTypes.ServiceType service_type = 3;
  if (this->service_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->service_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.ConnectMsg)
  return target;
}

int ConnectMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.ConnectMsg)
  int total_size = 0;

  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // optional string ip_address = 2;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // optional .DataTypes.ServiceType service_type = 3;
  if (this->service_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->service_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.ConnectMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConnectMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.ConnectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.ConnectMsg)
    MergeFrom(*source);
  }
}

void ConnectMsg::MergeFrom(const ConnectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.ConnectMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.service_type() != 0) {
    set_service_type(from.service_type());
  }
}

void ConnectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.ConnectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectMsg::CopyFrom(const ConnectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.ConnectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectMsg::IsInitialized() const {

  return true;
}

void ConnectMsg::Swap(ConnectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectMsg::InternalSwap(ConnectMsg* other) {
  std::swap(id_, other->id_);
  ip_address_.Swap(&other->ip_address_);
  std::swap(service_type_, other->service_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectMsg_descriptor_;
  metadata.reflection = ConnectMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectMsg

// optional .DataTypes.Key id = 1;
bool ConnectMsg::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void ConnectMsg::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& ConnectMsg::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectMsg.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* ConnectMsg::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.ConnectMsg.id)
  return id_;
}
::DataTypes::Key* ConnectMsg::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.ConnectMsg.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void ConnectMsg::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.ConnectMsg.id)
}

// optional string ip_address = 2;
void ConnectMsg::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConnectMsg::ip_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectMsg.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectMsg::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.ConnectMsg.ip_address)
}
 void ConnectMsg::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.ConnectMsg.ip_address)
}
 void ConnectMsg::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.ConnectMsg.ip_address)
}
 ::std::string* ConnectMsg::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.ConnectMsg.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConnectMsg::release_ip_address() {
  // @@protoc_insertion_point(field_release:DataTypes.ConnectMsg.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectMsg::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.ConnectMsg.ip_address)
}

// optional .DataTypes.ServiceType service_type = 3;
void ConnectMsg::clear_service_type() {
  service_type_ = 0;
}
 ::DataTypes::ServiceType ConnectMsg::service_type() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectMsg.service_type)
  return static_cast< ::DataTypes::ServiceType >(service_type_);
}
 void ConnectMsg::set_service_type(::DataTypes::ServiceType value) {
  
  service_type_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.ConnectMsg.service_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatMessage::kIdFieldNumber;
const int HeartbeatMessage::kServiceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatMessage::HeartbeatMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.HeartbeatMessage)
}

void HeartbeatMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

HeartbeatMessage::HeartbeatMessage(const HeartbeatMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.HeartbeatMessage)
}

void HeartbeatMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_ = NULL;
  service_type_ = 0;
}

HeartbeatMessage::~HeartbeatMessage() {
  // @@protoc_insertion_point(destructor:DataTypes.HeartbeatMessage)
  SharedDtor();
}

void HeartbeatMessage::SharedDtor() {
  if (this != default_instance_) {
    delete id_;
  }
}

void HeartbeatMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatMessage_descriptor_;
}

const HeartbeatMessage& HeartbeatMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

HeartbeatMessage* HeartbeatMessage::default_instance_ = NULL;

HeartbeatMessage* HeartbeatMessage::New(::google::protobuf::Arena* arena) const {
  HeartbeatMessage* n = new HeartbeatMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.HeartbeatMessage)
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  service_type_ = 0;
}

bool HeartbeatMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.HeartbeatMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Key id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_service_type;
        break;
      }

      // optional .DataTypes.ServiceType service_type = 2;
      case 2: {
        if (tag == 16) {
         parse_service_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_service_type(static_cast< ::DataTypes::ServiceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.HeartbeatMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.HeartbeatMessage)
  return false;
#undef DO_
}

void HeartbeatMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.HeartbeatMessage)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // optional .DataTypes.ServiceType service_type = 2;
  if (this->service_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->service_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.HeartbeatMessage)
}

::google::protobuf::uint8* HeartbeatMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.HeartbeatMessage)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->id_, target);
  }

  // optional .DataTypes.ServiceType service_type = 2;
  if (this->service_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->service_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.HeartbeatMessage)
  return target;
}

int HeartbeatMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.HeartbeatMessage)
  int total_size = 0;

  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // optional .DataTypes.ServiceType service_type = 2;
  if (this->service_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->service_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.HeartbeatMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartbeatMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.HeartbeatMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.HeartbeatMessage)
    MergeFrom(*source);
  }
}

void HeartbeatMessage::MergeFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.HeartbeatMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
  if (from.service_type() != 0) {
    set_service_type(from.service_type());
  }
}

void HeartbeatMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatMessage::CopyFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatMessage::IsInitialized() const {

  return true;
}

void HeartbeatMessage::Swap(HeartbeatMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatMessage::InternalSwap(HeartbeatMessage* other) {
  std::swap(id_, other->id_);
  std::swap(service_type_, other->service_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatMessage_descriptor_;
  metadata.reflection = HeartbeatMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatMessage

// optional .DataTypes.Key id = 1;
bool HeartbeatMessage::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void HeartbeatMessage::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& HeartbeatMessage::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.HeartbeatMessage.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* HeartbeatMessage::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.HeartbeatMessage.id)
  return id_;
}
::DataTypes::Key* HeartbeatMessage::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.HeartbeatMessage.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void HeartbeatMessage::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.HeartbeatMessage.id)
}

// optional .DataTypes.ServiceType service_type = 2;
void HeartbeatMessage::clear_service_type() {
  service_type_ = 0;
}
 ::DataTypes::ServiceType HeartbeatMessage::service_type() const {
  // @@protoc_insertion_point(field_get:DataTypes.HeartbeatMessage.service_type)
  return static_cast< ::DataTypes::ServiceType >(service_type_);
}
 void HeartbeatMessage::set_service_type(::DataTypes::ServiceType value) {
  
  service_type_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.HeartbeatMessage.service_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionMsg::kPublisherIdFieldNumber;
const int SubscriptionMsg::kSubscriberIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionMsg::SubscriptionMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.SubscriptionMsg)
}

void SubscriptionMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  publisher_id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
  subscriber_id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

SubscriptionMsg::SubscriptionMsg(const SubscriptionMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.SubscriptionMsg)
}

void SubscriptionMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  publisher_id_ = NULL;
  subscriber_id_ = NULL;
}

SubscriptionMsg::~SubscriptionMsg() {
  // @@protoc_insertion_point(destructor:DataTypes.SubscriptionMsg)
  SharedDtor();
}

void SubscriptionMsg::SharedDtor() {
  if (this != default_instance_) {
    delete publisher_id_;
    delete subscriber_id_;
  }
}

void SubscriptionMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscriptionMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscriptionMsg_descriptor_;
}

const SubscriptionMsg& SubscriptionMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

SubscriptionMsg* SubscriptionMsg::default_instance_ = NULL;

SubscriptionMsg* SubscriptionMsg::New(::google::protobuf::Arena* arena) const {
  SubscriptionMsg* n = new SubscriptionMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscriptionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.SubscriptionMsg)
  if (GetArenaNoVirtual() == NULL && publisher_id_ != NULL) delete publisher_id_;
  publisher_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && subscriber_id_ != NULL) delete subscriber_id_;
  subscriber_id_ = NULL;
}

bool SubscriptionMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.SubscriptionMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Key publisher_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_publisher_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_subscriber_id;
        break;
      }

      // optional .DataTypes.Key subscriber_id = 2;
      case 2: {
        if (tag == 18) {
         parse_subscriber_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subscriber_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.SubscriptionMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.SubscriptionMsg)
  return false;
#undef DO_
}

void SubscriptionMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.SubscriptionMsg)
  // optional .DataTypes.Key publisher_id = 1;
  if (this->has_publisher_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->publisher_id_, output);
  }

  // optional .DataTypes.Key subscriber_id = 2;
  if (this->has_subscriber_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->subscriber_id_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.SubscriptionMsg)
}

::google::protobuf::uint8* SubscriptionMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.SubscriptionMsg)
  // optional .DataTypes.Key publisher_id = 1;
  if (this->has_publisher_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->publisher_id_, target);
  }

  // optional .DataTypes.Key subscriber_id = 2;
  if (this->has_subscriber_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->subscriber_id_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.SubscriptionMsg)
  return target;
}

int SubscriptionMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.SubscriptionMsg)
  int total_size = 0;

  // optional .DataTypes.Key publisher_id = 1;
  if (this->has_publisher_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->publisher_id_);
  }

  // optional .DataTypes.Key subscriber_id = 2;
  if (this->has_subscriber_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subscriber_id_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscriptionMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.SubscriptionMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscriptionMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscriptionMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.SubscriptionMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.SubscriptionMsg)
    MergeFrom(*source);
  }
}

void SubscriptionMsg::MergeFrom(const SubscriptionMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.SubscriptionMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_publisher_id()) {
    mutable_publisher_id()->::DataTypes::Key::MergeFrom(from.publisher_id());
  }
  if (from.has_subscriber_id()) {
    mutable_subscriber_id()->::DataTypes::Key::MergeFrom(from.subscriber_id());
  }
}

void SubscriptionMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.SubscriptionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionMsg::CopyFrom(const SubscriptionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.SubscriptionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionMsg::IsInitialized() const {

  return true;
}

void SubscriptionMsg::Swap(SubscriptionMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionMsg::InternalSwap(SubscriptionMsg* other) {
  std::swap(publisher_id_, other->publisher_id_);
  std::swap(subscriber_id_, other->subscriber_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscriptionMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscriptionMsg_descriptor_;
  metadata.reflection = SubscriptionMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscriptionMsg

// optional .DataTypes.Key publisher_id = 1;
bool SubscriptionMsg::has_publisher_id() const {
  return !_is_default_instance_ && publisher_id_ != NULL;
}
void SubscriptionMsg::clear_publisher_id() {
  if (GetArenaNoVirtual() == NULL && publisher_id_ != NULL) delete publisher_id_;
  publisher_id_ = NULL;
}
const ::DataTypes::Key& SubscriptionMsg::publisher_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.SubscriptionMsg.publisher_id)
  return publisher_id_ != NULL ? *publisher_id_ : *default_instance_->publisher_id_;
}
::DataTypes::Key* SubscriptionMsg::mutable_publisher_id() {
  
  if (publisher_id_ == NULL) {
    publisher_id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.SubscriptionMsg.publisher_id)
  return publisher_id_;
}
::DataTypes::Key* SubscriptionMsg::release_publisher_id() {
  // @@protoc_insertion_point(field_release:DataTypes.SubscriptionMsg.publisher_id)
  
  ::DataTypes::Key* temp = publisher_id_;
  publisher_id_ = NULL;
  return temp;
}
void SubscriptionMsg::set_allocated_publisher_id(::DataTypes::Key* publisher_id) {
  delete publisher_id_;
  publisher_id_ = publisher_id;
  if (publisher_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.SubscriptionMsg.publisher_id)
}

// optional .DataTypes.Key subscriber_id = 2;
bool SubscriptionMsg::has_subscriber_id() const {
  return !_is_default_instance_ && subscriber_id_ != NULL;
}
void SubscriptionMsg::clear_subscriber_id() {
  if (GetArenaNoVirtual() == NULL && subscriber_id_ != NULL) delete subscriber_id_;
  subscriber_id_ = NULL;
}
const ::DataTypes::Key& SubscriptionMsg::subscriber_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.SubscriptionMsg.subscriber_id)
  return subscriber_id_ != NULL ? *subscriber_id_ : *default_instance_->subscriber_id_;
}
::DataTypes::Key* SubscriptionMsg::mutable_subscriber_id() {
  
  if (subscriber_id_ == NULL) {
    subscriber_id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.SubscriptionMsg.subscriber_id)
  return subscriber_id_;
}
::DataTypes::Key* SubscriptionMsg::release_subscriber_id() {
  // @@protoc_insertion_point(field_release:DataTypes.SubscriptionMsg.subscriber_id)
  
  ::DataTypes::Key* temp = subscriber_id_;
  subscriber_id_ = NULL;
  return temp;
}
void SubscriptionMsg::set_allocated_subscriber_id(::DataTypes::Key* subscriber_id) {
  delete subscriber_id_;
  subscriber_id_ = subscriber_id;
  if (subscriber_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.SubscriptionMsg.subscriber_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Units::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Units::Units()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Units)
}

void Units::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Units::Units(const Units& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Units)
}

void Units::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Units::~Units() {
  // @@protoc_insertion_point(destructor:DataTypes.Units)
  SharedDtor();
}

void Units::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Units::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Units::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Units_descriptor_;
}

const Units& Units::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

Units* Units::default_instance_ = NULL;

Units* Units::New(::google::protobuf::Arena* arena) const {
  Units* n = new Units;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Units::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Units)
  items_.Clear();
}

bool Units::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Units)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataTypes.Unit items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Units)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Units)
  return false;
#undef DO_
}

void Units::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Units)
  // repeated .DataTypes.Unit items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Units)
}

::google::protobuf::uint8* Units::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Units)
  // repeated .DataTypes.Unit items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Units)
  return target;
}

int Units::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Units)
  int total_size = 0;

  // repeated .DataTypes.Unit items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Units::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Units)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Units* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Units>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Units)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Units)
    MergeFrom(*source);
  }
}

void Units::MergeFrom(const Units& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Units)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
}

void Units::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Units)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Units::CopyFrom(const Units& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Units)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Units::IsInitialized() const {

  return true;
}

void Units::Swap(Units* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Units::InternalSwap(Units* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Units::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Units_descriptor_;
  metadata.reflection = Units_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Units

// repeated .DataTypes.Unit items = 1;
int Units::items_size() const {
  return items_.size();
}
void Units::clear_items() {
  items_.Clear();
}
const ::DataTypes::Unit& Units::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Units.items)
  return items_.Get(index);
}
::DataTypes::Unit* Units::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Units.items)
  return items_.Mutable(index);
}
::DataTypes::Unit* Units::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.Units.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >*
Units::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Units.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >&
Units::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.Units.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnitUpdate::kInsertedFieldNumber;
const int UnitUpdate::kDeletedFieldNumber;
const int UnitUpdate::kUpdatedFieldNumber;
const int UnitUpdate::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnitUpdate::UnitUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.UnitUpdate)
}

void UnitUpdate::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  UnitUpdate_default_oneof_instance_->inserted_ = const_cast< ::DataTypes::Unit*>(&::DataTypes::Unit::default_instance());
  UnitUpdate_default_oneof_instance_->deleted_ = const_cast< ::DataTypes::Unit*>(&::DataTypes::Unit::default_instance());
  UnitUpdate_default_oneof_instance_->updated_ = const_cast< ::DataTypes::Unit*>(&::DataTypes::Unit::default_instance());
}

UnitUpdate::UnitUpdate(const UnitUpdate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.UnitUpdate)
}

void UnitUpdate::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  state_ = 0;
  clear_has_unit_type();
}

UnitUpdate::~UnitUpdate() {
  // @@protoc_insertion_point(destructor:DataTypes.UnitUpdate)
  SharedDtor();
}

void UnitUpdate::SharedDtor() {
  if (has_unit_type()) {
    clear_unit_type();
  }
  if (this != default_instance_) {
  }
}

void UnitUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitUpdate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitUpdate_descriptor_;
}

const UnitUpdate& UnitUpdate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

UnitUpdate* UnitUpdate::default_instance_ = NULL;

UnitUpdate* UnitUpdate::New(::google::protobuf::Arena* arena) const {
  UnitUpdate* n = new UnitUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnitUpdate::clear_unit_type() {
// @@protoc_insertion_point(one_of_clear_start:DataTypes.UnitUpdate)
  switch(unit_type_case()) {
    case kInserted: {
      delete unit_type_.inserted_;
      break;
    }
    case kDeleted: {
      delete unit_type_.deleted_;
      break;
    }
    case kUpdated: {
      delete unit_type_.updated_;
      break;
    }
    case UNIT_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = UNIT_TYPE_NOT_SET;
}


void UnitUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.UnitUpdate)
  state_ = 0;
  clear_unit_type();
}

bool UnitUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.UnitUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Unit inserted = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inserted()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_deleted;
        break;
      }

      // optional .DataTypes.Unit deleted = 2;
      case 2: {
        if (tag == 18) {
         parse_deleted:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleted()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_updated;
        break;
      }

      // optional .DataTypes.Unit updated = 3;
      case 3: {
        if (tag == 26) {
         parse_updated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updated()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_state;
        break;
      }

      // optional .DataTypes.UnitState state = 4;
      case 4: {
        if (tag == 32) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::UnitState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.UnitUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.UnitUpdate)
  return false;
#undef DO_
}

void UnitUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.UnitUpdate)
  // optional .DataTypes.Unit inserted = 1;
  if (has_inserted()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *unit_type_.inserted_, output);
  }

  // optional .DataTypes.Unit deleted = 2;
  if (has_deleted()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *unit_type_.deleted_, output);
  }

  // optional .DataTypes.Unit updated = 3;
  if (has_updated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *unit_type_.updated_, output);
  }

  // optional .DataTypes.UnitState state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.UnitUpdate)
}

::google::protobuf::uint8* UnitUpdate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.UnitUpdate)
  // optional .DataTypes.Unit inserted = 1;
  if (has_inserted()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *unit_type_.inserted_, target);
  }

  // optional .DataTypes.Unit deleted = 2;
  if (has_deleted()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *unit_type_.deleted_, target);
  }

  // optional .DataTypes.Unit updated = 3;
  if (has_updated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *unit_type_.updated_, target);
  }

  // optional .DataTypes.UnitState state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.UnitUpdate)
  return target;
}

int UnitUpdate::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.UnitUpdate)
  int total_size = 0;

  // optional .DataTypes.UnitState state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  switch (unit_type_case()) {
    // optional .DataTypes.Unit inserted = 1;
    case kInserted: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *unit_type_.inserted_);
      break;
    }
    // optional .DataTypes.Unit deleted = 2;
    case kDeleted: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *unit_type_.deleted_);
      break;
    }
    // optional .DataTypes.Unit updated = 3;
    case kUpdated: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *unit_type_.updated_);
      break;
    }
    case UNIT_TYPE_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.UnitUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnitUpdate* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnitUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.UnitUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.UnitUpdate)
    MergeFrom(*source);
  }
}

void UnitUpdate::MergeFrom(const UnitUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.UnitUpdate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.unit_type_case()) {
    case kInserted: {
      mutable_inserted()->::DataTypes::Unit::MergeFrom(from.inserted());
      break;
    }
    case kDeleted: {
      mutable_deleted()->::DataTypes::Unit::MergeFrom(from.deleted());
      break;
    }
    case kUpdated: {
      mutable_updated()->::DataTypes::Unit::MergeFrom(from.updated());
      break;
    }
    case UNIT_TYPE_NOT_SET: {
      break;
    }
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void UnitUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.UnitUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitUpdate::CopyFrom(const UnitUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.UnitUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitUpdate::IsInitialized() const {

  return true;
}

void UnitUpdate::Swap(UnitUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnitUpdate::InternalSwap(UnitUpdate* other) {
  std::swap(state_, other->state_);
  std::swap(unit_type_, other->unit_type_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnitUpdate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitUpdate_descriptor_;
  metadata.reflection = UnitUpdate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnitUpdate

// optional .DataTypes.Unit inserted = 1;
bool UnitUpdate::has_inserted() const {
  return unit_type_case() == kInserted;
}
void UnitUpdate::set_has_inserted() {
  _oneof_case_[0] = kInserted;
}
void UnitUpdate::clear_inserted() {
  if (has_inserted()) {
    delete unit_type_.inserted_;
    clear_has_unit_type();
  }
}
 const ::DataTypes::Unit& UnitUpdate::inserted() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitUpdate.inserted)
  return has_inserted()
      ? *unit_type_.inserted_
      : ::DataTypes::Unit::default_instance();
}
::DataTypes::Unit* UnitUpdate::mutable_inserted() {
  if (!has_inserted()) {
    clear_unit_type();
    set_has_inserted();
    unit_type_.inserted_ = new ::DataTypes::Unit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitUpdate.inserted)
  return unit_type_.inserted_;
}
::DataTypes::Unit* UnitUpdate::release_inserted() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitUpdate.inserted)
  if (has_inserted()) {
    clear_has_unit_type();
    ::DataTypes::Unit* temp = unit_type_.inserted_;
    unit_type_.inserted_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UnitUpdate::set_allocated_inserted(::DataTypes::Unit* inserted) {
  clear_unit_type();
  if (inserted) {
    set_has_inserted();
    unit_type_.inserted_ = inserted;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitUpdate.inserted)
}

// optional .DataTypes.Unit deleted = 2;
bool UnitUpdate::has_deleted() const {
  return unit_type_case() == kDeleted;
}
void UnitUpdate::set_has_deleted() {
  _oneof_case_[0] = kDeleted;
}
void UnitUpdate::clear_deleted() {
  if (has_deleted()) {
    delete unit_type_.deleted_;
    clear_has_unit_type();
  }
}
 const ::DataTypes::Unit& UnitUpdate::deleted() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitUpdate.deleted)
  return has_deleted()
      ? *unit_type_.deleted_
      : ::DataTypes::Unit::default_instance();
}
::DataTypes::Unit* UnitUpdate::mutable_deleted() {
  if (!has_deleted()) {
    clear_unit_type();
    set_has_deleted();
    unit_type_.deleted_ = new ::DataTypes::Unit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitUpdate.deleted)
  return unit_type_.deleted_;
}
::DataTypes::Unit* UnitUpdate::release_deleted() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitUpdate.deleted)
  if (has_deleted()) {
    clear_has_unit_type();
    ::DataTypes::Unit* temp = unit_type_.deleted_;
    unit_type_.deleted_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UnitUpdate::set_allocated_deleted(::DataTypes::Unit* deleted) {
  clear_unit_type();
  if (deleted) {
    set_has_deleted();
    unit_type_.deleted_ = deleted;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitUpdate.deleted)
}

// optional .DataTypes.Unit updated = 3;
bool UnitUpdate::has_updated() const {
  return unit_type_case() == kUpdated;
}
void UnitUpdate::set_has_updated() {
  _oneof_case_[0] = kUpdated;
}
void UnitUpdate::clear_updated() {
  if (has_updated()) {
    delete unit_type_.updated_;
    clear_has_unit_type();
  }
}
 const ::DataTypes::Unit& UnitUpdate::updated() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitUpdate.updated)
  return has_updated()
      ? *unit_type_.updated_
      : ::DataTypes::Unit::default_instance();
}
::DataTypes::Unit* UnitUpdate::mutable_updated() {
  if (!has_updated()) {
    clear_unit_type();
    set_has_updated();
    unit_type_.updated_ = new ::DataTypes::Unit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitUpdate.updated)
  return unit_type_.updated_;
}
::DataTypes::Unit* UnitUpdate::release_updated() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitUpdate.updated)
  if (has_updated()) {
    clear_has_unit_type();
    ::DataTypes::Unit* temp = unit_type_.updated_;
    unit_type_.updated_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void UnitUpdate::set_allocated_updated(::DataTypes::Unit* updated) {
  clear_unit_type();
  if (updated) {
    set_has_updated();
    unit_type_.updated_ = updated;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitUpdate.updated)
}

// optional .DataTypes.UnitState state = 4;
void UnitUpdate::clear_state() {
  state_ = 0;
}
 ::DataTypes::UnitState UnitUpdate::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitUpdate.state)
  return static_cast< ::DataTypes::UnitState >(state_);
}
 void UnitUpdate::set_state(::DataTypes::UnitState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.UnitUpdate.state)
}

bool UnitUpdate::has_unit_type() const {
  return unit_type_case() != UNIT_TYPE_NOT_SET;
}
void UnitUpdate::clear_has_unit_type() {
  _oneof_case_[0] = UNIT_TYPE_NOT_SET;
}
UnitUpdate::UnitTypeCase UnitUpdate::unit_type_case() const {
  return UnitUpdate::UnitTypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnitUpdates::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnitUpdates::UnitUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.UnitUpdates)
}

void UnitUpdates::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnitUpdates::UnitUpdates(const UnitUpdates& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.UnitUpdates)
}

void UnitUpdates::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UnitUpdates::~UnitUpdates() {
  // @@protoc_insertion_point(destructor:DataTypes.UnitUpdates)
  SharedDtor();
}

void UnitUpdates::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UnitUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitUpdates::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitUpdates_descriptor_;
}

const UnitUpdates& UnitUpdates::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

UnitUpdates* UnitUpdates::default_instance_ = NULL;

UnitUpdates* UnitUpdates::New(::google::protobuf::Arena* arena) const {
  UnitUpdates* n = new UnitUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnitUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.UnitUpdates)
  items_.Clear();
}

bool UnitUpdates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.UnitUpdates)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataTypes.UnitUpdate items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.UnitUpdates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.UnitUpdates)
  return false;
#undef DO_
}

void UnitUpdates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.UnitUpdates)
  // repeated .DataTypes.UnitUpdate items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.UnitUpdates)
}

::google::protobuf::uint8* UnitUpdates::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.UnitUpdates)
  // repeated .DataTypes.UnitUpdate items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.UnitUpdates)
  return target;
}

int UnitUpdates::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.UnitUpdates)
  int total_size = 0;

  // repeated .DataTypes.UnitUpdate items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitUpdates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.UnitUpdates)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnitUpdates* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnitUpdates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.UnitUpdates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.UnitUpdates)
    MergeFrom(*source);
  }
}

void UnitUpdates::MergeFrom(const UnitUpdates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.UnitUpdates)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
}

void UnitUpdates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.UnitUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitUpdates::CopyFrom(const UnitUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.UnitUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitUpdates::IsInitialized() const {

  return true;
}

void UnitUpdates::Swap(UnitUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnitUpdates::InternalSwap(UnitUpdates* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnitUpdates::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitUpdates_descriptor_;
  metadata.reflection = UnitUpdates_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnitUpdates

// repeated .DataTypes.UnitUpdate items = 1;
int UnitUpdates::items_size() const {
  return items_.size();
}
void UnitUpdates::clear_items() {
  items_.Clear();
}
const ::DataTypes::UnitUpdate& UnitUpdates::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitUpdates.items)
  return items_.Get(index);
}
::DataTypes::UnitUpdate* UnitUpdates::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitUpdates.items)
  return items_.Mutable(index);
}
::DataTypes::UnitUpdate* UnitUpdates::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.UnitUpdates.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::UnitUpdate >*
UnitUpdates::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.UnitUpdates.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::UnitUpdate >&
UnitUpdates::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.UnitUpdates.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
