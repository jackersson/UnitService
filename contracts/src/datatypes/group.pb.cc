// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/group.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/group.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* Group_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Group_reflection_ = NULL;
const ::google::protobuf::Descriptor* Groups_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Groups_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2fgroup_2eproto() {
  protobuf_AddDesc_datatypes_2fgroup_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/group.proto");
  GOOGLE_CHECK(file != NULL);
  Group_descriptor_ = file->message_type(0);
  static const int Group_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, access_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, persons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, locations_),
  };
  Group_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Group_descriptor_,
      Group::default_instance_,
      Group_offsets_,
      -1,
      -1,
      -1,
      sizeof(Group),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Group, _is_default_instance_));
  Groups_descriptor_ = file->message_type(1);
  static const int Groups_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Groups, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Groups, count_),
  };
  Groups_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Groups_descriptor_,
      Groups::default_instance_,
      Groups_offsets_,
      -1,
      -1,
      -1,
      sizeof(Groups),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Groups, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Groups, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2fgroup_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Group_descriptor_, &Group::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Groups_descriptor_, &Groups::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2fgroup_2eproto() {
  delete Group::default_instance_;
  delete Group_reflection_;
  delete Groups::default_instance_;
  delete Groups_reflection_;
}

void protobuf_AddDesc_datatypes_2fgroup_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fvisit_5frecord_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fkey_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025datatypes/group.proto\022\tDataTypes\032\034data"
    "types/visit_record.proto\032\023datatypes/key."
    "proto\"\262\001\n\005Group\022\032\n\002id\030\001 \001(\0132\016.DataTypes."
    "Key\022\014\n\004name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022&"
    "\n\006access\030\004 \001(\0162\026.DataTypes.AccessState\022\037"
    "\n\007persons\030\005 \003(\0132\016.DataTypes.Key\022!\n\tlocat"
    "ions\030\006 \003(\0132\016.DataTypes.Key\"8\n\006Groups\022\037\n\005"
    "items\030\001 \003(\0132\020.DataTypes.Group\022\r\n\005count\030\002"
    " \001(\003BJ\n\007ex.grpcZ9github.com/Enebra/Servi"
    "ceCoordinator/grpc/datatypes/group\242\002\003RTG"
    "b\006proto3", 408);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/group.proto", &protobuf_RegisterTypes);
  Group::default_instance_ = new Group();
  Groups::default_instance_ = new Groups();
  Group::default_instance_->InitAsDefaultInstance();
  Groups::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2fgroup_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2fgroup_2eproto {
  StaticDescriptorInitializer_datatypes_2fgroup_2eproto() {
    protobuf_AddDesc_datatypes_2fgroup_2eproto();
  }
} static_descriptor_initializer_datatypes_2fgroup_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Group::kIdFieldNumber;
const int Group::kNameFieldNumber;
const int Group::kDescriptionFieldNumber;
const int Group::kAccessFieldNumber;
const int Group::kPersonsFieldNumber;
const int Group::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Group::Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Group)
}

void Group::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

Group::Group(const Group& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Group)
}

void Group::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_ = 0;
}

Group::~Group() {
  // @@protoc_insertion_point(destructor:DataTypes.Group)
  SharedDtor();
}

void Group::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete id_;
  }
}

void Group::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Group::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Group_descriptor_;
}

const Group& Group::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fgroup_2eproto();
  return *default_instance_;
}

Group* Group::default_instance_ = NULL;

Group* Group::New(::google::protobuf::Arena* arena) const {
  Group* n = new Group;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Group::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Group)
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_ = 0;
  persons_.Clear();
  locations_.Clear();
}

bool Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Group)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Key id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.Group.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_description;
        break;
      }

      // optional string description = 3;
      case 3: {
        if (tag == 26) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.Group.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_access;
        break;
      }

      // optional .DataTypes.AccessState access = 4;
      case 4: {
        if (tag == 32) {
         parse_access:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_access(static_cast< ::DataTypes::AccessState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_persons;
        break;
      }

      // repeated .DataTypes.Key persons = 5;
      case 5: {
        if (tag == 42) {
         parse_persons:
          DO_(input->IncrementRecursionDepth());
         parse_loop_persons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_persons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_persons;
        if (input->ExpectTag(50)) goto parse_loop_locations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .DataTypes.Key locations = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_locations;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Group)
  return false;
#undef DO_
}

void Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Group)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Group.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Group.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional .DataTypes.AccessState access = 4;
  if (this->access() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->access(), output);
  }

  // repeated .DataTypes.Key persons = 5;
  for (unsigned int i = 0, n = this->persons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->persons(i), output);
  }

  // repeated .DataTypes.Key locations = 6;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->locations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Group)
}

::google::protobuf::uint8* Group::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Group)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->id_, target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Group.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Group.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional .DataTypes.AccessState access = 4;
  if (this->access() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->access(), target);
  }

  // repeated .DataTypes.Key persons = 5;
  for (unsigned int i = 0, n = this->persons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->persons(i), target);
  }

  // repeated .DataTypes.Key locations = 6;
  for (unsigned int i = 0, n = this->locations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->locations(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Group)
  return target;
}

int Group::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Group)
  int total_size = 0;

  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // optional .DataTypes.AccessState access = 4;
  if (this->access() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->access());
  }

  // repeated .DataTypes.Key persons = 5;
  total_size += 1 * this->persons_size();
  for (int i = 0; i < this->persons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->persons(i));
  }

  // repeated .DataTypes.Key locations = 6;
  total_size += 1 * this->locations_size();
  for (int i = 0; i < this->locations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->locations(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Group)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Group* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Group)
    MergeFrom(*source);
  }
}

void Group::MergeFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Group)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  persons_.MergeFrom(from.persons_);
  locations_.MergeFrom(from.locations_);
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.access() != 0) {
    set_access(from.access());
  }
}

void Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Group::CopyFrom(const Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Group::IsInitialized() const {

  return true;
}

void Group::Swap(Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Group::InternalSwap(Group* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  std::swap(access_, other->access_);
  persons_.UnsafeArenaSwap(&other->persons_);
  locations_.UnsafeArenaSwap(&other->locations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Group::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Group_descriptor_;
  metadata.reflection = Group_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Group

// optional .DataTypes.Key id = 1;
bool Group::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void Group::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& Group::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* Group::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.id)
  return id_;
}
::DataTypes::Key* Group::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.Group.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void Group::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Group.id)
}

// optional string name = 2;
void Group::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Group::name() const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.Group.name)
}
 void Group::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.Group.name)
}
 void Group::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.Group.name)
}
 ::std::string* Group::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Group::release_name() {
  // @@protoc_insertion_point(field_release:DataTypes.Group.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Group.name)
}

// optional string description = 3;
void Group::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Group::description() const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.Group.description)
}
 void Group::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.Group.description)
}
 void Group::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.Group.description)
}
 ::std::string* Group::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Group::release_description() {
  // @@protoc_insertion_point(field_release:DataTypes.Group.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Group::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Group.description)
}

// optional .DataTypes.AccessState access = 4;
void Group::clear_access() {
  access_ = 0;
}
 ::DataTypes::AccessState Group::access() const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.access)
  return static_cast< ::DataTypes::AccessState >(access_);
}
 void Group::set_access(::DataTypes::AccessState value) {
  
  access_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Group.access)
}

// repeated .DataTypes.Key persons = 5;
int Group::persons_size() const {
  return persons_.size();
}
void Group::clear_persons() {
  persons_.Clear();
}
const ::DataTypes::Key& Group::persons(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.persons)
  return persons_.Get(index);
}
::DataTypes::Key* Group::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.persons)
  return persons_.Mutable(index);
}
::DataTypes::Key* Group::add_persons() {
  // @@protoc_insertion_point(field_add:DataTypes.Group.persons)
  return persons_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
Group::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Group.persons)
  return &persons_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
Group::persons() const {
  // @@protoc_insertion_point(field_list:DataTypes.Group.persons)
  return persons_;
}

// repeated .DataTypes.Key locations = 6;
int Group::locations_size() const {
  return locations_.size();
}
void Group::clear_locations() {
  locations_.Clear();
}
const ::DataTypes::Key& Group::locations(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Group.locations)
  return locations_.Get(index);
}
::DataTypes::Key* Group::mutable_locations(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Group.locations)
  return locations_.Mutable(index);
}
::DataTypes::Key* Group::add_locations() {
  // @@protoc_insertion_point(field_add:DataTypes.Group.locations)
  return locations_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Key >*
Group::mutable_locations() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Group.locations)
  return &locations_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Key >&
Group::locations() const {
  // @@protoc_insertion_point(field_list:DataTypes.Group.locations)
  return locations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Groups::kItemsFieldNumber;
const int Groups::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Groups::Groups()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Groups)
}

void Groups::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Groups::Groups(const Groups& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Groups)
}

void Groups::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  count_ = GOOGLE_LONGLONG(0);
}

Groups::~Groups() {
  // @@protoc_insertion_point(destructor:DataTypes.Groups)
  SharedDtor();
}

void Groups::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Groups::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Groups::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Groups_descriptor_;
}

const Groups& Groups::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fgroup_2eproto();
  return *default_instance_;
}

Groups* Groups::default_instance_ = NULL;

Groups* Groups::New(::google::protobuf::Arena* arena) const {
  Groups* n = new Groups;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Groups::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Groups)
  count_ = GOOGLE_LONGLONG(0);
  items_.Clear();
}

bool Groups::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Groups)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataTypes.Group items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int64 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Groups)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Groups)
  return false;
#undef DO_
}

void Groups::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Groups)
  // repeated .DataTypes.Group items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Groups)
}

::google::protobuf::uint8* Groups::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Groups)
  // repeated .DataTypes.Group items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // optional int64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Groups)
  return target;
}

int Groups::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Groups)
  int total_size = 0;

  // optional int64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // repeated .DataTypes.Group items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Groups::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Groups)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Groups* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Groups>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Groups)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Groups)
    MergeFrom(*source);
  }
}

void Groups::MergeFrom(const Groups& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Groups)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Groups::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Groups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Groups::CopyFrom(const Groups& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Groups)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Groups::IsInitialized() const {

  return true;
}

void Groups::Swap(Groups* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Groups::InternalSwap(Groups* other) {
  items_.UnsafeArenaSwap(&other->items_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Groups::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Groups_descriptor_;
  metadata.reflection = Groups_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Groups

// repeated .DataTypes.Group items = 1;
int Groups::items_size() const {
  return items_.size();
}
void Groups::clear_items() {
  items_.Clear();
}
const ::DataTypes::Group& Groups::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Groups.items)
  return items_.Get(index);
}
::DataTypes::Group* Groups::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Groups.items)
  return items_.Mutable(index);
}
::DataTypes::Group* Groups::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.Groups.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Group >*
Groups::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Groups.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Group >&
Groups::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.Groups.items)
  return items_;
}

// optional int64 count = 2;
void Groups::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Groups::count() const {
  // @@protoc_insertion_point(field_get:DataTypes.Groups.count)
  return count_;
}
 void Groups::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Groups.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
