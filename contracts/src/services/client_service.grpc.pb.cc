// Generated by the gRPC protobuf plugin.
// If you make any local change, they will be lost.
// source: services/client_service.proto

#include "services/client_service.pb.h"
#include "services/client_service.grpc.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/channel_interface.h>
#include <grpc++/impl/codegen/client_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/rpc_service_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/sync_stream.h>
namespace Services {

static const char* ClientService_method_names[] = {
  "/Services.ClientService/UpdateVisitRecords",
  "/Services.ClientService/UpdateUnits",
  "/Services.ClientService/UpdateLocation",
  "/Services.ClientService/UpdateDevices",
};

std::unique_ptr< ClientService::Stub> ClientService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  std::unique_ptr< ClientService::Stub> stub(new ClientService::Stub(channel));
  return stub;
}

ClientService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_UpdateVisitRecords_(ClientService_method_names[0], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateUnits_(ClientService_method_names[1], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateLocation_(ClientService_method_names[2], ::grpc::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateDevices_(ClientService_method_names[3], ::grpc::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ClientService::Stub::UpdateVisitRecords(::grpc::ClientContext* context, const ::DataTypes::VisitRecords& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateVisitRecords_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ClientService::Stub::AsyncUpdateVisitRecordsRaw(::grpc::ClientContext* context, const ::DataTypes::VisitRecords& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_UpdateVisitRecords_, context, request);
}

::grpc::Status ClientService::Stub::UpdateUnits(::grpc::ClientContext* context, const ::DataTypes::UnitUpdates& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateUnits_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ClientService::Stub::AsyncUpdateUnitsRaw(::grpc::ClientContext* context, const ::DataTypes::UnitUpdates& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_UpdateUnits_, context, request);
}

::grpc::Status ClientService::Stub::UpdateLocation(::grpc::ClientContext* context, const ::DataTypes::Location& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateLocation_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ClientService::Stub::AsyncUpdateLocationRaw(::grpc::ClientContext* context, const ::DataTypes::Location& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_UpdateLocation_, context, request);
}

::grpc::Status ClientService::Stub::UpdateDevices(::grpc::ClientContext* context, const ::DataTypes::DeviceUpdate& request, ::google::protobuf::Empty* response) {
  return ::grpc::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateDevices_, context, request, response);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* ClientService::Stub::AsyncUpdateDevicesRaw(::grpc::ClientContext* context, const ::DataTypes::DeviceUpdate& request, ::grpc::CompletionQueue* cq) {
  return new ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>(channel_.get(), cq, rpcmethod_UpdateDevices_, context, request);
}

ClientService::Service::Service() {
  (void)ClientService_method_names;
  AddMethod(new ::grpc::RpcServiceMethod(
      ClientService_method_names[0],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ClientService::Service, ::DataTypes::VisitRecords, ::google::protobuf::Empty>(
          std::mem_fn(&ClientService::Service::UpdateVisitRecords), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ClientService_method_names[1],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ClientService::Service, ::DataTypes::UnitUpdates, ::google::protobuf::Empty>(
          std::mem_fn(&ClientService::Service::UpdateUnits), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ClientService_method_names[2],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ClientService::Service, ::DataTypes::Location, ::google::protobuf::Empty>(
          std::mem_fn(&ClientService::Service::UpdateLocation), this)));
  AddMethod(new ::grpc::RpcServiceMethod(
      ClientService_method_names[3],
      ::grpc::RpcMethod::NORMAL_RPC,
      new ::grpc::RpcMethodHandler< ClientService::Service, ::DataTypes::DeviceUpdate, ::google::protobuf::Empty>(
          std::mem_fn(&ClientService::Service::UpdateDevices), this)));
}

ClientService::Service::~Service() {
}

::grpc::Status ClientService::Service::UpdateVisitRecords(::grpc::ServerContext* context, const ::DataTypes::VisitRecords* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ClientService::Service::UpdateUnits(::grpc::ServerContext* context, const ::DataTypes::UnitUpdates* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ClientService::Service::UpdateLocation(::grpc::ServerContext* context, const ::DataTypes::Location* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ClientService::Service::UpdateDevices(::grpc::ServerContext* context, const ::DataTypes::DeviceUpdate* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace Services

