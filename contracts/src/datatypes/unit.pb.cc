// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/unit.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/unit.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* Unit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Unit_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConnectedUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConnectedUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscriptionMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscriptionMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdatedUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdatedUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdatedUnits_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdatedUnits_reflection_ = NULL;
const ::google::protobuf::Descriptor* Units_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Units_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnitConfiguration_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitConfiguration_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnitLocationState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnitLocationState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UnitState_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2funit_2eproto() {
  protobuf_AddDesc_datatypes_2funit_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/unit.proto");
  GOOGLE_CHECK(file != NULL);
  Unit_descriptor_ = file->message_type(0);
  static const int Unit_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, connected_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, heartbeat_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, locations_),
  };
  Unit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Unit_descriptor_,
      Unit::default_instance_,
      Unit_offsets_,
      -1,
      -1,
      -1,
      sizeof(Unit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unit, _is_default_instance_));
  ConnectedUnit_descriptor_ = file->message_type(1);
  static const int ConnectedUnit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedUnit, ip_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedUnit, mac_address_),
  };
  ConnectedUnit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ConnectedUnit_descriptor_,
      ConnectedUnit::default_instance_,
      ConnectedUnit_offsets_,
      -1,
      -1,
      -1,
      sizeof(ConnectedUnit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedUnit, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectedUnit, _is_default_instance_));
  SubscriptionMsg_descriptor_ = file->message_type(2);
  static const int SubscriptionMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, publisher_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, subscriber_id_),
  };
  SubscriptionMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscriptionMsg_descriptor_,
      SubscriptionMsg::default_instance_,
      SubscriptionMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscriptionMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionMsg, _is_default_instance_));
  UpdatedUnit_descriptor_ = file->message_type(3);
  static const int UpdatedUnit_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnit, current_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnit, state_),
  };
  UpdatedUnit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdatedUnit_descriptor_,
      UpdatedUnit::default_instance_,
      UpdatedUnit_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdatedUnit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnit, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnit, _is_default_instance_));
  UpdatedUnits_descriptor_ = file->message_type(4);
  static const int UpdatedUnits_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnits, items_),
  };
  UpdatedUnits_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdatedUnits_descriptor_,
      UpdatedUnits::default_instance_,
      UpdatedUnits_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdatedUnits),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnits, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatedUnits, _is_default_instance_));
  Units_descriptor_ = file->message_type(5);
  static const int Units_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, items_),
  };
  Units_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Units_descriptor_,
      Units::default_instance_,
      Units_offsets_,
      -1,
      -1,
      -1,
      sizeof(Units),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Units, _is_default_instance_));
  UnitConfiguration_descriptor_ = file->message_type(6);
  static const int UnitConfiguration_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitConfiguration, master_ip_address_),
  };
  UnitConfiguration_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnitConfiguration_descriptor_,
      UnitConfiguration::default_instance_,
      UnitConfiguration_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnitConfiguration),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitConfiguration, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitConfiguration, _is_default_instance_));
  UnitLocationState_descriptor_ = file->message_type(7);
  static const int UnitLocationState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitLocationState, location_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitLocationState, state_),
  };
  UnitLocationState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnitLocationState_descriptor_,
      UnitLocationState::default_instance_,
      UnitLocationState_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnitLocationState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitLocationState, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnitLocationState, _is_default_instance_));
  UnitState_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2funit_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Unit_descriptor_, &Unit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ConnectedUnit_descriptor_, &ConnectedUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscriptionMsg_descriptor_, &SubscriptionMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdatedUnit_descriptor_, &UpdatedUnit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdatedUnits_descriptor_, &UpdatedUnits::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Units_descriptor_, &Units::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnitConfiguration_descriptor_, &UnitConfiguration::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnitLocationState_descriptor_, &UnitLocationState::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2funit_2eproto() {
  delete Unit::default_instance_;
  delete Unit_reflection_;
  delete ConnectedUnit::default_instance_;
  delete ConnectedUnit_reflection_;
  delete SubscriptionMsg::default_instance_;
  delete SubscriptionMsg_reflection_;
  delete UpdatedUnit::default_instance_;
  delete UpdatedUnit_reflection_;
  delete UpdatedUnits::default_instance_;
  delete UpdatedUnits_reflection_;
  delete Units::default_instance_;
  delete Units_reflection_;
  delete UnitConfiguration::default_instance_;
  delete UnitConfiguration_reflection_;
  delete UnitLocationState::default_instance_;
  delete UnitLocationState_reflection_;
}

void protobuf_AddDesc_datatypes_2funit_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2flocation_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024datatypes/unit.proto\022\tDataTypes\032\030datat"
    "ypes/location.proto\"y\n\004Unit\0220\n\016connected"
    "_unit\030\001 \001(\0132\030.DataTypes.ConnectedUnit\022\026\n"
    "\016heartbeat_time\030\002 \001(\003\022\'\n\tlocations\030\003 \001(\013"
    "2\024.DataTypes.Locations\"8\n\rConnectedUnit\022"
    "\022\n\nip_address\030\001 \001(\t\022\023\n\013mac_address\030\002 \001(\t"
    "\">\n\017SubscriptionMsg\022\024\n\014publisher_id\030\001 \001("
    "\t\022\025\n\rsubscriber_id\030\002 \001(\t\"Y\n\013UpdatedUnit\022"
    "%\n\014current_unit\030\001 \001(\0132\017.DataTypes.Unit\022#"
    "\n\005state\030\002 \001(\0162\024.DataTypes.UnitState\"5\n\014U"
    "pdatedUnits\022%\n\005items\030\001 \003(\0132\026.DataTypes.U"
    "pdatedUnit\"\'\n\005Units\022\036\n\005items\030\001 \003(\0132\017.Dat"
    "aTypes.Unit\".\n\021UnitConfiguration\022\031\n\021mast"
    "er_ip_address\030\001 \001(\t\"Q\n\021UnitLocationState"
    "\022\023\n\013location_id\030\001 \001(\t\022\'\n\005state\030\002 \001(\0162\030.D"
    "ataTypes.LocationState*>\n\tUnitState\022\t\n\005N"
    "one_\020\000\022\014\n\010Inserted\020\001\022\013\n\007Deleted\020\002\022\013\n\007Upd"
    "ated\020\003BI\n\007ex.grpcZ8github.com/Enebra/Ser"
    "viceCoordinator/grpc/datatypes/unit\242\002\003RT"
    "Gb\006proto3", 769);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/unit.proto", &protobuf_RegisterTypes);
  Unit::default_instance_ = new Unit();
  ConnectedUnit::default_instance_ = new ConnectedUnit();
  SubscriptionMsg::default_instance_ = new SubscriptionMsg();
  UpdatedUnit::default_instance_ = new UpdatedUnit();
  UpdatedUnits::default_instance_ = new UpdatedUnits();
  Units::default_instance_ = new Units();
  UnitConfiguration::default_instance_ = new UnitConfiguration();
  UnitLocationState::default_instance_ = new UnitLocationState();
  Unit::default_instance_->InitAsDefaultInstance();
  ConnectedUnit::default_instance_->InitAsDefaultInstance();
  SubscriptionMsg::default_instance_->InitAsDefaultInstance();
  UpdatedUnit::default_instance_->InitAsDefaultInstance();
  UpdatedUnits::default_instance_->InitAsDefaultInstance();
  Units::default_instance_->InitAsDefaultInstance();
  UnitConfiguration::default_instance_->InitAsDefaultInstance();
  UnitLocationState::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2funit_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2funit_2eproto {
  StaticDescriptorInitializer_datatypes_2funit_2eproto() {
    protobuf_AddDesc_datatypes_2funit_2eproto();
  }
} static_descriptor_initializer_datatypes_2funit_2eproto_;
const ::google::protobuf::EnumDescriptor* UnitState_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitState_descriptor_;
}
bool UnitState_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Unit::kConnectedUnitFieldNumber;
const int Unit::kHeartbeatTimeFieldNumber;
const int Unit::kLocationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Unit::Unit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Unit)
}

void Unit::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  connected_unit_ = const_cast< ::DataTypes::ConnectedUnit*>(&::DataTypes::ConnectedUnit::default_instance());
  locations_ = const_cast< ::DataTypes::Locations*>(&::DataTypes::Locations::default_instance());
}

Unit::Unit(const Unit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Unit)
}

void Unit::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  connected_unit_ = NULL;
  heartbeat_time_ = GOOGLE_LONGLONG(0);
  locations_ = NULL;
}

Unit::~Unit() {
  // @@protoc_insertion_point(destructor:DataTypes.Unit)
  SharedDtor();
}

void Unit::SharedDtor() {
  if (this != default_instance_) {
    delete connected_unit_;
    delete locations_;
  }
}

void Unit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Unit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Unit_descriptor_;
}

const Unit& Unit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

Unit* Unit::default_instance_ = NULL;

Unit* Unit::New(::google::protobuf::Arena* arena) const {
  Unit* n = new Unit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Unit::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Unit)
  if (GetArenaNoVirtual() == NULL && connected_unit_ != NULL) delete connected_unit_;
  connected_unit_ = NULL;
  heartbeat_time_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && locations_ != NULL) delete locations_;
  locations_ = NULL;
}

bool Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Unit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.ConnectedUnit connected_unit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_connected_unit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_heartbeat_time;
        break;
      }

      // optional int64 heartbeat_time = 2;
      case 2: {
        if (tag == 16) {
         parse_heartbeat_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &heartbeat_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_locations;
        break;
      }

      // optional .DataTypes.Locations locations = 3;
      case 3: {
        if (tag == 26) {
         parse_locations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Unit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Unit)
  return false;
#undef DO_
}

void Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Unit)
  // optional .DataTypes.ConnectedUnit connected_unit = 1;
  if (this->has_connected_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->connected_unit_, output);
  }

  // optional int64 heartbeat_time = 2;
  if (this->heartbeat_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->heartbeat_time(), output);
  }

  // optional .DataTypes.Locations locations = 3;
  if (this->has_locations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->locations_, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Unit)
}

::google::protobuf::uint8* Unit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Unit)
  // optional .DataTypes.ConnectedUnit connected_unit = 1;
  if (this->has_connected_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->connected_unit_, target);
  }

  // optional int64 heartbeat_time = 2;
  if (this->heartbeat_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->heartbeat_time(), target);
  }

  // optional .DataTypes.Locations locations = 3;
  if (this->has_locations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->locations_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Unit)
  return target;
}

int Unit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Unit)
  int total_size = 0;

  // optional .DataTypes.ConnectedUnit connected_unit = 1;
  if (this->has_connected_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->connected_unit_);
  }

  // optional int64 heartbeat_time = 2;
  if (this->heartbeat_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->heartbeat_time());
  }

  // optional .DataTypes.Locations locations = 3;
  if (this->has_locations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->locations_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Unit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Unit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Unit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Unit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Unit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Unit)
    MergeFrom(*source);
  }
}

void Unit::MergeFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Unit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_connected_unit()) {
    mutable_connected_unit()->::DataTypes::ConnectedUnit::MergeFrom(from.connected_unit());
  }
  if (from.heartbeat_time() != 0) {
    set_heartbeat_time(from.heartbeat_time());
  }
  if (from.has_locations()) {
    mutable_locations()->::DataTypes::Locations::MergeFrom(from.locations());
  }
}

void Unit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unit::CopyFrom(const Unit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unit::IsInitialized() const {

  return true;
}

void Unit::Swap(Unit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Unit::InternalSwap(Unit* other) {
  std::swap(connected_unit_, other->connected_unit_);
  std::swap(heartbeat_time_, other->heartbeat_time_);
  std::swap(locations_, other->locations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Unit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Unit_descriptor_;
  metadata.reflection = Unit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Unit

// optional .DataTypes.ConnectedUnit connected_unit = 1;
bool Unit::has_connected_unit() const {
  return !_is_default_instance_ && connected_unit_ != NULL;
}
void Unit::clear_connected_unit() {
  if (GetArenaNoVirtual() == NULL && connected_unit_ != NULL) delete connected_unit_;
  connected_unit_ = NULL;
}
const ::DataTypes::ConnectedUnit& Unit::connected_unit() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.connected_unit)
  return connected_unit_ != NULL ? *connected_unit_ : *default_instance_->connected_unit_;
}
::DataTypes::ConnectedUnit* Unit::mutable_connected_unit() {
  
  if (connected_unit_ == NULL) {
    connected_unit_ = new ::DataTypes::ConnectedUnit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.connected_unit)
  return connected_unit_;
}
::DataTypes::ConnectedUnit* Unit::release_connected_unit() {
  // @@protoc_insertion_point(field_release:DataTypes.Unit.connected_unit)
  
  ::DataTypes::ConnectedUnit* temp = connected_unit_;
  connected_unit_ = NULL;
  return temp;
}
void Unit::set_allocated_connected_unit(::DataTypes::ConnectedUnit* connected_unit) {
  delete connected_unit_;
  connected_unit_ = connected_unit;
  if (connected_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Unit.connected_unit)
}

// optional int64 heartbeat_time = 2;
void Unit::clear_heartbeat_time() {
  heartbeat_time_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Unit::heartbeat_time() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.heartbeat_time)
  return heartbeat_time_;
}
 void Unit::set_heartbeat_time(::google::protobuf::int64 value) {
  
  heartbeat_time_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Unit.heartbeat_time)
}

// optional .DataTypes.Locations locations = 3;
bool Unit::has_locations() const {
  return !_is_default_instance_ && locations_ != NULL;
}
void Unit::clear_locations() {
  if (GetArenaNoVirtual() == NULL && locations_ != NULL) delete locations_;
  locations_ = NULL;
}
const ::DataTypes::Locations& Unit::locations() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.locations)
  return locations_ != NULL ? *locations_ : *default_instance_->locations_;
}
::DataTypes::Locations* Unit::mutable_locations() {
  
  if (locations_ == NULL) {
    locations_ = new ::DataTypes::Locations;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.locations)
  return locations_;
}
::DataTypes::Locations* Unit::release_locations() {
  // @@protoc_insertion_point(field_release:DataTypes.Unit.locations)
  
  ::DataTypes::Locations* temp = locations_;
  locations_ = NULL;
  return temp;
}
void Unit::set_allocated_locations(::DataTypes::Locations* locations) {
  delete locations_;
  locations_ = locations;
  if (locations) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Unit.locations)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectedUnit::kIpAddressFieldNumber;
const int ConnectedUnit::kMacAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectedUnit::ConnectedUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.ConnectedUnit)
}

void ConnectedUnit::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ConnectedUnit::ConnectedUnit(const ConnectedUnit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.ConnectedUnit)
}

void ConnectedUnit::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ConnectedUnit::~ConnectedUnit() {
  // @@protoc_insertion_point(destructor:DataTypes.ConnectedUnit)
  SharedDtor();
}

void ConnectedUnit::SharedDtor() {
  ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ConnectedUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectedUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConnectedUnit_descriptor_;
}

const ConnectedUnit& ConnectedUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

ConnectedUnit* ConnectedUnit::default_instance_ = NULL;

ConnectedUnit* ConnectedUnit::New(::google::protobuf::Arena* arena) const {
  ConnectedUnit* n = new ConnectedUnit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectedUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.ConnectedUnit)
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConnectedUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.ConnectedUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ip_address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_address().data(), this->ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.ConnectedUnit.ip_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mac_address;
        break;
      }

      // optional string mac_address = 2;
      case 2: {
        if (tag == 18) {
         parse_mac_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mac_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mac_address().data(), this->mac_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.ConnectedUnit.mac_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.ConnectedUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.ConnectedUnit)
  return false;
#undef DO_
}

void ConnectedUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.ConnectedUnit)
  // optional string ip_address = 1;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.ConnectedUnit.ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip_address(), output);
  }

  // optional string mac_address = 2;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.ConnectedUnit.mac_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mac_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.ConnectedUnit)
}

::google::protobuf::uint8* ConnectedUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.ConnectedUnit)
  // optional string ip_address = 1;
  if (this->ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_address().data(), this->ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.ConnectedUnit.ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip_address(), target);
  }

  // optional string mac_address = 2;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mac_address().data(), this->mac_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.ConnectedUnit.mac_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mac_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.ConnectedUnit)
  return target;
}

int ConnectedUnit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.ConnectedUnit)
  int total_size = 0;

  // optional string ip_address = 1;
  if (this->ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_address());
  }

  // optional string mac_address = 2;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mac_address());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectedUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.ConnectedUnit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ConnectedUnit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectedUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.ConnectedUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.ConnectedUnit)
    MergeFrom(*source);
  }
}

void ConnectedUnit::MergeFrom(const ConnectedUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.ConnectedUnit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.ip_address().size() > 0) {

    ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_address_);
  }
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
}

void ConnectedUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.ConnectedUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectedUnit::CopyFrom(const ConnectedUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.ConnectedUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectedUnit::IsInitialized() const {

  return true;
}

void ConnectedUnit::Swap(ConnectedUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectedUnit::InternalSwap(ConnectedUnit* other) {
  ip_address_.Swap(&other->ip_address_);
  mac_address_.Swap(&other->mac_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectedUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConnectedUnit_descriptor_;
  metadata.reflection = ConnectedUnit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectedUnit

// optional string ip_address = 1;
void ConnectedUnit::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConnectedUnit::ip_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectedUnit.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectedUnit::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.ConnectedUnit.ip_address)
}
 void ConnectedUnit::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.ConnectedUnit.ip_address)
}
 void ConnectedUnit::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.ConnectedUnit.ip_address)
}
 ::std::string* ConnectedUnit::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.ConnectedUnit.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConnectedUnit::release_ip_address() {
  // @@protoc_insertion_point(field_release:DataTypes.ConnectedUnit.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectedUnit::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.ConnectedUnit.ip_address)
}

// optional string mac_address = 2;
void ConnectedUnit::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ConnectedUnit::mac_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectedUnit.mac_address)
  return mac_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectedUnit::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.ConnectedUnit.mac_address)
}
 void ConnectedUnit::set_mac_address(const char* value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.ConnectedUnit.mac_address)
}
 void ConnectedUnit::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.ConnectedUnit.mac_address)
}
 ::std::string* ConnectedUnit::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.ConnectedUnit.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ConnectedUnit::release_mac_address() {
  // @@protoc_insertion_point(field_release:DataTypes.ConnectedUnit.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ConnectedUnit::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.ConnectedUnit.mac_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionMsg::kPublisherIdFieldNumber;
const int SubscriptionMsg::kSubscriberIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionMsg::SubscriptionMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.SubscriptionMsg)
}

void SubscriptionMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SubscriptionMsg::SubscriptionMsg(const SubscriptionMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.SubscriptionMsg)
}

void SubscriptionMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  publisher_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscriber_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SubscriptionMsg::~SubscriptionMsg() {
  // @@protoc_insertion_point(destructor:DataTypes.SubscriptionMsg)
  SharedDtor();
}

void SubscriptionMsg::SharedDtor() {
  publisher_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscriber_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SubscriptionMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscriptionMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscriptionMsg_descriptor_;
}

const SubscriptionMsg& SubscriptionMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

SubscriptionMsg* SubscriptionMsg::default_instance_ = NULL;

SubscriptionMsg* SubscriptionMsg::New(::google::protobuf::Arena* arena) const {
  SubscriptionMsg* n = new SubscriptionMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscriptionMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.SubscriptionMsg)
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscriber_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SubscriptionMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.SubscriptionMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string publisher_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publisher_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publisher_id().data(), this->publisher_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.SubscriptionMsg.publisher_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_subscriber_id;
        break;
      }

      // optional string subscriber_id = 2;
      case 2: {
        if (tag == 18) {
         parse_subscriber_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subscriber_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subscriber_id().data(), this->subscriber_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.SubscriptionMsg.subscriber_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.SubscriptionMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.SubscriptionMsg)
  return false;
#undef DO_
}

void SubscriptionMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.SubscriptionMsg)
  // optional string publisher_id = 1;
  if (this->publisher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher_id().data(), this->publisher_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.SubscriptionMsg.publisher_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->publisher_id(), output);
  }

  // optional string subscriber_id = 2;
  if (this->subscriber_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscriber_id().data(), this->subscriber_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.SubscriptionMsg.subscriber_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subscriber_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.SubscriptionMsg)
}

::google::protobuf::uint8* SubscriptionMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.SubscriptionMsg)
  // optional string publisher_id = 1;
  if (this->publisher_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publisher_id().data(), this->publisher_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.SubscriptionMsg.publisher_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->publisher_id(), target);
  }

  // optional string subscriber_id = 2;
  if (this->subscriber_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscriber_id().data(), this->subscriber_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.SubscriptionMsg.subscriber_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subscriber_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.SubscriptionMsg)
  return target;
}

int SubscriptionMsg::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.SubscriptionMsg)
  int total_size = 0;

  // optional string publisher_id = 1;
  if (this->publisher_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publisher_id());
  }

  // optional string subscriber_id = 2;
  if (this->subscriber_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subscriber_id());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscriptionMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.SubscriptionMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscriptionMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscriptionMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.SubscriptionMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.SubscriptionMsg)
    MergeFrom(*source);
  }
}

void SubscriptionMsg::MergeFrom(const SubscriptionMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.SubscriptionMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.publisher_id().size() > 0) {

    publisher_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publisher_id_);
  }
  if (from.subscriber_id().size() > 0) {

    subscriber_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subscriber_id_);
  }
}

void SubscriptionMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.SubscriptionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionMsg::CopyFrom(const SubscriptionMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.SubscriptionMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionMsg::IsInitialized() const {

  return true;
}

void SubscriptionMsg::Swap(SubscriptionMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionMsg::InternalSwap(SubscriptionMsg* other) {
  publisher_id_.Swap(&other->publisher_id_);
  subscriber_id_.Swap(&other->subscriber_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscriptionMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscriptionMsg_descriptor_;
  metadata.reflection = SubscriptionMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscriptionMsg

// optional string publisher_id = 1;
void SubscriptionMsg::clear_publisher_id() {
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SubscriptionMsg::publisher_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.SubscriptionMsg.publisher_id)
  return publisher_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubscriptionMsg::set_publisher_id(const ::std::string& value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.SubscriptionMsg.publisher_id)
}
 void SubscriptionMsg::set_publisher_id(const char* value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.SubscriptionMsg.publisher_id)
}
 void SubscriptionMsg::set_publisher_id(const char* value, size_t size) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.SubscriptionMsg.publisher_id)
}
 ::std::string* SubscriptionMsg::mutable_publisher_id() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.SubscriptionMsg.publisher_id)
  return publisher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SubscriptionMsg::release_publisher_id() {
  // @@protoc_insertion_point(field_release:DataTypes.SubscriptionMsg.publisher_id)
  
  return publisher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubscriptionMsg::set_allocated_publisher_id(::std::string* publisher_id) {
  if (publisher_id != NULL) {
    
  } else {
    
  }
  publisher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher_id);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.SubscriptionMsg.publisher_id)
}

// optional string subscriber_id = 2;
void SubscriptionMsg::clear_subscriber_id() {
  subscriber_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SubscriptionMsg::subscriber_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.SubscriptionMsg.subscriber_id)
  return subscriber_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubscriptionMsg::set_subscriber_id(const ::std::string& value) {
  
  subscriber_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.SubscriptionMsg.subscriber_id)
}
 void SubscriptionMsg::set_subscriber_id(const char* value) {
  
  subscriber_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.SubscriptionMsg.subscriber_id)
}
 void SubscriptionMsg::set_subscriber_id(const char* value, size_t size) {
  
  subscriber_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.SubscriptionMsg.subscriber_id)
}
 ::std::string* SubscriptionMsg::mutable_subscriber_id() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.SubscriptionMsg.subscriber_id)
  return subscriber_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SubscriptionMsg::release_subscriber_id() {
  // @@protoc_insertion_point(field_release:DataTypes.SubscriptionMsg.subscriber_id)
  
  return subscriber_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SubscriptionMsg::set_allocated_subscriber_id(::std::string* subscriber_id) {
  if (subscriber_id != NULL) {
    
  } else {
    
  }
  subscriber_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscriber_id);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.SubscriptionMsg.subscriber_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatedUnit::kCurrentUnitFieldNumber;
const int UpdatedUnit::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatedUnit::UpdatedUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.UpdatedUnit)
}

void UpdatedUnit::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  current_unit_ = const_cast< ::DataTypes::Unit*>(&::DataTypes::Unit::default_instance());
}

UpdatedUnit::UpdatedUnit(const UpdatedUnit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.UpdatedUnit)
}

void UpdatedUnit::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  current_unit_ = NULL;
  state_ = 0;
}

UpdatedUnit::~UpdatedUnit() {
  // @@protoc_insertion_point(destructor:DataTypes.UpdatedUnit)
  SharedDtor();
}

void UpdatedUnit::SharedDtor() {
  if (this != default_instance_) {
    delete current_unit_;
  }
}

void UpdatedUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatedUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdatedUnit_descriptor_;
}

const UpdatedUnit& UpdatedUnit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

UpdatedUnit* UpdatedUnit::default_instance_ = NULL;

UpdatedUnit* UpdatedUnit::New(::google::protobuf::Arena* arena) const {
  UpdatedUnit* n = new UpdatedUnit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatedUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.UpdatedUnit)
  if (GetArenaNoVirtual() == NULL && current_unit_ != NULL) delete current_unit_;
  current_unit_ = NULL;
  state_ = 0;
}

bool UpdatedUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.UpdatedUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Unit current_unit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_current_unit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .DataTypes.UnitState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::UnitState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.UpdatedUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.UpdatedUnit)
  return false;
#undef DO_
}

void UpdatedUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.UpdatedUnit)
  // optional .DataTypes.Unit current_unit = 1;
  if (this->has_current_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->current_unit_, output);
  }

  // optional .DataTypes.UnitState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.UpdatedUnit)
}

::google::protobuf::uint8* UpdatedUnit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.UpdatedUnit)
  // optional .DataTypes.Unit current_unit = 1;
  if (this->has_current_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->current_unit_, target);
  }

  // optional .DataTypes.UnitState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.UpdatedUnit)
  return target;
}

int UpdatedUnit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.UpdatedUnit)
  int total_size = 0;

  // optional .DataTypes.Unit current_unit = 1;
  if (this->has_current_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->current_unit_);
  }

  // optional .DataTypes.UnitState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatedUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.UpdatedUnit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdatedUnit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatedUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.UpdatedUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.UpdatedUnit)
    MergeFrom(*source);
  }
}

void UpdatedUnit::MergeFrom(const UpdatedUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.UpdatedUnit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_current_unit()) {
    mutable_current_unit()->::DataTypes::Unit::MergeFrom(from.current_unit());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void UpdatedUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.UpdatedUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatedUnit::CopyFrom(const UpdatedUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.UpdatedUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatedUnit::IsInitialized() const {

  return true;
}

void UpdatedUnit::Swap(UpdatedUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatedUnit::InternalSwap(UpdatedUnit* other) {
  std::swap(current_unit_, other->current_unit_);
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatedUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdatedUnit_descriptor_;
  metadata.reflection = UpdatedUnit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatedUnit

// optional .DataTypes.Unit current_unit = 1;
bool UpdatedUnit::has_current_unit() const {
  return !_is_default_instance_ && current_unit_ != NULL;
}
void UpdatedUnit::clear_current_unit() {
  if (GetArenaNoVirtual() == NULL && current_unit_ != NULL) delete current_unit_;
  current_unit_ = NULL;
}
const ::DataTypes::Unit& UpdatedUnit::current_unit() const {
  // @@protoc_insertion_point(field_get:DataTypes.UpdatedUnit.current_unit)
  return current_unit_ != NULL ? *current_unit_ : *default_instance_->current_unit_;
}
::DataTypes::Unit* UpdatedUnit::mutable_current_unit() {
  
  if (current_unit_ == NULL) {
    current_unit_ = new ::DataTypes::Unit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.UpdatedUnit.current_unit)
  return current_unit_;
}
::DataTypes::Unit* UpdatedUnit::release_current_unit() {
  // @@protoc_insertion_point(field_release:DataTypes.UpdatedUnit.current_unit)
  
  ::DataTypes::Unit* temp = current_unit_;
  current_unit_ = NULL;
  return temp;
}
void UpdatedUnit::set_allocated_current_unit(::DataTypes::Unit* current_unit) {
  delete current_unit_;
  current_unit_ = current_unit;
  if (current_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UpdatedUnit.current_unit)
}

// optional .DataTypes.UnitState state = 2;
void UpdatedUnit::clear_state() {
  state_ = 0;
}
 ::DataTypes::UnitState UpdatedUnit::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.UpdatedUnit.state)
  return static_cast< ::DataTypes::UnitState >(state_);
}
 void UpdatedUnit::set_state(::DataTypes::UnitState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.UpdatedUnit.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatedUnits::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatedUnits::UpdatedUnits()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.UpdatedUnits)
}

void UpdatedUnits::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UpdatedUnits::UpdatedUnits(const UpdatedUnits& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.UpdatedUnits)
}

void UpdatedUnits::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

UpdatedUnits::~UpdatedUnits() {
  // @@protoc_insertion_point(destructor:DataTypes.UpdatedUnits)
  SharedDtor();
}

void UpdatedUnits::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdatedUnits::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatedUnits::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdatedUnits_descriptor_;
}

const UpdatedUnits& UpdatedUnits::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

UpdatedUnits* UpdatedUnits::default_instance_ = NULL;

UpdatedUnits* UpdatedUnits::New(::google::protobuf::Arena* arena) const {
  UpdatedUnits* n = new UpdatedUnits;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatedUnits::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.UpdatedUnits)
  items_.Clear();
}

bool UpdatedUnits::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.UpdatedUnits)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataTypes.UpdatedUnit items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.UpdatedUnits)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.UpdatedUnits)
  return false;
#undef DO_
}

void UpdatedUnits::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.UpdatedUnits)
  // repeated .DataTypes.UpdatedUnit items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.UpdatedUnits)
}

::google::protobuf::uint8* UpdatedUnits::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.UpdatedUnits)
  // repeated .DataTypes.UpdatedUnit items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.UpdatedUnits)
  return target;
}

int UpdatedUnits::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.UpdatedUnits)
  int total_size = 0;

  // repeated .DataTypes.UpdatedUnit items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatedUnits::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.UpdatedUnits)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdatedUnits* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatedUnits>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.UpdatedUnits)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.UpdatedUnits)
    MergeFrom(*source);
  }
}

void UpdatedUnits::MergeFrom(const UpdatedUnits& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.UpdatedUnits)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
}

void UpdatedUnits::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.UpdatedUnits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatedUnits::CopyFrom(const UpdatedUnits& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.UpdatedUnits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatedUnits::IsInitialized() const {

  return true;
}

void UpdatedUnits::Swap(UpdatedUnits* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatedUnits::InternalSwap(UpdatedUnits* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatedUnits::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdatedUnits_descriptor_;
  metadata.reflection = UpdatedUnits_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatedUnits

// repeated .DataTypes.UpdatedUnit items = 1;
int UpdatedUnits::items_size() const {
  return items_.size();
}
void UpdatedUnits::clear_items() {
  items_.Clear();
}
const ::DataTypes::UpdatedUnit& UpdatedUnits::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.UpdatedUnits.items)
  return items_.Get(index);
}
::DataTypes::UpdatedUnit* UpdatedUnits::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.UpdatedUnits.items)
  return items_.Mutable(index);
}
::DataTypes::UpdatedUnit* UpdatedUnits::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.UpdatedUnits.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit >*
UpdatedUnits::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.UpdatedUnits.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit >&
UpdatedUnits::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.UpdatedUnits.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Units::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Units::Units()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Units)
}

void Units::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Units::Units(const Units& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Units)
}

void Units::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Units::~Units() {
  // @@protoc_insertion_point(destructor:DataTypes.Units)
  SharedDtor();
}

void Units::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Units::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Units::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Units_descriptor_;
}

const Units& Units::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

Units* Units::default_instance_ = NULL;

Units* Units::New(::google::protobuf::Arena* arena) const {
  Units* n = new Units;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Units::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Units)
  items_.Clear();
}

bool Units::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Units)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DataTypes.Unit items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Units)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Units)
  return false;
#undef DO_
}

void Units::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Units)
  // repeated .DataTypes.Unit items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Units)
}

::google::protobuf::uint8* Units::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Units)
  // repeated .DataTypes.Unit items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Units)
  return target;
}

int Units::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Units)
  int total_size = 0;

  // repeated .DataTypes.Unit items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Units::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Units)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Units* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Units>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Units)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Units)
    MergeFrom(*source);
  }
}

void Units::MergeFrom(const Units& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Units)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  items_.MergeFrom(from.items_);
}

void Units::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Units)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Units::CopyFrom(const Units& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Units)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Units::IsInitialized() const {

  return true;
}

void Units::Swap(Units* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Units::InternalSwap(Units* other) {
  items_.UnsafeArenaSwap(&other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Units::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Units_descriptor_;
  metadata.reflection = Units_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Units

// repeated .DataTypes.Unit items = 1;
int Units::items_size() const {
  return items_.size();
}
void Units::clear_items() {
  items_.Clear();
}
const ::DataTypes::Unit& Units::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Units.items)
  return items_.Get(index);
}
::DataTypes::Unit* Units::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Units.items)
  return items_.Mutable(index);
}
::DataTypes::Unit* Units::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.Units.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >*
Units::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Units.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >&
Units::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.Units.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnitConfiguration::kMasterIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnitConfiguration::UnitConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.UnitConfiguration)
}

void UnitConfiguration::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnitConfiguration::UnitConfiguration(const UnitConfiguration& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.UnitConfiguration)
}

void UnitConfiguration::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  master_ip_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UnitConfiguration::~UnitConfiguration() {
  // @@protoc_insertion_point(destructor:DataTypes.UnitConfiguration)
  SharedDtor();
}

void UnitConfiguration::SharedDtor() {
  master_ip_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UnitConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitConfiguration::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitConfiguration_descriptor_;
}

const UnitConfiguration& UnitConfiguration::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

UnitConfiguration* UnitConfiguration::default_instance_ = NULL;

UnitConfiguration* UnitConfiguration::New(::google::protobuf::Arena* arena) const {
  UnitConfiguration* n = new UnitConfiguration;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnitConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.UnitConfiguration)
  master_ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UnitConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.UnitConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string master_ip_address = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_master_ip_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->master_ip_address().data(), this->master_ip_address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.UnitConfiguration.master_ip_address"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.UnitConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.UnitConfiguration)
  return false;
#undef DO_
}

void UnitConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.UnitConfiguration)
  // optional string master_ip_address = 1;
  if (this->master_ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_ip_address().data(), this->master_ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.UnitConfiguration.master_ip_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->master_ip_address(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.UnitConfiguration)
}

::google::protobuf::uint8* UnitConfiguration::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.UnitConfiguration)
  // optional string master_ip_address = 1;
  if (this->master_ip_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->master_ip_address().data(), this->master_ip_address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.UnitConfiguration.master_ip_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->master_ip_address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.UnitConfiguration)
  return target;
}

int UnitConfiguration::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.UnitConfiguration)
  int total_size = 0;

  // optional string master_ip_address = 1;
  if (this->master_ip_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->master_ip_address());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.UnitConfiguration)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnitConfiguration* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnitConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.UnitConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.UnitConfiguration)
    MergeFrom(*source);
  }
}

void UnitConfiguration::MergeFrom(const UnitConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.UnitConfiguration)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.master_ip_address().size() > 0) {

    master_ip_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.master_ip_address_);
  }
}

void UnitConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.UnitConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitConfiguration::CopyFrom(const UnitConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.UnitConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitConfiguration::IsInitialized() const {

  return true;
}

void UnitConfiguration::Swap(UnitConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnitConfiguration::InternalSwap(UnitConfiguration* other) {
  master_ip_address_.Swap(&other->master_ip_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnitConfiguration::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitConfiguration_descriptor_;
  metadata.reflection = UnitConfiguration_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnitConfiguration

// optional string master_ip_address = 1;
void UnitConfiguration::clear_master_ip_address() {
  master_ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UnitConfiguration::master_ip_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitConfiguration.master_ip_address)
  return master_ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UnitConfiguration::set_master_ip_address(const ::std::string& value) {
  
  master_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.UnitConfiguration.master_ip_address)
}
 void UnitConfiguration::set_master_ip_address(const char* value) {
  
  master_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.UnitConfiguration.master_ip_address)
}
 void UnitConfiguration::set_master_ip_address(const char* value, size_t size) {
  
  master_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.UnitConfiguration.master_ip_address)
}
 ::std::string* UnitConfiguration::mutable_master_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitConfiguration.master_ip_address)
  return master_ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UnitConfiguration::release_master_ip_address() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitConfiguration.master_ip_address)
  
  return master_ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UnitConfiguration::set_allocated_master_ip_address(::std::string* master_ip_address) {
  if (master_ip_address != NULL) {
    
  } else {
    
  }
  master_ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_ip_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitConfiguration.master_ip_address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnitLocationState::kLocationIdFieldNumber;
const int UnitLocationState::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnitLocationState::UnitLocationState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.UnitLocationState)
}

void UnitLocationState::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UnitLocationState::UnitLocationState(const UnitLocationState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.UnitLocationState)
}

void UnitLocationState::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  location_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

UnitLocationState::~UnitLocationState() {
  // @@protoc_insertion_point(destructor:DataTypes.UnitLocationState)
  SharedDtor();
}

void UnitLocationState::SharedDtor() {
  location_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UnitLocationState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnitLocationState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnitLocationState_descriptor_;
}

const UnitLocationState& UnitLocationState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2funit_2eproto();
  return *default_instance_;
}

UnitLocationState* UnitLocationState::default_instance_ = NULL;

UnitLocationState* UnitLocationState::New(::google::protobuf::Arena* arena) const {
  UnitLocationState* n = new UnitLocationState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnitLocationState::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.UnitLocationState)
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = 0;
}

bool UnitLocationState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.UnitLocationState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string location_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location_id().data(), this->location_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.UnitLocationState.location_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // optional .DataTypes.LocationState state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::DataTypes::LocationState >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.UnitLocationState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.UnitLocationState)
  return false;
#undef DO_
}

void UnitLocationState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.UnitLocationState)
  // optional string location_id = 1;
  if (this->location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_id().data(), this->location_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.UnitLocationState.location_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->location_id(), output);
  }

  // optional .DataTypes.LocationState state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.UnitLocationState)
}

::google::protobuf::uint8* UnitLocationState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.UnitLocationState)
  // optional string location_id = 1;
  if (this->location_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location_id().data(), this->location_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.UnitLocationState.location_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->location_id(), target);
  }

  // optional .DataTypes.LocationState state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.UnitLocationState)
  return target;
}

int UnitLocationState::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.UnitLocationState)
  int total_size = 0;

  // optional string location_id = 1;
  if (this->location_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location_id());
  }

  // optional .DataTypes.LocationState state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnitLocationState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.UnitLocationState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnitLocationState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnitLocationState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.UnitLocationState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.UnitLocationState)
    MergeFrom(*source);
  }
}

void UnitLocationState::MergeFrom(const UnitLocationState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.UnitLocationState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.location_id().size() > 0) {

    location_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_id_);
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void UnitLocationState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.UnitLocationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnitLocationState::CopyFrom(const UnitLocationState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.UnitLocationState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnitLocationState::IsInitialized() const {

  return true;
}

void UnitLocationState::Swap(UnitLocationState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnitLocationState::InternalSwap(UnitLocationState* other) {
  location_id_.Swap(&other->location_id_);
  std::swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnitLocationState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnitLocationState_descriptor_;
  metadata.reflection = UnitLocationState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnitLocationState

// optional string location_id = 1;
void UnitLocationState::clear_location_id() {
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& UnitLocationState::location_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitLocationState.location_id)
  return location_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UnitLocationState::set_location_id(const ::std::string& value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.UnitLocationState.location_id)
}
 void UnitLocationState::set_location_id(const char* value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.UnitLocationState.location_id)
}
 void UnitLocationState::set_location_id(const char* value, size_t size) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.UnitLocationState.location_id)
}
 ::std::string* UnitLocationState::mutable_location_id() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitLocationState.location_id)
  return location_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UnitLocationState::release_location_id() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitLocationState.location_id)
  
  return location_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UnitLocationState::set_allocated_location_id(::std::string* location_id) {
  if (location_id != NULL) {
    
  } else {
    
  }
  location_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_id);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitLocationState.location_id)
}

// optional .DataTypes.LocationState state = 2;
void UnitLocationState::clear_state() {
  state_ = 0;
}
 ::DataTypes::LocationState UnitLocationState::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitLocationState.state)
  return static_cast< ::DataTypes::LocationState >(state_);
}
 void UnitLocationState::set_state(::DataTypes::LocationState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.UnitLocationState.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
