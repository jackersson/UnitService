// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/datetime.proto

#ifndef PROTOBUF_datatypes_2fdatetime_2eproto__INCLUDED
#define PROTOBUF_datatypes_2fdatetime_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_datatypes_2fdatetime_2eproto();
void protobuf_AssignDesc_datatypes_2fdatetime_2eproto();
void protobuf_ShutdownFile_datatypes_2fdatetime_2eproto();

class DateTime;

// ===================================================================

class DateTime : public ::google::protobuf::Message {
 public:
  DateTime();
  virtual ~DateTime();

  DateTime(const DateTime& from);

  inline DateTime& operator=(const DateTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DateTime& default_instance();

  void Swap(DateTime* other);

  // implements Message ----------------------------------------------

  inline DateTime* New() const { return New(NULL); }

  DateTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DateTime& from);
  void MergeFrom(const DateTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DateTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 year = 1;
  void clear_year();
  static const int kYearFieldNumber = 1;
  ::google::protobuf::int32 year() const;
  void set_year(::google::protobuf::int32 value);

  // optional int32 month = 2;
  void clear_month();
  static const int kMonthFieldNumber = 2;
  ::google::protobuf::int32 month() const;
  void set_month(::google::protobuf::int32 value);

  // optional int32 day = 3;
  void clear_day();
  static const int kDayFieldNumber = 3;
  ::google::protobuf::int32 day() const;
  void set_day(::google::protobuf::int32 value);

  // optional int32 hours = 4;
  void clear_hours();
  static const int kHoursFieldNumber = 4;
  ::google::protobuf::int32 hours() const;
  void set_hours(::google::protobuf::int32 value);

  // optional int32 minutes = 5;
  void clear_minutes();
  static const int kMinutesFieldNumber = 5;
  ::google::protobuf::int32 minutes() const;
  void set_minutes(::google::protobuf::int32 value);

  // optional int32 seconds = 6;
  void clear_seconds();
  static const int kSecondsFieldNumber = 6;
  ::google::protobuf::int32 seconds() const;
  void set_seconds(::google::protobuf::int32 value);

  // optional int32 miliseconds = 7;
  void clear_miliseconds();
  static const int kMilisecondsFieldNumber = 7;
  ::google::protobuf::int32 miliseconds() const;
  void set_miliseconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DataTypes.DateTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 year_;
  ::google::protobuf::int32 month_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 hours_;
  ::google::protobuf::int32 minutes_;
  ::google::protobuf::int32 seconds_;
  ::google::protobuf::int32 miliseconds_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2fdatetime_2eproto();
  friend void protobuf_AssignDesc_datatypes_2fdatetime_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2fdatetime_2eproto();

  void InitAsDefaultInstance();
  static DateTime* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DateTime

// optional int32 year = 1;
inline void DateTime::clear_year() {
  year_ = 0;
}
inline ::google::protobuf::int32 DateTime::year() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.year)
  return year_;
}
inline void DateTime::set_year(::google::protobuf::int32 value) {
  
  year_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.year)
}

// optional int32 month = 2;
inline void DateTime::clear_month() {
  month_ = 0;
}
inline ::google::protobuf::int32 DateTime::month() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.month)
  return month_;
}
inline void DateTime::set_month(::google::protobuf::int32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.month)
}

// optional int32 day = 3;
inline void DateTime::clear_day() {
  day_ = 0;
}
inline ::google::protobuf::int32 DateTime::day() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.day)
  return day_;
}
inline void DateTime::set_day(::google::protobuf::int32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.day)
}

// optional int32 hours = 4;
inline void DateTime::clear_hours() {
  hours_ = 0;
}
inline ::google::protobuf::int32 DateTime::hours() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.hours)
  return hours_;
}
inline void DateTime::set_hours(::google::protobuf::int32 value) {
  
  hours_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.hours)
}

// optional int32 minutes = 5;
inline void DateTime::clear_minutes() {
  minutes_ = 0;
}
inline ::google::protobuf::int32 DateTime::minutes() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.minutes)
  return minutes_;
}
inline void DateTime::set_minutes(::google::protobuf::int32 value) {
  
  minutes_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.minutes)
}

// optional int32 seconds = 6;
inline void DateTime::clear_seconds() {
  seconds_ = 0;
}
inline ::google::protobuf::int32 DateTime::seconds() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.seconds)
  return seconds_;
}
inline void DateTime::set_seconds(::google::protobuf::int32 value) {
  
  seconds_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.seconds)
}

// optional int32 miliseconds = 7;
inline void DateTime::clear_miliseconds() {
  miliseconds_ = 0;
}
inline ::google::protobuf::int32 DateTime::miliseconds() const {
  // @@protoc_insertion_point(field_get:DataTypes.DateTime.miliseconds)
  return miliseconds_;
}
inline void DateTime::set_miliseconds(::google::protobuf::int32 value) {
  
  miliseconds_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.DateTime.miliseconds)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datatypes_2fdatetime_2eproto__INCLUDED
