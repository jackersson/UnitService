// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* MessageBytes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageBytes_reflection_ = NULL;
const ::google::protobuf::Descriptor* MutationResult_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MutationResult_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mutation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mutation_reflection_ = NULL;
struct MutationOneofInstance {
  const ::DataTypes::Entity* insert_;
  const ::DataTypes::Entity* update_;
  const ::DataTypes::Entity* delete__;
}* Mutation_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* DataType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2fdata_2eproto() {
  protobuf_AddDesc_datatypes_2fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/data.proto");
  GOOGLE_CHECK(file != NULL);
  MessageBytes_descriptor_ = file->message_type(0);
  static const int MessageBytes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBytes, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBytes, type_),
  };
  MessageBytes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageBytes_descriptor_,
      MessageBytes::default_instance_,
      MessageBytes_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageBytes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBytes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBytes, _is_default_instance_));
  MutationResult_descriptor_ = file->message_type(1);
  static const int MutationResult_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutationResult, entity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutationResult, error_),
  };
  MutationResult_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MutationResult_descriptor_,
      MutationResult::default_instance_,
      MutationResult_offsets_,
      -1,
      -1,
      -1,
      sizeof(MutationResult),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutationResult, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MutationResult, _is_default_instance_));
  Mutation_descriptor_ = file->message_type(2);
  static const int Mutation_offsets_[4] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Mutation_default_oneof_instance_, insert_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Mutation_default_oneof_instance_, update_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Mutation_default_oneof_instance_, delete__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, operation_),
  };
  Mutation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Mutation_descriptor_,
      Mutation::default_instance_,
      Mutation_offsets_,
      -1,
      -1,
      -1,
      Mutation_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, _oneof_case_[0]),
      sizeof(Mutation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mutation, _is_default_instance_));
  DataType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageBytes_descriptor_, &MessageBytes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MutationResult_descriptor_, &MutationResult::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Mutation_descriptor_, &Mutation::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2fdata_2eproto() {
  delete MessageBytes::default_instance_;
  delete MessageBytes_reflection_;
  delete MutationResult::default_instance_;
  delete MutationResult_reflection_;
  delete Mutation::default_instance_;
  delete Mutation_default_oneof_instance_;
  delete Mutation_reflection_;
}

void protobuf_AddDesc_datatypes_2fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fentity_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024datatypes/data.proto\022\tDataTypes\032\026datat"
    "ypes/entity.proto\"\?\n\014MessageBytes\022\014\n\004dat"
    "a\030\001 \001(\014\022!\n\004type\030\002 \001(\0162\023.DataTypes.DataTy"
    "pe\"B\n\016MutationResult\022!\n\006entity\030\001 \001(\0132\021.D"
    "ataTypes.Entity\022\r\n\005error\030\002 \001(\t\"\206\001\n\010Mutat"
    "ion\022#\n\006insert\030\001 \001(\0132\021.DataTypes.EntityH\000"
    "\022#\n\006update\030\002 \001(\0132\021.DataTypes.EntityH\000\022#\n"
    "\006delete\030\003 \001(\0132\021.DataTypes.EntityH\000B\013\n\top"
    "eration*p\n\010DataType\022\014\n\010NoneType\020\000\022\022\n\016Get"
    "RequestType\020\001\022\023\n\017GetResponseType\020\002\022\025\n\021Co"
    "mmitRequestType\020\003\022\026\n\022CommitResponseType\020"
    "\004BI\n\007ex.grpcZ8github.com/Enebra/ServiceC"
    "oordinator/grpc/datatypes/data\242\002\003RTGb\006pr"
    "oto3", 524);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/data.proto", &protobuf_RegisterTypes);
  MessageBytes::default_instance_ = new MessageBytes();
  MutationResult::default_instance_ = new MutationResult();
  Mutation::default_instance_ = new Mutation();
  Mutation_default_oneof_instance_ = new MutationOneofInstance();
  MessageBytes::default_instance_->InitAsDefaultInstance();
  MutationResult::default_instance_->InitAsDefaultInstance();
  Mutation::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2fdata_2eproto {
  StaticDescriptorInitializer_datatypes_2fdata_2eproto() {
    protobuf_AddDesc_datatypes_2fdata_2eproto();
  }
} static_descriptor_initializer_datatypes_2fdata_2eproto_;
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataType_descriptor_;
}
bool DataType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageBytes::kDataFieldNumber;
const int MessageBytes::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageBytes::MessageBytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.MessageBytes)
}

void MessageBytes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MessageBytes::MessageBytes(const MessageBytes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.MessageBytes)
}

void MessageBytes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

MessageBytes::~MessageBytes() {
  // @@protoc_insertion_point(destructor:DataTypes.MessageBytes)
  SharedDtor();
}

void MessageBytes::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MessageBytes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageBytes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageBytes_descriptor_;
}

const MessageBytes& MessageBytes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fdata_2eproto();
  return *default_instance_;
}

MessageBytes* MessageBytes::default_instance_ = NULL;

MessageBytes* MessageBytes::New(::google::protobuf::Arena* arena) const {
  MessageBytes* n = new MessageBytes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.MessageBytes)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool MessageBytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.MessageBytes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .DataTypes.DataType type = 2;
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::DataTypes::DataType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.MessageBytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.MessageBytes)
  return false;
#undef DO_
}

void MessageBytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.MessageBytes)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // optional .DataTypes.DataType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.MessageBytes)
}

::google::protobuf::uint8* MessageBytes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.MessageBytes)
  // optional bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // optional .DataTypes.DataType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.MessageBytes)
  return target;
}

int MessageBytes::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.MessageBytes)
  int total_size = 0;

  // optional bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // optional .DataTypes.DataType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageBytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.MessageBytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageBytes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageBytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.MessageBytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.MessageBytes)
    MergeFrom(*source);
  }
}

void MessageBytes::MergeFrom(const MessageBytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.MessageBytes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MessageBytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.MessageBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBytes::CopyFrom(const MessageBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.MessageBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBytes::IsInitialized() const {

  return true;
}

void MessageBytes::Swap(MessageBytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageBytes::InternalSwap(MessageBytes* other) {
  data_.Swap(&other->data_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageBytes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageBytes_descriptor_;
  metadata.reflection = MessageBytes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageBytes

// optional bytes data = 1;
void MessageBytes::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MessageBytes::data() const {
  // @@protoc_insertion_point(field_get:DataTypes.MessageBytes.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageBytes::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.MessageBytes.data)
}
 void MessageBytes::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.MessageBytes.data)
}
 void MessageBytes::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.MessageBytes.data)
}
 ::std::string* MessageBytes::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.MessageBytes.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MessageBytes::release_data() {
  // @@protoc_insertion_point(field_release:DataTypes.MessageBytes.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MessageBytes::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.MessageBytes.data)
}

// optional .DataTypes.DataType type = 2;
void MessageBytes::clear_type() {
  type_ = 0;
}
 ::DataTypes::DataType MessageBytes::type() const {
  // @@protoc_insertion_point(field_get:DataTypes.MessageBytes.type)
  return static_cast< ::DataTypes::DataType >(type_);
}
 void MessageBytes::set_type(::DataTypes::DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.MessageBytes.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutationResult::kEntityFieldNumber;
const int MutationResult::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutationResult::MutationResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.MutationResult)
}

void MutationResult::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  entity_ = const_cast< ::DataTypes::Entity*>(&::DataTypes::Entity::default_instance());
}

MutationResult::MutationResult(const MutationResult& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.MutationResult)
}

void MutationResult::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  entity_ = NULL;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MutationResult::~MutationResult() {
  // @@protoc_insertion_point(destructor:DataTypes.MutationResult)
  SharedDtor();
}

void MutationResult::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete entity_;
  }
}

void MutationResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutationResult::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MutationResult_descriptor_;
}

const MutationResult& MutationResult::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fdata_2eproto();
  return *default_instance_;
}

MutationResult* MutationResult::default_instance_ = NULL;

MutationResult* MutationResult::New(::google::protobuf::Arena* arena) const {
  MutationResult* n = new MutationResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutationResult::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.MutationResult)
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MutationResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.MutationResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Entity entity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional string error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.MutationResult.error"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.MutationResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.MutationResult)
  return false;
#undef DO_
}

void MutationResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.MutationResult)
  // optional .DataTypes.Entity entity = 1;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entity_, output);
  }

  // optional string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.MutationResult.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.MutationResult)
}

::google::protobuf::uint8* MutationResult::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.MutationResult)
  // optional .DataTypes.Entity entity = 1;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->entity_, target);
  }

  // optional string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.MutationResult.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.MutationResult)
  return target;
}

int MutationResult::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.MutationResult)
  int total_size = 0;

  // optional .DataTypes.Entity entity = 1;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // optional string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutationResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.MutationResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MutationResult* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MutationResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.MutationResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.MutationResult)
    MergeFrom(*source);
  }
}

void MutationResult::MergeFrom(const MutationResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.MutationResult)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_entity()) {
    mutable_entity()->::DataTypes::Entity::MergeFrom(from.entity());
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void MutationResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.MutationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutationResult::CopyFrom(const MutationResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.MutationResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutationResult::IsInitialized() const {

  return true;
}

void MutationResult::Swap(MutationResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutationResult::InternalSwap(MutationResult* other) {
  std::swap(entity_, other->entity_);
  error_.Swap(&other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutationResult::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MutationResult_descriptor_;
  metadata.reflection = MutationResult_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MutationResult

// optional .DataTypes.Entity entity = 1;
bool MutationResult::has_entity() const {
  return !_is_default_instance_ && entity_ != NULL;
}
void MutationResult::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::DataTypes::Entity& MutationResult::entity() const {
  // @@protoc_insertion_point(field_get:DataTypes.MutationResult.entity)
  return entity_ != NULL ? *entity_ : *default_instance_->entity_;
}
::DataTypes::Entity* MutationResult::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::DataTypes::Entity;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.MutationResult.entity)
  return entity_;
}
::DataTypes::Entity* MutationResult::release_entity() {
  // @@protoc_insertion_point(field_release:DataTypes.MutationResult.entity)
  
  ::DataTypes::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
void MutationResult::set_allocated_entity(::DataTypes::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.MutationResult.entity)
}

// optional string error = 2;
void MutationResult::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MutationResult::error() const {
  // @@protoc_insertion_point(field_get:DataTypes.MutationResult.error)
  return error_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MutationResult::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.MutationResult.error)
}
 void MutationResult::set_error(const char* value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.MutationResult.error)
}
 void MutationResult::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.MutationResult.error)
}
 ::std::string* MutationResult::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.MutationResult.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MutationResult::release_error() {
  // @@protoc_insertion_point(field_release:DataTypes.MutationResult.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MutationResult::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.MutationResult.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kInsertFieldNumber;
const int Mutation::kUpdateFieldNumber;
const int Mutation::kDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Mutation)
}

void Mutation::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  Mutation_default_oneof_instance_->insert_ = const_cast< ::DataTypes::Entity*>(&::DataTypes::Entity::default_instance());
  Mutation_default_oneof_instance_->update_ = const_cast< ::DataTypes::Entity*>(&::DataTypes::Entity::default_instance());
  Mutation_default_oneof_instance_->delete__ = const_cast< ::DataTypes::Entity*>(&::DataTypes::Entity::default_instance());
}

Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Mutation)
}

void Mutation::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  clear_has_operation();
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:DataTypes.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  if (has_operation()) {
    clear_operation();
  }
  if (this != default_instance_) {
  }
}

void Mutation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mutation_descriptor_;
}

const Mutation& Mutation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fdata_2eproto();
  return *default_instance_;
}

Mutation* Mutation::default_instance_ = NULL;

Mutation* Mutation::New(::google::protobuf::Arena* arena) const {
  Mutation* n = new Mutation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Mutation::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:DataTypes.Mutation)
  switch(operation_case()) {
    case kInsert: {
      delete operation_.insert_;
      break;
    }
    case kUpdate: {
      delete operation_.update_;
      break;
    }
    case kDelete: {
      delete operation_.delete__;
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Mutation)
  clear_operation();
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Mutation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Entity insert = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_insert()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_update;
        break;
      }

      // optional .DataTypes.Entity update = 2;
      case 2: {
        if (tag == 18) {
         parse_update:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_delete;
        break;
      }

      // optional .DataTypes.Entity delete = 3;
      case 3: {
        if (tag == 26) {
         parse_delete:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Mutation)
  // optional .DataTypes.Entity insert = 1;
  if (has_insert()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *operation_.insert_, output);
  }

  // optional .DataTypes.Entity update = 2;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *operation_.update_, output);
  }

  // optional .DataTypes.Entity delete = 3;
  if (has_delete_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *operation_.delete__, output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Mutation)
}

::google::protobuf::uint8* Mutation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Mutation)
  // optional .DataTypes.Entity insert = 1;
  if (has_insert()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *operation_.insert_, target);
  }

  // optional .DataTypes.Entity update = 2;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *operation_.update_, target);
  }

  // optional .DataTypes.Entity delete = 3;
  if (has_delete_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *operation_.delete__, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Mutation)
  return target;
}

int Mutation::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Mutation)
  int total_size = 0;

  switch (operation_case()) {
    // optional .DataTypes.Entity insert = 1;
    case kInsert: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *operation_.insert_);
      break;
    }
    // optional .DataTypes.Entity update = 2;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *operation_.update_);
      break;
    }
    // optional .DataTypes.Entity delete = 3;
    case kDelete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *operation_.delete__);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Mutation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Mutation* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Mutation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.operation_case()) {
    case kInsert: {
      mutable_insert()->::DataTypes::Entity::MergeFrom(from.insert());
      break;
    }
    case kUpdate: {
      mutable_update()->::DataTypes::Entity::MergeFrom(from.update());
      break;
    }
    case kDelete: {
      mutable_delete_()->::DataTypes::Entity::MergeFrom(from.delete_());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {

  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  std::swap(operation_, other->operation_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mutation_descriptor_;
  metadata.reflection = Mutation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Mutation

// optional .DataTypes.Entity insert = 1;
bool Mutation::has_insert() const {
  return operation_case() == kInsert;
}
void Mutation::set_has_insert() {
  _oneof_case_[0] = kInsert;
}
void Mutation::clear_insert() {
  if (has_insert()) {
    delete operation_.insert_;
    clear_has_operation();
  }
}
 const ::DataTypes::Entity& Mutation::insert() const {
  // @@protoc_insertion_point(field_get:DataTypes.Mutation.insert)
  return has_insert()
      ? *operation_.insert_
      : ::DataTypes::Entity::default_instance();
}
::DataTypes::Entity* Mutation::mutable_insert() {
  if (!has_insert()) {
    clear_operation();
    set_has_insert();
    operation_.insert_ = new ::DataTypes::Entity;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Mutation.insert)
  return operation_.insert_;
}
::DataTypes::Entity* Mutation::release_insert() {
  // @@protoc_insertion_point(field_release:DataTypes.Mutation.insert)
  if (has_insert()) {
    clear_has_operation();
    ::DataTypes::Entity* temp = operation_.insert_;
    operation_.insert_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Mutation::set_allocated_insert(::DataTypes::Entity* insert) {
  clear_operation();
  if (insert) {
    set_has_insert();
    operation_.insert_ = insert;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Mutation.insert)
}

// optional .DataTypes.Entity update = 2;
bool Mutation::has_update() const {
  return operation_case() == kUpdate;
}
void Mutation::set_has_update() {
  _oneof_case_[0] = kUpdate;
}
void Mutation::clear_update() {
  if (has_update()) {
    delete operation_.update_;
    clear_has_operation();
  }
}
 const ::DataTypes::Entity& Mutation::update() const {
  // @@protoc_insertion_point(field_get:DataTypes.Mutation.update)
  return has_update()
      ? *operation_.update_
      : ::DataTypes::Entity::default_instance();
}
::DataTypes::Entity* Mutation::mutable_update() {
  if (!has_update()) {
    clear_operation();
    set_has_update();
    operation_.update_ = new ::DataTypes::Entity;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Mutation.update)
  return operation_.update_;
}
::DataTypes::Entity* Mutation::release_update() {
  // @@protoc_insertion_point(field_release:DataTypes.Mutation.update)
  if (has_update()) {
    clear_has_operation();
    ::DataTypes::Entity* temp = operation_.update_;
    operation_.update_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Mutation::set_allocated_update(::DataTypes::Entity* update) {
  clear_operation();
  if (update) {
    set_has_update();
    operation_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Mutation.update)
}

// optional .DataTypes.Entity delete = 3;
bool Mutation::has_delete_() const {
  return operation_case() == kDelete;
}
void Mutation::set_has_delete_() {
  _oneof_case_[0] = kDelete;
}
void Mutation::clear_delete_() {
  if (has_delete_()) {
    delete operation_.delete__;
    clear_has_operation();
  }
}
 const ::DataTypes::Entity& Mutation::delete_() const {
  // @@protoc_insertion_point(field_get:DataTypes.Mutation.delete)
  return has_delete_()
      ? *operation_.delete__
      : ::DataTypes::Entity::default_instance();
}
::DataTypes::Entity* Mutation::mutable_delete_() {
  if (!has_delete_()) {
    clear_operation();
    set_has_delete_();
    operation_.delete__ = new ::DataTypes::Entity;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Mutation.delete)
  return operation_.delete__;
}
::DataTypes::Entity* Mutation::release_delete_() {
  // @@protoc_insertion_point(field_release:DataTypes.Mutation.delete)
  if (has_delete_()) {
    clear_has_operation();
    ::DataTypes::Entity* temp = operation_.delete__;
    operation_.delete__ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Mutation::set_allocated_delete_(::DataTypes::Entity* delete_) {
  clear_operation();
  if (delete_) {
    set_has_delete_();
    operation_.delete__ = delete_;
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Mutation.delete)
}

bool Mutation::has_operation() const {
  return operation_case() != OPERATION_NOT_SET;
}
void Mutation::clear_has_operation() {
  _oneof_case_[0] = OPERATION_NOT_SET;
}
Mutation::OperationCase Mutation::operation_case() const {
  return Mutation::OperationCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
