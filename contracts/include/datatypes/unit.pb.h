// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/unit.proto

#ifndef PROTOBUF_datatypes_2funit_2eproto__INCLUDED
#define PROTOBUF_datatypes_2funit_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "datatypes/location.pb.h"
// @@protoc_insertion_point(includes)

namespace DataTypes {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_datatypes_2funit_2eproto();
void protobuf_AssignDesc_datatypes_2funit_2eproto();
void protobuf_ShutdownFile_datatypes_2funit_2eproto();

class ConnectedUnit;
class SubscriptionMsg;
class Unit;
class UnitConfiguration;
class UnitLocationState;
class Units;
class UpdatedUnit;
class UpdatedUnits;

enum UnitState {
  None_ = 0,
  Inserted = 1,
  Deleted = 2,
  Updated = 3,
  UnitState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnitState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnitState_IsValid(int value);
const UnitState UnitState_MIN = None_;
const UnitState UnitState_MAX = Updated;
const int UnitState_ARRAYSIZE = UnitState_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnitState_descriptor();
inline const ::std::string& UnitState_Name(UnitState value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnitState_descriptor(), value);
}
inline bool UnitState_Parse(
    const ::std::string& name, UnitState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnitState>(
    UnitState_descriptor(), name, value);
}
// ===================================================================

class Unit : public ::google::protobuf::Message {
 public:
  Unit();
  virtual ~Unit();

  Unit(const Unit& from);

  inline Unit& operator=(const Unit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Unit& default_instance();

  void Swap(Unit* other);

  // implements Message ----------------------------------------------

  inline Unit* New() const { return New(NULL); }

  Unit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Unit& from);
  void MergeFrom(const Unit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Unit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataTypes.ConnectedUnit connected_unit = 1;
  bool has_connected_unit() const;
  void clear_connected_unit();
  static const int kConnectedUnitFieldNumber = 1;
  const ::DataTypes::ConnectedUnit& connected_unit() const;
  ::DataTypes::ConnectedUnit* mutable_connected_unit();
  ::DataTypes::ConnectedUnit* release_connected_unit();
  void set_allocated_connected_unit(::DataTypes::ConnectedUnit* connected_unit);

  // optional int64 heartbeat_time = 2;
  void clear_heartbeat_time();
  static const int kHeartbeatTimeFieldNumber = 2;
  ::google::protobuf::int64 heartbeat_time() const;
  void set_heartbeat_time(::google::protobuf::int64 value);

  // optional .DataTypes.Locations locations = 3;
  bool has_locations() const;
  void clear_locations();
  static const int kLocationsFieldNumber = 3;
  const ::DataTypes::Locations& locations() const;
  ::DataTypes::Locations* mutable_locations();
  ::DataTypes::Locations* release_locations();
  void set_allocated_locations(::DataTypes::Locations* locations);

  // @@protoc_insertion_point(class_scope:DataTypes.Unit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::DataTypes::ConnectedUnit* connected_unit_;
  ::google::protobuf::int64 heartbeat_time_;
  ::DataTypes::Locations* locations_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static Unit* default_instance_;
};
// -------------------------------------------------------------------

class ConnectedUnit : public ::google::protobuf::Message {
 public:
  ConnectedUnit();
  virtual ~ConnectedUnit();

  ConnectedUnit(const ConnectedUnit& from);

  inline ConnectedUnit& operator=(const ConnectedUnit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectedUnit& default_instance();

  void Swap(ConnectedUnit* other);

  // implements Message ----------------------------------------------

  inline ConnectedUnit* New() const { return New(NULL); }

  ConnectedUnit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConnectedUnit& from);
  void MergeFrom(const ConnectedUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConnectedUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip_address = 1;
  void clear_ip_address();
  static const int kIpAddressFieldNumber = 1;
  const ::std::string& ip_address() const;
  void set_ip_address(const ::std::string& value);
  void set_ip_address(const char* value);
  void set_ip_address(const char* value, size_t size);
  ::std::string* mutable_ip_address();
  ::std::string* release_ip_address();
  void set_allocated_ip_address(::std::string* ip_address);

  // optional string mac_address = 2;
  void clear_mac_address();
  static const int kMacAddressFieldNumber = 2;
  const ::std::string& mac_address() const;
  void set_mac_address(const ::std::string& value);
  void set_mac_address(const char* value);
  void set_mac_address(const char* value, size_t size);
  ::std::string* mutable_mac_address();
  ::std::string* release_mac_address();
  void set_allocated_mac_address(::std::string* mac_address);

  // @@protoc_insertion_point(class_scope:DataTypes.ConnectedUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr ip_address_;
  ::google::protobuf::internal::ArenaStringPtr mac_address_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static ConnectedUnit* default_instance_;
};
// -------------------------------------------------------------------

class SubscriptionMsg : public ::google::protobuf::Message {
 public:
  SubscriptionMsg();
  virtual ~SubscriptionMsg();

  SubscriptionMsg(const SubscriptionMsg& from);

  inline SubscriptionMsg& operator=(const SubscriptionMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionMsg& default_instance();

  void Swap(SubscriptionMsg* other);

  // implements Message ----------------------------------------------

  inline SubscriptionMsg* New() const { return New(NULL); }

  SubscriptionMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscriptionMsg& from);
  void MergeFrom(const SubscriptionMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubscriptionMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string publisher_id = 1;
  void clear_publisher_id();
  static const int kPublisherIdFieldNumber = 1;
  const ::std::string& publisher_id() const;
  void set_publisher_id(const ::std::string& value);
  void set_publisher_id(const char* value);
  void set_publisher_id(const char* value, size_t size);
  ::std::string* mutable_publisher_id();
  ::std::string* release_publisher_id();
  void set_allocated_publisher_id(::std::string* publisher_id);

  // optional string subscriber_id = 2;
  void clear_subscriber_id();
  static const int kSubscriberIdFieldNumber = 2;
  const ::std::string& subscriber_id() const;
  void set_subscriber_id(const ::std::string& value);
  void set_subscriber_id(const char* value);
  void set_subscriber_id(const char* value, size_t size);
  ::std::string* mutable_subscriber_id();
  ::std::string* release_subscriber_id();
  void set_allocated_subscriber_id(::std::string* subscriber_id);

  // @@protoc_insertion_point(class_scope:DataTypes.SubscriptionMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr publisher_id_;
  ::google::protobuf::internal::ArenaStringPtr subscriber_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static SubscriptionMsg* default_instance_;
};
// -------------------------------------------------------------------

class UpdatedUnit : public ::google::protobuf::Message {
 public:
  UpdatedUnit();
  virtual ~UpdatedUnit();

  UpdatedUnit(const UpdatedUnit& from);

  inline UpdatedUnit& operator=(const UpdatedUnit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatedUnit& default_instance();

  void Swap(UpdatedUnit* other);

  // implements Message ----------------------------------------------

  inline UpdatedUnit* New() const { return New(NULL); }

  UpdatedUnit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatedUnit& from);
  void MergeFrom(const UpdatedUnit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdatedUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .DataTypes.Unit current_unit = 1;
  bool has_current_unit() const;
  void clear_current_unit();
  static const int kCurrentUnitFieldNumber = 1;
  const ::DataTypes::Unit& current_unit() const;
  ::DataTypes::Unit* mutable_current_unit();
  ::DataTypes::Unit* release_current_unit();
  void set_allocated_current_unit(::DataTypes::Unit* current_unit);

  // optional .DataTypes.UnitState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::DataTypes::UnitState state() const;
  void set_state(::DataTypes::UnitState value);

  // @@protoc_insertion_point(class_scope:DataTypes.UpdatedUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::DataTypes::Unit* current_unit_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static UpdatedUnit* default_instance_;
};
// -------------------------------------------------------------------

class UpdatedUnits : public ::google::protobuf::Message {
 public:
  UpdatedUnits();
  virtual ~UpdatedUnits();

  UpdatedUnits(const UpdatedUnits& from);

  inline UpdatedUnits& operator=(const UpdatedUnits& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatedUnits& default_instance();

  void Swap(UpdatedUnits* other);

  // implements Message ----------------------------------------------

  inline UpdatedUnits* New() const { return New(NULL); }

  UpdatedUnits* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatedUnits& from);
  void MergeFrom(const UpdatedUnits& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdatedUnits* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataTypes.UpdatedUnit items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::DataTypes::UpdatedUnit& items(int index) const;
  ::DataTypes::UpdatedUnit* mutable_items(int index);
  ::DataTypes::UpdatedUnit* add_items();
  ::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit >&
      items() const;

  // @@protoc_insertion_point(class_scope:DataTypes.UpdatedUnits)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit > items_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static UpdatedUnits* default_instance_;
};
// -------------------------------------------------------------------

class Units : public ::google::protobuf::Message {
 public:
  Units();
  virtual ~Units();

  Units(const Units& from);

  inline Units& operator=(const Units& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Units& default_instance();

  void Swap(Units* other);

  // implements Message ----------------------------------------------

  inline Units* New() const { return New(NULL); }

  Units* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Units& from);
  void MergeFrom(const Units& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Units* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DataTypes.Unit items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::DataTypes::Unit& items(int index) const;
  ::DataTypes::Unit* mutable_items(int index);
  ::DataTypes::Unit* add_items();
  ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >&
      items() const;

  // @@protoc_insertion_point(class_scope:DataTypes.Units)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit > items_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static Units* default_instance_;
};
// -------------------------------------------------------------------

class UnitConfiguration : public ::google::protobuf::Message {
 public:
  UnitConfiguration();
  virtual ~UnitConfiguration();

  UnitConfiguration(const UnitConfiguration& from);

  inline UnitConfiguration& operator=(const UnitConfiguration& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitConfiguration& default_instance();

  void Swap(UnitConfiguration* other);

  // implements Message ----------------------------------------------

  inline UnitConfiguration* New() const { return New(NULL); }

  UnitConfiguration* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitConfiguration& from);
  void MergeFrom(const UnitConfiguration& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnitConfiguration* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string master_ip_address = 1;
  void clear_master_ip_address();
  static const int kMasterIpAddressFieldNumber = 1;
  const ::std::string& master_ip_address() const;
  void set_master_ip_address(const ::std::string& value);
  void set_master_ip_address(const char* value);
  void set_master_ip_address(const char* value, size_t size);
  ::std::string* mutable_master_ip_address();
  ::std::string* release_master_ip_address();
  void set_allocated_master_ip_address(::std::string* master_ip_address);

  // @@protoc_insertion_point(class_scope:DataTypes.UnitConfiguration)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr master_ip_address_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static UnitConfiguration* default_instance_;
};
// -------------------------------------------------------------------

class UnitLocationState : public ::google::protobuf::Message {
 public:
  UnitLocationState();
  virtual ~UnitLocationState();

  UnitLocationState(const UnitLocationState& from);

  inline UnitLocationState& operator=(const UnitLocationState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnitLocationState& default_instance();

  void Swap(UnitLocationState* other);

  // implements Message ----------------------------------------------

  inline UnitLocationState* New() const { return New(NULL); }

  UnitLocationState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnitLocationState& from);
  void MergeFrom(const UnitLocationState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnitLocationState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string location_id = 1;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  const ::std::string& location_id() const;
  void set_location_id(const ::std::string& value);
  void set_location_id(const char* value);
  void set_location_id(const char* value, size_t size);
  ::std::string* mutable_location_id();
  ::std::string* release_location_id();
  void set_allocated_location_id(::std::string* location_id);

  // optional .DataTypes.LocationState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::DataTypes::LocationState state() const;
  void set_state(::DataTypes::LocationState value);

  // @@protoc_insertion_point(class_scope:DataTypes.UnitLocationState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr location_id_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_datatypes_2funit_2eproto();
  friend void protobuf_AssignDesc_datatypes_2funit_2eproto();
  friend void protobuf_ShutdownFile_datatypes_2funit_2eproto();

  void InitAsDefaultInstance();
  static UnitLocationState* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Unit

// optional .DataTypes.ConnectedUnit connected_unit = 1;
inline bool Unit::has_connected_unit() const {
  return !_is_default_instance_ && connected_unit_ != NULL;
}
inline void Unit::clear_connected_unit() {
  if (GetArenaNoVirtual() == NULL && connected_unit_ != NULL) delete connected_unit_;
  connected_unit_ = NULL;
}
inline const ::DataTypes::ConnectedUnit& Unit::connected_unit() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.connected_unit)
  return connected_unit_ != NULL ? *connected_unit_ : *default_instance_->connected_unit_;
}
inline ::DataTypes::ConnectedUnit* Unit::mutable_connected_unit() {
  
  if (connected_unit_ == NULL) {
    connected_unit_ = new ::DataTypes::ConnectedUnit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.connected_unit)
  return connected_unit_;
}
inline ::DataTypes::ConnectedUnit* Unit::release_connected_unit() {
  // @@protoc_insertion_point(field_release:DataTypes.Unit.connected_unit)
  
  ::DataTypes::ConnectedUnit* temp = connected_unit_;
  connected_unit_ = NULL;
  return temp;
}
inline void Unit::set_allocated_connected_unit(::DataTypes::ConnectedUnit* connected_unit) {
  delete connected_unit_;
  connected_unit_ = connected_unit;
  if (connected_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Unit.connected_unit)
}

// optional int64 heartbeat_time = 2;
inline void Unit::clear_heartbeat_time() {
  heartbeat_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Unit::heartbeat_time() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.heartbeat_time)
  return heartbeat_time_;
}
inline void Unit::set_heartbeat_time(::google::protobuf::int64 value) {
  
  heartbeat_time_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.Unit.heartbeat_time)
}

// optional .DataTypes.Locations locations = 3;
inline bool Unit::has_locations() const {
  return !_is_default_instance_ && locations_ != NULL;
}
inline void Unit::clear_locations() {
  if (GetArenaNoVirtual() == NULL && locations_ != NULL) delete locations_;
  locations_ = NULL;
}
inline const ::DataTypes::Locations& Unit::locations() const {
  // @@protoc_insertion_point(field_get:DataTypes.Unit.locations)
  return locations_ != NULL ? *locations_ : *default_instance_->locations_;
}
inline ::DataTypes::Locations* Unit::mutable_locations() {
  
  if (locations_ == NULL) {
    locations_ = new ::DataTypes::Locations;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Unit.locations)
  return locations_;
}
inline ::DataTypes::Locations* Unit::release_locations() {
  // @@protoc_insertion_point(field_release:DataTypes.Unit.locations)
  
  ::DataTypes::Locations* temp = locations_;
  locations_ = NULL;
  return temp;
}
inline void Unit::set_allocated_locations(::DataTypes::Locations* locations) {
  delete locations_;
  locations_ = locations;
  if (locations) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Unit.locations)
}

// -------------------------------------------------------------------

// ConnectedUnit

// optional string ip_address = 1;
inline void ConnectedUnit::clear_ip_address() {
  ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectedUnit::ip_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectedUnit.ip_address)
  return ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectedUnit::set_ip_address(const ::std::string& value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.ConnectedUnit.ip_address)
}
inline void ConnectedUnit::set_ip_address(const char* value) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.ConnectedUnit.ip_address)
}
inline void ConnectedUnit::set_ip_address(const char* value, size_t size) {
  
  ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.ConnectedUnit.ip_address)
}
inline ::std::string* ConnectedUnit::mutable_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.ConnectedUnit.ip_address)
  return ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectedUnit::release_ip_address() {
  // @@protoc_insertion_point(field_release:DataTypes.ConnectedUnit.ip_address)
  
  return ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectedUnit::set_allocated_ip_address(::std::string* ip_address) {
  if (ip_address != NULL) {
    
  } else {
    
  }
  ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.ConnectedUnit.ip_address)
}

// optional string mac_address = 2;
inline void ConnectedUnit::clear_mac_address() {
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectedUnit::mac_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.ConnectedUnit.mac_address)
  return mac_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectedUnit::set_mac_address(const ::std::string& value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.ConnectedUnit.mac_address)
}
inline void ConnectedUnit::set_mac_address(const char* value) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.ConnectedUnit.mac_address)
}
inline void ConnectedUnit::set_mac_address(const char* value, size_t size) {
  
  mac_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.ConnectedUnit.mac_address)
}
inline ::std::string* ConnectedUnit::mutable_mac_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.ConnectedUnit.mac_address)
  return mac_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectedUnit::release_mac_address() {
  // @@protoc_insertion_point(field_release:DataTypes.ConnectedUnit.mac_address)
  
  return mac_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectedUnit::set_allocated_mac_address(::std::string* mac_address) {
  if (mac_address != NULL) {
    
  } else {
    
  }
  mac_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.ConnectedUnit.mac_address)
}

// -------------------------------------------------------------------

// SubscriptionMsg

// optional string publisher_id = 1;
inline void SubscriptionMsg::clear_publisher_id() {
  publisher_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubscriptionMsg::publisher_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.SubscriptionMsg.publisher_id)
  return publisher_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubscriptionMsg::set_publisher_id(const ::std::string& value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.SubscriptionMsg.publisher_id)
}
inline void SubscriptionMsg::set_publisher_id(const char* value) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.SubscriptionMsg.publisher_id)
}
inline void SubscriptionMsg::set_publisher_id(const char* value, size_t size) {
  
  publisher_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.SubscriptionMsg.publisher_id)
}
inline ::std::string* SubscriptionMsg::mutable_publisher_id() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.SubscriptionMsg.publisher_id)
  return publisher_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubscriptionMsg::release_publisher_id() {
  // @@protoc_insertion_point(field_release:DataTypes.SubscriptionMsg.publisher_id)
  
  return publisher_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubscriptionMsg::set_allocated_publisher_id(::std::string* publisher_id) {
  if (publisher_id != NULL) {
    
  } else {
    
  }
  publisher_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publisher_id);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.SubscriptionMsg.publisher_id)
}

// optional string subscriber_id = 2;
inline void SubscriptionMsg::clear_subscriber_id() {
  subscriber_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SubscriptionMsg::subscriber_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.SubscriptionMsg.subscriber_id)
  return subscriber_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubscriptionMsg::set_subscriber_id(const ::std::string& value) {
  
  subscriber_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.SubscriptionMsg.subscriber_id)
}
inline void SubscriptionMsg::set_subscriber_id(const char* value) {
  
  subscriber_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.SubscriptionMsg.subscriber_id)
}
inline void SubscriptionMsg::set_subscriber_id(const char* value, size_t size) {
  
  subscriber_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.SubscriptionMsg.subscriber_id)
}
inline ::std::string* SubscriptionMsg::mutable_subscriber_id() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.SubscriptionMsg.subscriber_id)
  return subscriber_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubscriptionMsg::release_subscriber_id() {
  // @@protoc_insertion_point(field_release:DataTypes.SubscriptionMsg.subscriber_id)
  
  return subscriber_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubscriptionMsg::set_allocated_subscriber_id(::std::string* subscriber_id) {
  if (subscriber_id != NULL) {
    
  } else {
    
  }
  subscriber_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscriber_id);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.SubscriptionMsg.subscriber_id)
}

// -------------------------------------------------------------------

// UpdatedUnit

// optional .DataTypes.Unit current_unit = 1;
inline bool UpdatedUnit::has_current_unit() const {
  return !_is_default_instance_ && current_unit_ != NULL;
}
inline void UpdatedUnit::clear_current_unit() {
  if (GetArenaNoVirtual() == NULL && current_unit_ != NULL) delete current_unit_;
  current_unit_ = NULL;
}
inline const ::DataTypes::Unit& UpdatedUnit::current_unit() const {
  // @@protoc_insertion_point(field_get:DataTypes.UpdatedUnit.current_unit)
  return current_unit_ != NULL ? *current_unit_ : *default_instance_->current_unit_;
}
inline ::DataTypes::Unit* UpdatedUnit::mutable_current_unit() {
  
  if (current_unit_ == NULL) {
    current_unit_ = new ::DataTypes::Unit;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.UpdatedUnit.current_unit)
  return current_unit_;
}
inline ::DataTypes::Unit* UpdatedUnit::release_current_unit() {
  // @@protoc_insertion_point(field_release:DataTypes.UpdatedUnit.current_unit)
  
  ::DataTypes::Unit* temp = current_unit_;
  current_unit_ = NULL;
  return temp;
}
inline void UpdatedUnit::set_allocated_current_unit(::DataTypes::Unit* current_unit) {
  delete current_unit_;
  current_unit_ = current_unit;
  if (current_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UpdatedUnit.current_unit)
}

// optional .DataTypes.UnitState state = 2;
inline void UpdatedUnit::clear_state() {
  state_ = 0;
}
inline ::DataTypes::UnitState UpdatedUnit::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.UpdatedUnit.state)
  return static_cast< ::DataTypes::UnitState >(state_);
}
inline void UpdatedUnit::set_state(::DataTypes::UnitState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.UpdatedUnit.state)
}

// -------------------------------------------------------------------

// UpdatedUnits

// repeated .DataTypes.UpdatedUnit items = 1;
inline int UpdatedUnits::items_size() const {
  return items_.size();
}
inline void UpdatedUnits::clear_items() {
  items_.Clear();
}
inline const ::DataTypes::UpdatedUnit& UpdatedUnits::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.UpdatedUnits.items)
  return items_.Get(index);
}
inline ::DataTypes::UpdatedUnit* UpdatedUnits::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.UpdatedUnits.items)
  return items_.Mutable(index);
}
inline ::DataTypes::UpdatedUnit* UpdatedUnits::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.UpdatedUnits.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit >*
UpdatedUnits::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.UpdatedUnits.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DataTypes::UpdatedUnit >&
UpdatedUnits::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.UpdatedUnits.items)
  return items_;
}

// -------------------------------------------------------------------

// Units

// repeated .DataTypes.Unit items = 1;
inline int Units::items_size() const {
  return items_.size();
}
inline void Units::clear_items() {
  items_.Clear();
}
inline const ::DataTypes::Unit& Units::items(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Units.items)
  return items_.Get(index);
}
inline ::DataTypes::Unit* Units::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Units.items)
  return items_.Mutable(index);
}
inline ::DataTypes::Unit* Units::add_items() {
  // @@protoc_insertion_point(field_add:DataTypes.Units.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >*
Units::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Units.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::DataTypes::Unit >&
Units::items() const {
  // @@protoc_insertion_point(field_list:DataTypes.Units.items)
  return items_;
}

// -------------------------------------------------------------------

// UnitConfiguration

// optional string master_ip_address = 1;
inline void UnitConfiguration::clear_master_ip_address() {
  master_ip_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnitConfiguration::master_ip_address() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitConfiguration.master_ip_address)
  return master_ip_address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnitConfiguration::set_master_ip_address(const ::std::string& value) {
  
  master_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.UnitConfiguration.master_ip_address)
}
inline void UnitConfiguration::set_master_ip_address(const char* value) {
  
  master_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.UnitConfiguration.master_ip_address)
}
inline void UnitConfiguration::set_master_ip_address(const char* value, size_t size) {
  
  master_ip_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.UnitConfiguration.master_ip_address)
}
inline ::std::string* UnitConfiguration::mutable_master_ip_address() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitConfiguration.master_ip_address)
  return master_ip_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnitConfiguration::release_master_ip_address() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitConfiguration.master_ip_address)
  
  return master_ip_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnitConfiguration::set_allocated_master_ip_address(::std::string* master_ip_address) {
  if (master_ip_address != NULL) {
    
  } else {
    
  }
  master_ip_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_ip_address);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitConfiguration.master_ip_address)
}

// -------------------------------------------------------------------

// UnitLocationState

// optional string location_id = 1;
inline void UnitLocationState::clear_location_id() {
  location_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnitLocationState::location_id() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitLocationState.location_id)
  return location_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnitLocationState::set_location_id(const ::std::string& value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.UnitLocationState.location_id)
}
inline void UnitLocationState::set_location_id(const char* value) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.UnitLocationState.location_id)
}
inline void UnitLocationState::set_location_id(const char* value, size_t size) {
  
  location_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.UnitLocationState.location_id)
}
inline ::std::string* UnitLocationState::mutable_location_id() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.UnitLocationState.location_id)
  return location_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnitLocationState::release_location_id() {
  // @@protoc_insertion_point(field_release:DataTypes.UnitLocationState.location_id)
  
  return location_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnitLocationState::set_allocated_location_id(::std::string* location_id) {
  if (location_id != NULL) {
    
  } else {
    
  }
  location_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location_id);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.UnitLocationState.location_id)
}

// optional .DataTypes.LocationState state = 2;
inline void UnitLocationState::clear_state() {
  state_ = 0;
}
inline ::DataTypes::LocationState UnitLocationState::state() const {
  // @@protoc_insertion_point(field_get:DataTypes.UnitLocationState.state)
  return static_cast< ::DataTypes::LocationState >(state_);
}
inline void UnitLocationState::set_state(::DataTypes::LocationState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:DataTypes.UnitLocationState.state)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::DataTypes::UnitState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DataTypes::UnitState>() {
  return ::DataTypes::UnitState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_datatypes_2funit_2eproto__INCLUDED
