// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datatypes/person.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "datatypes/person.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace DataTypes {

namespace {

const ::google::protobuf::Descriptor* Person_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Person_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Gender_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Rights_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_datatypes_2fperson_2eproto() {
  protobuf_AddDesc_datatypes_2fperson_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "datatypes/person.proto");
  GOOGLE_CHECK(file != NULL);
  Person_descriptor_ = file->message_type(0);
  static const int Person_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, first_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, last_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, photos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, cards_),
  };
  Person_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Person_descriptor_,
      Person::default_instance_,
      Person_offsets_,
      -1,
      -1,
      -1,
      sizeof(Person),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Person, _is_default_instance_));
  Gender_descriptor_ = file->enum_type(0);
  Rights_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_datatypes_2fperson_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Person_descriptor_, &Person::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_datatypes_2fperson_2eproto() {
  delete Person::default_instance_;
  delete Person_reflection_;
}

void protobuf_AddDesc_datatypes_2fperson_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::DataTypes::protobuf_AddDesc_datatypes_2fcard_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fphoto_2eproto();
  ::DataTypes::protobuf_AddDesc_datatypes_2fkey_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026datatypes/person.proto\022\tDataTypes\032\024dat"
    "atypes/card.proto\032\025datatypes/photo.proto"
    "\032\023datatypes/key.proto\"\215\001\n\006Person\022\032\n\002id\030\001"
    " \001(\0132\016.DataTypes.Key\022\022\n\nfirst_name\030\002 \001(\t"
    "\022\021\n\tlast_name\030\003 \001(\t\022 \n\006photos\030\004 \003(\0132\020.Da"
    "taTypes.Photo\022\036\n\005cards\030\005 \003(\0132\017.DataTypes"
    ".Card*6\n\006Gender\022\026\n\022Gender_Unspecified\020\000\022"
    "\010\n\004Male\020\001\022\n\n\006Female\020\002*W\n\006Rights\022\026\n\022Right"
    "s_Unspecified\020\000\022\n\n\006Custom\020\001\022\014\n\010Operator\020"
    "\002\022\013\n\007Manager\020\003\022\016\n\nSupervisor\020\004BK\n\007ex.grp"
    "cZ:github.com/Enebra/ServiceCoordinator/"
    "grpc/datatypes/person\242\002\003RTGb\006proto3", 475);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "datatypes/person.proto", &protobuf_RegisterTypes);
  Person::default_instance_ = new Person();
  Person::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_datatypes_2fperson_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_datatypes_2fperson_2eproto {
  StaticDescriptorInitializer_datatypes_2fperson_2eproto() {
    protobuf_AddDesc_datatypes_2fperson_2eproto();
  }
} static_descriptor_initializer_datatypes_2fperson_2eproto_;
const ::google::protobuf::EnumDescriptor* Gender_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Gender_descriptor_;
}
bool Gender_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Rights_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Rights_descriptor_;
}
bool Rights_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Person::kIdFieldNumber;
const int Person::kFirstNameFieldNumber;
const int Person::kLastNameFieldNumber;
const int Person::kPhotosFieldNumber;
const int Person::kCardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Person::Person()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DataTypes.Person)
}

void Person::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  id_ = const_cast< ::DataTypes::Key*>(&::DataTypes::Key::default_instance());
}

Person::Person(const Person& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DataTypes.Person)
}

void Person::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = NULL;
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Person::~Person() {
  // @@protoc_insertion_point(destructor:DataTypes.Person)
  SharedDtor();
}

void Person::SharedDtor() {
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete id_;
  }
}

void Person::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Person::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Person_descriptor_;
}

const Person& Person::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_datatypes_2fperson_2eproto();
  return *default_instance_;
}

Person* Person::default_instance_ = NULL;

Person* Person::New(::google::protobuf::Arena* arena) const {
  Person* n = new Person;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Person::Clear() {
// @@protoc_insertion_point(message_clear_start:DataTypes.Person)
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photos_.Clear();
  cards_.Clear();
}

bool Person::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DataTypes.Person)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .DataTypes.Key id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_first_name;
        break;
      }

      // optional string first_name = 2;
      case 2: {
        if (tag == 18) {
         parse_first_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_name().data(), this->first_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.Person.first_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_last_name;
        break;
      }

      // optional string last_name = 3;
      case 3: {
        if (tag == 26) {
         parse_last_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_name().data(), this->last_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DataTypes.Person.last_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_photos;
        break;
      }

      // repeated .DataTypes.Photo photos = 4;
      case 4: {
        if (tag == 34) {
         parse_photos:
          DO_(input->IncrementRecursionDepth());
         parse_loop_photos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_photos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_photos;
        if (input->ExpectTag(42)) goto parse_loop_cards;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .DataTypes.Card cards = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_cards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cards()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_cards;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DataTypes.Person)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DataTypes.Person)
  return false;
#undef DO_
}

void Person::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DataTypes.Person)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->id_, output);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Person.first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->first_name(), output);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Person.last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->last_name(), output);
  }

  // repeated .DataTypes.Photo photos = 4;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->photos(i), output);
  }

  // repeated .DataTypes.Card cards = 5;
  for (unsigned int i = 0, n = this->cards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cards(i), output);
  }

  // @@protoc_insertion_point(serialize_end:DataTypes.Person)
}

::google::protobuf::uint8* Person::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DataTypes.Person)
  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->id_, target);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), this->first_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Person.first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->first_name(), target);
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), this->last_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DataTypes.Person.last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->last_name(), target);
  }

  // repeated .DataTypes.Photo photos = 4;
  for (unsigned int i = 0, n = this->photos_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->photos(i), target);
  }

  // repeated .DataTypes.Card cards = 5;
  for (unsigned int i = 0, n = this->cards_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->cards(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:DataTypes.Person)
  return target;
}

int Person::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:DataTypes.Person)
  int total_size = 0;

  // optional .DataTypes.Key id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_);
  }

  // optional string first_name = 2;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_name());
  }

  // optional string last_name = 3;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_name());
  }

  // repeated .DataTypes.Photo photos = 4;
  total_size += 1 * this->photos_size();
  for (int i = 0; i < this->photos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->photos(i));
  }

  // repeated .DataTypes.Card cards = 5;
  total_size += 1 * this->cards_size();
  for (int i = 0; i < this->cards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cards(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Person::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DataTypes.Person)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Person* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Person>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DataTypes.Person)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DataTypes.Person)
    MergeFrom(*source);
  }
}

void Person::MergeFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DataTypes.Person)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  photos_.MergeFrom(from.photos_);
  cards_.MergeFrom(from.cards_);
  if (from.has_id()) {
    mutable_id()->::DataTypes::Key::MergeFrom(from.id());
  }
  if (from.first_name().size() > 0) {

    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  if (from.last_name().size() > 0) {

    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
}

void Person::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DataTypes.Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Person::CopyFrom(const Person& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DataTypes.Person)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Person::IsInitialized() const {

  return true;
}

void Person::Swap(Person* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Person::InternalSwap(Person* other) {
  std::swap(id_, other->id_);
  first_name_.Swap(&other->first_name_);
  last_name_.Swap(&other->last_name_);
  photos_.UnsafeArenaSwap(&other->photos_);
  cards_.UnsafeArenaSwap(&other->cards_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Person::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Person_descriptor_;
  metadata.reflection = Person_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Person

// optional .DataTypes.Key id = 1;
bool Person::has_id() const {
  return !_is_default_instance_ && id_ != NULL;
}
void Person::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::DataTypes::Key& Person::id() const {
  // @@protoc_insertion_point(field_get:DataTypes.Person.id)
  return id_ != NULL ? *id_ : *default_instance_->id_;
}
::DataTypes::Key* Person::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::DataTypes::Key;
  }
  // @@protoc_insertion_point(field_mutable:DataTypes.Person.id)
  return id_;
}
::DataTypes::Key* Person::release_id() {
  // @@protoc_insertion_point(field_release:DataTypes.Person.id)
  
  ::DataTypes::Key* temp = id_;
  id_ = NULL;
  return temp;
}
void Person::set_allocated_id(::DataTypes::Key* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Person.id)
}

// optional string first_name = 2;
void Person::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Person::first_name() const {
  // @@protoc_insertion_point(field_get:DataTypes.Person.first_name)
  return first_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Person::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.Person.first_name)
}
 void Person::set_first_name(const char* value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.Person.first_name)
}
 void Person::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.Person.first_name)
}
 ::std::string* Person::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.Person.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Person::release_first_name() {
  // @@protoc_insertion_point(field_release:DataTypes.Person.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Person::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Person.first_name)
}

// optional string last_name = 3;
void Person::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Person::last_name() const {
  // @@protoc_insertion_point(field_get:DataTypes.Person.last_name)
  return last_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Person::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DataTypes.Person.last_name)
}
 void Person::set_last_name(const char* value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DataTypes.Person.last_name)
}
 void Person::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DataTypes.Person.last_name)
}
 ::std::string* Person::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:DataTypes.Person.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Person::release_last_name() {
  // @@protoc_insertion_point(field_release:DataTypes.Person.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Person::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:DataTypes.Person.last_name)
}

// repeated .DataTypes.Photo photos = 4;
int Person::photos_size() const {
  return photos_.size();
}
void Person::clear_photos() {
  photos_.Clear();
}
const ::DataTypes::Photo& Person::photos(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Person.photos)
  return photos_.Get(index);
}
::DataTypes::Photo* Person::mutable_photos(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Person.photos)
  return photos_.Mutable(index);
}
::DataTypes::Photo* Person::add_photos() {
  // @@protoc_insertion_point(field_add:DataTypes.Person.photos)
  return photos_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Photo >*
Person::mutable_photos() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Person.photos)
  return &photos_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Photo >&
Person::photos() const {
  // @@protoc_insertion_point(field_list:DataTypes.Person.photos)
  return photos_;
}

// repeated .DataTypes.Card cards = 5;
int Person::cards_size() const {
  return cards_.size();
}
void Person::clear_cards() {
  cards_.Clear();
}
const ::DataTypes::Card& Person::cards(int index) const {
  // @@protoc_insertion_point(field_get:DataTypes.Person.cards)
  return cards_.Get(index);
}
::DataTypes::Card* Person::mutable_cards(int index) {
  // @@protoc_insertion_point(field_mutable:DataTypes.Person.cards)
  return cards_.Mutable(index);
}
::DataTypes::Card* Person::add_cards() {
  // @@protoc_insertion_point(field_add:DataTypes.Person.cards)
  return cards_.Add();
}
::google::protobuf::RepeatedPtrField< ::DataTypes::Card >*
Person::mutable_cards() {
  // @@protoc_insertion_point(field_mutable_list:DataTypes.Person.cards)
  return &cards_;
}
const ::google::protobuf::RepeatedPtrField< ::DataTypes::Card >&
Person::cards() const {
  // @@protoc_insertion_point(field_list:DataTypes.Person.cards)
  return cards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace DataTypes

// @@protoc_insertion_point(global_scope)
